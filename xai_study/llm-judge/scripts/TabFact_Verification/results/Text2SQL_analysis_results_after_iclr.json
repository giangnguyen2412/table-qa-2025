{
    "FP/test-1961.html": {
        "method": "Text2SQL",
        "subfolder": "FP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "No",
        "Model_Prediction": "True",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> 21.16 (142) home team score had a away team of fitzroy</h3>\n<h3>Input Table: 1982 vfl season</h3>\n<div class=\"step\">\n<table>\n<tr><td>home_team</td><td>home_team_score</td><td>away_team</td><td>away_team_score</td><td>venue</td><td>crowd</td><td>date</td></tr><tr><td>footscray</td><td>7.8 (50)</td><td>richmond</td><td>16.16 (112)</td><td>western oval</td><td>16259</td><td>1982-08-07</td></tr><tr><td>fitzroy</td><td>21.16 (142)</td><td>st kilda</td><td>11.12 (78)</td><td>junction oval</td><td>9987</td><td>1982-08-07</td></tr><tr><td>north melbourne</td><td>22.18 (150)</td><td>geelong</td><td>11.16 (82)</td><td>arden street oval</td><td>11634</td><td>1982-08-07</td></tr><tr><td>hawthorn</td><td>20.20 (140)</td><td>collingwood</td><td>16.22 (118)</td><td>princes park</td><td>18699</td><td>1982-08-07</td></tr><tr><td>essendon</td><td>20.17 (137)</td><td>melbourne</td><td>14.17 (101)</td><td>vfl park</td><td>28379</td><td>1982-08-07</td></tr><tr><td>swans</td><td>15.16 (106)</td><td>carlton</td><td>9.18 (72)</td><td>scg</td><td>25601</td><td>1982-08-01</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT home_team_score FROM table_sql WHERE home_team = 'fitzroy') = '21.16 (142)' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-937.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the game on february 4th had new jersey as the home team</h3>\n<h3>Input Table: none</h3>\n<div class=\"step\">\n<table>\n<tr><td>date</td><td>visitor</td><td>score</td><td>home</td><td>record</td></tr><tr><td>9999-02-03</td><td>ny islanders</td><td>7 - 2</td><td>new jersey</td><td>11 - 32 - 11</td></tr><tr><td>9999-02-05</td><td>new jersey</td><td>4 - 5</td><td>washington</td><td>11 - 33 - 11</td></tr><tr><td>9999-02-06</td><td>vancouver</td><td>4 - 4</td><td>new jersey</td><td>11 - 33 - 12</td></tr><tr><td>9999-02-09</td><td>new jersey</td><td>4 - 5</td><td>chicago</td><td>11 - 34 - 12</td></tr><tr><td>01-02-12</td><td>new jersey</td><td>1 - 5</td><td>st louis</td><td>11 - 35 - 12</td></tr><tr><td>01-02-15</td><td>minnesota</td><td>3 - 2</td><td>new jersey</td><td>11 - 36 - 12</td></tr><tr><td>9999-02-20</td><td>new jersey</td><td>0 - 3</td><td>philadelphia</td><td>11 - 37 - 12</td></tr><tr><td>01-02-21</td><td>buffalo</td><td>4 - 4</td><td>new jersey</td><td>11 - 37 - 13</td></tr><tr><td>9999-02-24</td><td>detroit</td><td>1 - 4</td><td>new jersey</td><td>12 - 37 - 13</td></tr><tr><td>9999-02-26</td><td>new jersey</td><td>4 - 5</td><td>pittsburgh</td><td>12 - 38 - 13</td></tr><tr><td>9999-02-27</td><td>new jersey</td><td>2 - 6</td><td>buffalo</td><td>12 - 39 - 13</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE date = '9999-02-04' \nAND home = 'new jersey';</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-90.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "No",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the last game of the season happened on 11 february 2006</h3>\n<h3>Input Table: 2005 - 06 manchester united f.c. season</h3>\n<div class=\"step\">\n<table>\n<tr><td>date</td><td>opponents</td><td>h_/_a</td><td>result_f_-_a</td><td>attendance</td><td>league_position</td></tr><tr><td>2005-08-13</td><td>everton</td><td>a</td><td>2 - 0</td><td>38610</td><td>4th</td></tr><tr><td>2005-08-20</td><td>aston villa</td><td>h</td><td>1 - 0</td><td>67934</td><td>4th</td></tr><tr><td>2005-08-28</td><td>newcastle united</td><td>a</td><td>2 - 0</td><td>52327</td><td>4th</td></tr><tr><td>2005-09-10</td><td>manchester city</td><td>h</td><td>1 - 1</td><td>67839</td><td>4th</td></tr><tr><td>2005-09-18</td><td>liverpool</td><td>a</td><td>0 - 0</td><td>44917</td><td>3rd</td></tr><tr><td>2005-09-24</td><td>blackburn rovers</td><td>h</td><td>1 - 2</td><td>67765</td><td>6th</td></tr><tr><td>2005-10-01</td><td>fulham</td><td>a</td><td>3 - 2</td><td>21862</td><td>4th</td></tr><tr><td>2005-10-15</td><td>sunderland</td><td>a</td><td>3 - 1</td><td>39085</td><td>3rd</td></tr><tr><td>2005-10-22</td><td>tottenham hotspur</td><td>h</td><td>1 - 1</td><td>67856</td><td>5th</td></tr><tr><td>2005-10-29</td><td>middlesbrough</td><td>a</td><td>1 - 4</td><td>30579</td><td>7th</td></tr><tr><td>2005-11-06</td><td>chelsea</td><td>h</td><td>1 - 0</td><td>67864</td><td>4th</td></tr><tr><td>2005-11-19</td><td>charlton athletic</td><td>a</td><td>3 - 1</td><td>26730</td><td>3rd</td></tr><tr><td>2005-11-27</td><td>west ham united</td><td>a</td><td>2 - 1</td><td>34755</td><td>2nd</td></tr><tr><td>2005-12-03</td><td>portsmouth</td><td>h</td><td>3 - 0</td><td>67684</td><td>2nd</td></tr><tr><td>2005-12-11</td><td>everton</td><td>h</td><td>1 - 1</td><td>67831</td><td>3rd</td></tr><tr><td>2005-12-14</td><td>wigan athletic</td><td>h</td><td>4 - 0</td><td>67793</td><td>2nd</td></tr><tr><td>2005-12-17</td><td>aston villa</td><td>a</td><td>2 - 0</td><td>37128</td><td>2nd</td></tr><tr><td>2005-12-26</td><td>west bromwich albion</td><td>h</td><td>3 - 0</td><td>67972</td><td>2nd</td></tr><tr><td>2005-12-28</td><td>birmingham city</td><td>a</td><td>2 - 2</td><td>28459</td><td>2nd</td></tr><tr><td>2005-12-31</td><td>bolton wanderers</td><td>h</td><td>4 - 1</td><td>67858</td><td>2nd</td></tr><tr><td>2006-01-03</td><td>arsenal</td><td>a</td><td>0 - 0</td><td>38313</td><td>2nd</td></tr><tr><td>2006-01-14</td><td>manchester city</td><td>a</td><td>1 - 3</td><td>47192</td><td>2nd</td></tr><tr><td>2006-01-22</td><td>liverpool</td><td>h</td><td>1 - 0</td><td>67874</td><td>2nd</td></tr><tr><td>2006-02-01</td><td>blackburn rovers</td><td>a</td><td>3 - 4</td><td>25484</td><td>2nd</td></tr><tr><td>2006-02-04</td><td>fulham</td><td>h</td><td>4 - 2</td><td>67844</td><td>2nd</td></tr><tr><td>2006-02-11</td><td>portsmouth</td><td>a</td><td>3 - 1</td><td>20206</td><td>2nd</td></tr><tr><td>2006-03-06</td><td>wigan athletic</td><td>a</td><td>2 - 1</td><td>23524</td><td>2nd</td></tr><tr><td>2006-03-12</td><td>newcastle united</td><td>h</td><td>2 - 0</td><td>67858</td><td>2nd</td></tr><tr><td>2006-03-18</td><td>west bromwich albion</td><td>a</td><td>2 - 1</td><td>27623</td><td>2nd</td></tr><tr><td>2006-03-26</td><td>birmingham city</td><td>h</td><td>3 - 0</td><td>69070</td><td>2nd</td></tr><tr><td>2006-03-29</td><td>west ham united</td><td>h</td><td>1 - 0</td><td>69522</td><td>2nd</td></tr><tr><td>2006-04-01</td><td>bolton wanderers</td><td>a</td><td>2 - 1</td><td>27718</td><td>2nd</td></tr><tr><td>2006-04-09</td><td>arsenal</td><td>h</td><td>2 - 0</td><td>70908</td><td>2nd</td></tr><tr><td>2006-04-14</td><td>sunderland</td><td>h</td><td>0 - 0</td><td>72519</td><td>2nd</td></tr><tr><td>2006-04-17</td><td>tottenham hotspur</td><td>a</td><td>2 - 1</td><td>36141</td><td>2nd</td></tr><tr><td>2006-04-29</td><td>chelsea</td><td>a</td><td>0 - 3</td><td>42219</td><td>2nd</td></tr><tr><td>2006-05-01</td><td>middlesbrough</td><td>h</td><td>0 - 0</td><td>69531</td><td>2nd</td></tr><tr><td>2006-05-07</td><td>charlton athletic</td><td>h</td><td>4 - 0</td><td>73006</td><td>2nd</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT MAX(date) FROM table_sql) = '2006-02-11' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-1905.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "No",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the top two teams have the same number of points but separated by a goal difference</h3>\n<h3>Input Table: 1940 in brazilian football</h3>\n<div class=\"step\">\n<table>\n<tr><td>position</td><td>team</td><td>points</td><td>played</td><td>against</td><td>difference</td></tr><tr><td>1</td><td>flamengo</td><td>13</td><td>8</td><td>12</td><td>8</td></tr><tr><td>2</td><td>fluminense</td><td>13</td><td>8</td><td>15</td><td>10</td></tr><tr><td>3</td><td>corinthians</td><td>9</td><td>8</td><td>15</td><td>4</td></tr><tr><td>4</td><td>palestra it\u00e1lia</td><td>8</td><td>8</td><td>19</td><td>3</td></tr><tr><td>5</td><td>portuguesa</td><td>7</td><td>8</td><td>23</td><td>- 10</td></tr><tr><td>6</td><td>botafogo</td><td>6</td><td>8</td><td>25</td><td>0</td></tr><tr><td>7</td><td>vasco da gama</td><td>6</td><td>8</td><td>19</td><td>- 2</td></tr><tr><td>8</td><td>am\u00e9rica</td><td>6</td><td>8</td><td>25</td><td>- 10</td></tr><tr><td>9</td><td>s\u00e3o paulo</td><td>4</td><td>8</td><td>24</td><td>- 13</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT points FROM table_sql WHERE position = 1) = \n             (SELECT points FROM table_sql WHERE position = 2) \n             AND (SELECT difference FROM table_sql WHERE position = 1) != \n                 (SELECT difference FROM table_sql WHERE position = 2) \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FN/test-1205.html": {
        "method": "Text2SQL",
        "subfolder": "FN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "No",
        "Model_Prediction": "False",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> on march 19 , 1984 , plymouth argyle played derby county</h3>\n<h3>Input Table: 1983 - 84 fa cup</h3>\n<div class=\"step\">\n<table>\n<tr><td>tie_no</td><td>home_team</td><td>score</td><td>away_team</td><td>date</td></tr><tr><td>1</td><td>notts county</td><td>1 - 2</td><td>everton</td><td>1984-03-10</td></tr><tr><td>2</td><td>sheffield wednesday</td><td>0 - 0</td><td>southampton</td><td>1984-03-11</td></tr><tr><td>replay</td><td>southampton</td><td>5 - 1</td><td>sheffield wednesday</td><td>1984-03-20</td></tr><tr><td>3</td><td>plymouth argyle</td><td>0 - 0</td><td>derby county</td><td>1984-03-10</td></tr><tr><td>replay</td><td>derby county</td><td>0 - 1</td><td>plymouth argyle</td><td>1984-03-14</td></tr><tr><td>4</td><td>birmingham city</td><td>1 - 3</td><td>watford</td><td>1984-03-10</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE date = '1984-03-19' \nAND (home_team = 'plymouth argyle' OR away_team = 'plymouth argyle') \nAND (home_team = 'derby county' OR away_team = 'derby county');</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-31.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the attendance was less than 20000 over five times between august 4th and 6th</h3>\n<h3>Input Table: 1997 colorado rockies season</h3>\n<div class=\"step\">\n<table>\n<tr><td>date</td><td>opponent</td><td>score</td><td>loss</td><td>attendance</td><td>record</td></tr><tr><td>9999-08-01</td><td>pirates</td><td>7 - 6</td><td>rinc\u00f3n (4 - 5)</td><td>22657</td><td>52 - 58</td></tr><tr><td>9999-08-02</td><td>pirates</td><td>6 - 5</td><td>swift (4 - 5)</td><td>32388</td><td>52 - 59</td></tr><tr><td>9999-08-03</td><td>pirates</td><td>8 - 4</td><td>reed (3 - 5)</td><td>24989</td><td>52 - 60</td></tr><tr><td>9999-08-04</td><td>phillies</td><td>7 - 3</td><td>castillo (8 - 10)</td><td>15230</td><td>52 - 61</td></tr><tr><td>9999-08-05</td><td>phillies</td><td>4 - 2</td><td>bottalico (2 - 4)</td><td>16428</td><td>53 - 61</td></tr><tr><td>9999-08-06</td><td>mets</td><td>4 - 0</td><td>mlicki (5 - 8)</td><td>26633</td><td>54 - 61</td></tr><tr><td>9999-08-07</td><td>mets</td><td>12 - 4</td><td>swift (4 - 6)</td><td>29536</td><td>54 - 62</td></tr><tr><td>9999-08-08</td><td>pirates</td><td>5 - 3</td><td>lieber (6 - 12)</td><td>48262</td><td>55 - 62</td></tr><tr><td>9999-08-09</td><td>pirates</td><td>8 - 7</td><td>rinc\u00f3n (4 - 6)</td><td>48323</td><td>56 - 62</td></tr><tr><td>9999-08-10</td><td>pirates</td><td>8 - 7</td><td>wilkins (7 - 3)</td><td>48018</td><td>57 - 62</td></tr><tr><td>9999-08-12</td><td>phillies</td><td>5 - 0</td><td>thomson (4 - 7)</td><td>48228</td><td>57 - 63</td></tr><tr><td>9999-08-13</td><td>phillies</td><td>12 - 8</td><td>wright (6 - 8)</td><td>48491</td><td>57 - 64</td></tr><tr><td>9999-08-15</td><td>mets</td><td>6 - 2</td><td>reed (10 - 6)</td><td>48308</td><td>58 - 64</td></tr><tr><td>9999-08-16</td><td>mets</td><td>7 - 5</td><td>mcmichael (7 - 10)</td><td>48311</td><td>59 - 64</td></tr><tr><td>9999-08-17</td><td>mets</td><td>6 - 4</td><td>mlicki (5 - 10)</td><td>48440</td><td>60 - 64</td></tr><tr><td>9999-08-19</td><td>reds</td><td>6 - 5</td><td>wright (6 - 9)</td><td>31722</td><td>60 - 65</td></tr><tr><td>9999-08-20</td><td>reds</td><td>5 - 3</td><td>white (1 - 1)</td><td>21968</td><td>61 - 65</td></tr><tr><td>9999-08-21</td><td>astros</td><td>10 - 4</td><td>bailey (9 - 9)</td><td>22962</td><td>61 - 66</td></tr><tr><td>9999-08-22</td><td>astros</td><td>9 - 1</td><td>thomson (5 - 8)</td><td>33061</td><td>61 - 67</td></tr><tr><td>9999-08-23</td><td>astros</td><td>6 - 3</td><td>hudek (0 - 2)</td><td>32374</td><td>62 - 67</td></tr><tr><td>9999-08-24</td><td>astros</td><td>3 - 1</td><td>wright (6 - 10)</td><td>28918</td><td>62 - 68</td></tr><tr><td>9999-08-25</td><td>reds</td><td>7 - 6</td><td>castillo (10 - 11)</td><td>48143</td><td>62 - 69</td></tr><tr><td>9999-08-25</td><td>reds</td><td>6 - 4</td><td>hutton (3 - 2)</td><td>48081</td><td>62 - 70</td></tr><tr><td>9999-08-26</td><td>reds</td><td>9 - 5</td><td>mart\u00ednez (1 - 1)</td><td>48063</td><td>63 - 70</td></tr><tr><td>9999-08-27</td><td>reds</td><td>7 - 5</td><td>remlinger (6 - 6)</td><td>48032</td><td>64 - 70</td></tr><tr><td>9999-08-28</td><td>mariners</td><td>9 - 5</td><td>olivares (6 - 9)</td><td>48422</td><td>65 - 70</td></tr><tr><td>9999-08-29</td><td>mariners</td><td>6 - 5</td><td>timlin (3 - 3)</td><td>48178</td><td>66 - 70</td></tr><tr><td>9999-08-30</td><td>athletics</td><td>4 - 3</td><td>mohler (1 - 10)</td><td>48308</td><td>67 - 70</td></tr><tr><td>9999-08-31</td><td>athletics</td><td>10 - 4</td><td>oquist (2 - 5)</td><td>48041</td><td>68 - 70</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) >= 5 THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql \nWHERE date >= '9999-08-04' \nAND date <= '9999-08-06' \nAND attendance < 20000;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-471.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> gene borek who played at t6 with a score of 73 + 69 = 142 belong to the united states</h3>\n<h3>Input Table: 1973 u.s. open (golf)</h3>\n<div class=\"step\">\n<table>\n<tr><td>place</td><td>player</td><td>country</td><td>score</td><td>to_par</td></tr><tr><td>1</td><td>gary player</td><td>south africa</td><td>67 + 70 = 137</td><td>- 5</td></tr><tr><td>2</td><td>jim colbert</td><td>united states</td><td>70 + 68 = 138</td><td>- 4</td></tr><tr><td>t3</td><td>jack nicklaus</td><td>united states</td><td>71 + 69 = 140</td><td>- 2</td></tr><tr><td>t3</td><td>johnny miller</td><td>united states</td><td>71 + 69 = 140</td><td>- 2</td></tr><tr><td>t3</td><td>bob charles</td><td>new zealand</td><td>71 + 69 = 140</td><td>- 2</td></tr><tr><td>t6</td><td>gene borek</td><td>united states</td><td>77 + 65 = 142</td><td>e</td></tr><tr><td>t6</td><td>julius boros</td><td>united states</td><td>73 + 69 = 142</td><td>e</td></tr><tr><td>t6</td><td>tom weiskopf</td><td>united states</td><td>73 + 69 = 142</td><td>e</td></tr><tr><td>t6</td><td>arnold palmer</td><td>united states</td><td>71 + 71 = 142</td><td>e</td></tr><tr><td>t6</td><td>lee trevino</td><td>united states</td><td>70 + 72 = 142</td><td>e</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT country FROM table_sql WHERE place = 't6' AND player = 'gene borek' AND score = '73 + 69 = 142') = 'united states' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FN/test-607.html": {
        "method": "Text2SQL",
        "subfolder": "FN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "No",
        "Model_Prediction": "False",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> brook lopez led the team in points for 5 straight games</h3>\n<h3>Input Table: 2010 - 11 new jersey nets season</h3>\n<div class=\"step\">\n<table>\n<tr><td>game</td><td>date</td><td>team</td><td>score</td><td>high_points</td><td>high_rebounds</td><td>high_assists</td><td>location_attendance</td><td>record</td></tr><tr><td>75</td><td>9999-04-01</td><td>philadelphia</td><td>l 90 - 115 (ot)</td><td>brandan wright (15)</td><td>brandan wright (11)</td><td>deron williams (7)</td><td>wells fargo center 16695</td><td>23 - 52</td></tr><tr><td>76</td><td>9999-04-03</td><td>miami</td><td>l 94 - 108 (ot)</td><td>deron williams (18)</td><td>travis outlaw (9)</td><td>deron williams (9)</td><td>prudential center 18711</td><td>23 - 53</td></tr><tr><td>77</td><td>'9999-04-05'</td><td>minnesota</td><td>w 107 - 105 (ot)</td><td>brook lopez (30)</td><td>brook lopez (12)</td><td>deron williams (21)</td><td>prudential center 13461</td><td>24 - 53</td></tr><tr><td>78</td><td>9999-04-06</td><td>detroit</td><td>l 109 - 116 (ot)</td><td>brook lopez (39)</td><td>brook lopez (7)</td><td>jordan farmar (11)</td><td>the palace of auburn hills 14554</td><td>24 - 54</td></tr><tr><td>79</td><td>9999-04-08</td><td>new york</td><td>l 93 - 116 (ot)</td><td>brook lopez (27)</td><td>jordan farmar (8)</td><td>jordan farmar (9)</td><td>prudential center 18023</td><td>24 - 55</td></tr><tr><td>80</td><td>'9999-04-10'</td><td>toronto</td><td>l 92 - 99 (ot)</td><td>brook lopez (35)</td><td>brook lopez (11)</td><td>jordan farmar (7)</td><td>air canada centre 17755</td><td>24 - 56</td></tr><tr><td>81</td><td>9999-04-11</td><td>charlotte</td><td>l 103 - 105 (ot)</td><td>brook lopez (31)</td><td>dan gadzuric (8)</td><td>jordan farmar (9)</td><td>prudential center 13853</td><td>24 - 57</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT COUNT(*) FROM table_sql WHERE high_points = (SELECT MAX(high_points) FROM table_sql) AND game >= 75 AND game <= 79) = 5 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-1993.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the theme of d - 10 locomotive by artist dan fell was from 2002</h3>\n<h3>Input Table: royal canadian mint numismatic coins (2000s)</h3>\n<div class=\"step\">\n<table>\n<tr><td>year</td><td>theme</td><td>artist</td><td>mintage</td><td>issue_price</td></tr><tr><td>2000</td><td>steam buggy</td><td>john mardon</td><td>44367</td><td>59.95</td></tr><tr><td>2000</td><td>the bluenose</td><td>j franklin wright</td><td>included in steam buggy</td><td>59.95</td></tr><tr><td>2000</td><td>the toronto</td><td>john mardon</td><td>included in steam buggy</td><td>59.95</td></tr><tr><td>2001</td><td>the russell light four</td><td>john mardon</td><td>41828</td><td>59.95</td></tr><tr><td>2001</td><td>the marco polo</td><td>j franklin wright</td><td>included in the russell</td><td>59.95</td></tr><tr><td>2001</td><td>the scotia</td><td>don curley</td><td>included in the russell</td><td>59.95</td></tr><tr><td>2002</td><td>the gray - dort</td><td>john mardon</td><td>35944</td><td>59.95</td></tr><tr><td>2002</td><td>the william lawrence</td><td>bonnie ross</td><td>included in the gray - dort</td><td>59.95</td></tr><tr><td>2002</td><td>d - 10 locomotive</td><td>dan fell</td><td>included in the gray - dort</td><td>59.95</td></tr><tr><td>2003</td><td>hmcs bras dor</td><td>don curley</td><td>31997</td><td>59.95</td></tr><tr><td>2003</td><td>cnr fa - 1 diesel electric</td><td>john mardon</td><td>included in hmcs bras dor</td><td>59.95</td></tr><tr><td>2003</td><td>bricklin sv - 1</td><td>brian hughes</td><td>included in hmcs bras dor</td><td>59.95</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE theme = 'd - 10 locomotive' \nAND artist = 'dan fell' \nAND year = 2002;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FP/test-1287.html": {
        "method": "Text2SQL",
        "subfolder": "FP",
        "LLM_analysis": "No",
        "Actual_Correctness": "No",
        "Model_Prediction": "True",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> paphos is the player being released by mkd</h3>\n<h3>Input Table: 2008 - 09 apoel f.c. season</h3>\n<div class=\"step\">\n<table>\n<tr><td>nat</td><td>name</td><td>moving_to</td><td>type</td><td>transfer_window</td><td>transfer_fee</td><td>source</td></tr><tr><td>gre</td><td>machlas</td><td>retired</td><td>retirement</td><td>summer</td><td>-</td><td>contragr</td></tr><tr><td>cyp</td><td>makrides</td><td>metalurh donetsk</td><td>end of contract</td><td>summer</td><td>free</td><td>kerkidanet</td></tr><tr><td>ser</td><td>\u010dorovi\u0107</td><td>ael limassol</td><td>loan return</td><td>summer</td><td>-</td><td>-</td></tr><tr><td>cyp</td><td>louka</td><td>ael limassol</td><td>end of contract</td><td>summer</td><td>free</td><td>kerkidanet</td></tr><tr><td>gre</td><td>kapsis</td><td>levadiakos</td><td>end of contract</td><td>summer</td><td>free</td><td>-</td></tr><tr><td>cyp</td><td>daskalakis</td><td>aek larnaca</td><td>end of contract</td><td>summer</td><td>free</td><td>apoelnet</td></tr><tr><td>bra</td><td>z\u00e9 carlos</td><td>trofense</td><td>contract termination</td><td>summer</td><td>free</td><td>apoelfccomcy</td></tr><tr><td>cyp</td><td>vourkou</td><td>doxa katokopia</td><td>loan</td><td>summer</td><td>free</td><td>-</td></tr><tr><td>cyp</td><td>panayiotou</td><td>digenis morphou</td><td>loan</td><td>summer</td><td>free</td><td>-</td></tr><tr><td>mkd</td><td>nikolovski</td><td>aep paphos</td><td>mutual consent</td><td>winter</td><td>free</td><td>-</td></tr><tr><td>cyp</td><td>papathanasiou</td><td>ermis aradippou</td><td>loan</td><td>winter</td><td>free</td><td>-</td></tr><tr><td>por</td><td>paulo costa</td><td>anorthosis famagusta</td><td>mutual consent loan return</td><td>winter</td><td>free</td><td>apoelfccomcy</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql \nWHERE nat = 'mkd' \nAND moving_to = 'paphos' \nAND type = 'end of contract';</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-467.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> bob charles , from new zealand , was tied for 3rd</h3>\n<h3>Input Table: 1973 u.s. open (golf)</h3>\n<div class=\"step\">\n<table>\n<tr><td>place</td><td>player</td><td>country</td><td>score</td><td>to_par</td></tr><tr><td>1</td><td>gary player</td><td>south africa</td><td>67 + 70 = 137</td><td>- 5</td></tr><tr><td>2</td><td>jim colbert</td><td>united states</td><td>70 + 68 = 138</td><td>- 4</td></tr><tr><td>t3</td><td>jack nicklaus</td><td>united states</td><td>71 + 69 = 140</td><td>- 2</td></tr><tr><td>t3</td><td>johnny miller</td><td>united states</td><td>71 + 69 = 140</td><td>- 2</td></tr><tr><td>t3</td><td>bob charles</td><td>new zealand</td><td>71 + 69 = 140</td><td>- 2</td></tr><tr><td>t6</td><td>gene borek</td><td>united states</td><td>77 + 65 = 142</td><td>e</td></tr><tr><td>t6</td><td>julius boros</td><td>united states</td><td>73 + 69 = 142</td><td>e</td></tr><tr><td>t6</td><td>tom weiskopf</td><td>united states</td><td>73 + 69 = 142</td><td>e</td></tr><tr><td>t6</td><td>arnold palmer</td><td>united states</td><td>71 + 71 = 142</td><td>e</td></tr><tr><td>t6</td><td>lee trevino</td><td>united states</td><td>70 + 72 = 142</td><td>e</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE place = 't3' \nAND player = 'bob charles' \nAND country = 'new zealand';</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FN/test-1926.html": {
        "method": "Text2SQL",
        "subfolder": "FN",
        "LLM_analysis": "No",
        "Actual_Correctness": "No",
        "Model_Prediction": "False",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> stage 1 was the only stage where a mountains classification wasn't awarded</h3>\n<h3>Input Table: 2010 vuelta a espa\u00f1a</h3>\n<div class=\"step\">\n<table>\n<tr><td>stage</td><td>winner</td><td>general_classification</td><td>points_classification</td><td>mountains_classification</td><td>combination_classification</td><td>team_classification</td></tr><tr><td>1</td><td>team htc - columbia</td><td>mark cavendish</td><td>mark cavendish 1</td><td>not awarded</td><td>mark cavendish</td><td>team htc - columbia</td></tr><tr><td>2</td><td>yauheni hutarovich</td><td>mark cavendish</td><td>yauheni hutarovich</td><td>micka\u00ebl delage</td><td>javier ram\u00edrez</td><td>team htc - columbia</td></tr><tr><td>3</td><td>philippe gilbert</td><td>philippe gilbert</td><td>philippe gilbert</td><td>seraf\u00edn mart\u00ednez</td><td>seraf\u00edn mart\u00ednez</td><td>team htc - columbia</td></tr><tr><td>4</td><td>igor ant\u00f3n</td><td>philippe gilbert</td><td>igor ant\u00f3n</td><td>seraf\u00edn mart\u00ednez</td><td>vincenzo nibali</td><td>caisse d'epargne</td></tr><tr><td>5</td><td>tyler farrar</td><td>philippe gilbert</td><td>igor ant\u00f3n</td><td>seraf\u00edn mart\u00ednez</td><td>vincenzo nibali</td><td>caisse d'epargne</td></tr><tr><td>6</td><td>thor hushovd</td><td>philippe gilbert</td><td>philippe gilbert</td><td>seraf\u00edn mart\u00ednez</td><td>philippe gilbert</td><td>caisse d'epargne</td></tr><tr><td>7</td><td>alessandro petacchi</td><td>philippe gilbert</td><td>mark cavendish</td><td>seraf\u00edn mart\u00ednez</td><td>philippe gilbert</td><td>caisse d'epargne</td></tr><tr><td>8</td><td>david moncouti\u00e9</td><td>igor ant\u00f3n</td><td>mark cavendish</td><td>seraf\u00edn mart\u00ednez</td><td>vincenzo nibali</td><td>caisse d'epargne</td></tr><tr><td>9</td><td>david l\u00f3pez</td><td>igor ant\u00f3n</td><td>mark cavendish</td><td>david moncouti\u00e9</td><td>vincenzo nibali</td><td>caisse d'epargne</td></tr><tr><td>10</td><td>imanol erviti</td><td>joaquim rodr\u00edguez</td><td>mark cavendish</td><td>david moncouti\u00e9</td><td>david moncouti\u00e9</td><td>caisse d'epargne</td></tr><tr><td>11</td><td>igor ant\u00f3n</td><td>igor ant\u00f3n</td><td>igor ant\u00f3n</td><td>david moncouti\u00e9</td><td>igor ant\u00f3n</td><td>caisse d'epargne</td></tr><tr><td>12</td><td>mark cavendish</td><td>igor ant\u00f3n</td><td>mark cavendish</td><td>david moncouti\u00e9</td><td>igor ant\u00f3n</td><td>caisse d'epargne</td></tr><tr><td>13</td><td>mark cavendish</td><td>igor ant\u00f3n</td><td>mark cavendish</td><td>david moncouti\u00e9</td><td>igor ant\u00f3n</td><td>caisse d'epargne</td></tr><tr><td>14</td><td>joaquim rodr\u00edguez</td><td>vincenzo nibali</td><td>mark cavendish</td><td>david moncouti\u00e9</td><td>joaquim rodr\u00edguez</td><td>caisse d'epargne</td></tr><tr><td>15</td><td>carlos barredo</td><td>vincenzo nibali</td><td>mark cavendish</td><td>david moncouti\u00e9</td><td>joaquim rodr\u00edguez</td><td>team katusha</td></tr><tr><td>16</td><td>mikel nieve</td><td>joaquim rodr\u00edguez</td><td>mark cavendish</td><td>david moncouti\u00e9</td><td>joaquim rodr\u00edguez</td><td>team katusha</td></tr><tr><td>17</td><td>peter velits</td><td>vincenzo nibali</td><td>mark cavendish</td><td>david moncouti\u00e9</td><td>joaquim rodr\u00edguez</td><td>team katusha</td></tr><tr><td>18</td><td>mark cavendish</td><td>vincenzo nibali</td><td>mark cavendish</td><td>david moncouti\u00e9</td><td>joaquim rodr\u00edguez</td><td>team katusha</td></tr><tr><td>19</td><td>philippe gilbert</td><td>vincenzo nibali</td><td>mark cavendish</td><td>david moncouti\u00e9</td><td>joaquim rodr\u00edguez</td><td>team katusha</td></tr><tr><td>20</td><td>ezequiel mosquera 2</td><td>vincenzo nibali</td><td>mark cavendish</td><td>david moncouti\u00e9</td><td>vincenzo nibali</td><td>team katusha</td></tr><tr><td>21</td><td>tyler farrar</td><td>vincenzo nibali</td><td>mark cavendish</td><td>david moncouti\u00e9</td><td>vincenzo nibali</td><td>team katusha</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql \nWHERE stage = 1 \nAND mountains_classification = 'not awarded';</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FN/test-1975.html": {
        "method": "Text2SQL",
        "subfolder": "FN",
        "LLM_analysis": "No",
        "Actual_Correctness": "No",
        "Model_Prediction": "False",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> only ten cleveland brown 's quarterbacks have won more than 10 games</h3>\n<h3>Input Table: list of cleveland browns starting quarterbacks</h3>\n<div class=\"step\">\n<table>\n<tr><td>quarterback</td><td>uniform_no_(s)</td><td>games_started</td><td>wins</td><td>losses</td><td>ties</td><td>winning_pct</td></tr><tr><td>sipe , brian</td><td>17</td><td>112</td><td>57</td><td>55</td><td>0</td><td>589.0</td></tr><tr><td>kosar , bernie</td><td>19</td><td>105</td><td>53</td><td>51</td><td>1</td><td>595.0</td></tr><tr><td>ryan , frank</td><td>13</td><td>76</td><td>52</td><td>22</td><td>2</td><td>697.0</td></tr><tr><td>graham , otto</td><td>60 , 14</td><td>71</td><td>57</td><td>13</td><td>1</td><td>810.0</td></tr><tr><td>couch , tim</td><td>2</td><td>59</td><td>22</td><td>37</td><td>0</td><td>373.0</td></tr><tr><td>nelsen , bill</td><td>16</td><td>51</td><td>34</td><td>16</td><td>1</td><td>676.0</td></tr><tr><td>phipps , mike</td><td>15</td><td>51</td><td>24</td><td>25</td><td>2</td><td>490.0</td></tr><tr><td>plum , milt</td><td>16</td><td>51</td><td>33</td><td>16</td><td>2</td><td>667.0</td></tr><tr><td>anderson , derek</td><td>3</td><td>34</td><td>16</td><td>18</td><td>0</td><td>471.0</td></tr><tr><td>testaverde , vinny</td><td>12</td><td>31</td><td>16</td><td>15</td><td>0</td><td>516.0</td></tr><tr><td>mcdonald , paul</td><td>16</td><td>21</td><td>8</td><td>13</td><td>0</td><td>381.0</td></tr><tr><td>mccoy , colt</td><td>12</td><td>21</td><td>6</td><td>15</td><td>0</td><td>286.0</td></tr><tr><td>frye , charlie</td><td>9</td><td>19</td><td>6</td><td>13</td><td>0</td><td>316.0</td></tr><tr><td>weeden , brandon</td><td>3</td><td>19</td><td>5</td><td>14</td><td>0</td><td>263.0</td></tr><tr><td>o'connell , tommy</td><td>15</td><td>14</td><td>10</td><td>3</td><td>1</td><td>750.0</td></tr><tr><td>holcomb , kelly</td><td>10</td><td>12</td><td>4</td><td>8</td><td>0</td><td>333.0</td></tr><tr><td>quinn , brady</td><td>10</td><td>12</td><td>3</td><td>9</td><td>0</td><td>250.0</td></tr><tr><td>ninowski , jim</td><td>15 , 11</td><td>11</td><td>5</td><td>6</td><td>0</td><td>455.0</td></tr><tr><td>dilfer , trent</td><td>8</td><td>11</td><td>4</td><td>7</td><td>0</td><td>364.0</td></tr><tr><td>garcia , jeff</td><td>5</td><td>10</td><td>3</td><td>7</td><td>0</td><td>300.0</td></tr><tr><td>danielson , gary</td><td>18</td><td>8</td><td>5</td><td>3</td><td>0</td><td>625.0</td></tr><tr><td>tomczak , mike</td><td>18</td><td>8</td><td>4</td><td>4</td><td>0</td><td>500.0</td></tr><tr><td>pederson , doug</td><td>18</td><td>8</td><td>1</td><td>7</td><td>0</td><td>125.0</td></tr><tr><td>pagel , mike</td><td>10</td><td>7</td><td>2</td><td>5</td><td>0</td><td>286.0</td></tr><tr><td>wallace , seneca</td><td>6</td><td>7</td><td>1</td><td>6</td><td>0</td><td>143.0</td></tr><tr><td>ratterman , george</td><td>12 , 16</td><td>5</td><td>2</td><td>3</td><td>0</td><td>400.0</td></tr><tr><td>philcox , todd</td><td>17</td><td>5</td><td>2</td><td>3</td><td>0</td><td>400.0</td></tr><tr><td>delhomme , jake</td><td>17</td><td>4</td><td>2</td><td>2</td><td>0</td><td>500.0</td></tr><tr><td>mays , dave</td><td>10</td><td>4</td><td>1</td><td>3</td><td>0</td><td>250.0</td></tr><tr><td>zeier , eric</td><td>10</td><td>4</td><td>1</td><td>3</td><td>0</td><td>250.0</td></tr><tr><td>mccown , luke</td><td>12</td><td>4</td><td>0</td><td>4</td><td>0</td><td>0.0</td></tr><tr><td>parilli , babe</td><td>18</td><td>3</td><td>1</td><td>2</td><td>0</td><td>333.0</td></tr><tr><td>rypien , mark</td><td>11</td><td>3</td><td>2</td><td>1</td><td>0</td><td>667.0</td></tr><tr><td>dorsey , ken</td><td>11</td><td>3</td><td>0</td><td>3</td><td>0</td><td>0.0</td></tr><tr><td>hoyer , brian</td><td>6</td><td>3</td><td>3</td><td>0</td><td>0</td><td>1.0</td></tr><tr><td>strock , don</td><td>12</td><td>2</td><td>2</td><td>0</td><td>0</td><td>1.0</td></tr><tr><td>christensen , jeff</td><td>11</td><td>2</td><td>1</td><td>1</td><td>0</td><td>500.0</td></tr><tr><td>detmer , ty</td><td>11</td><td>2</td><td>0</td><td>2</td><td>0</td><td>0.0</td></tr><tr><td>campbell , jason</td><td>17</td><td>2</td><td>1</td><td>1</td><td>0</td><td>500.0</td></tr><tr><td>gault , don</td><td>11</td><td>1</td><td>1</td><td>0</td><td>0</td><td>1.0</td></tr><tr><td>lane , gary</td><td>15</td><td>1</td><td>0</td><td>1</td><td>0</td><td>0.0</td></tr><tr><td>dawson , len</td><td>18</td><td>1</td><td>1</td><td>0</td><td>0</td><td>1.0</td></tr><tr><td>wynn , spergon</td><td>13</td><td>1</td><td>0</td><td>1</td><td>0</td><td>0.0</td></tr><tr><td>luck , terry</td><td>7</td><td>1</td><td>0</td><td>1</td><td>0</td><td>0.0</td></tr><tr><td>cureton , will</td><td>16</td><td>1</td><td>0</td><td>1</td><td>0</td><td>0.0</td></tr><tr><td>gradkowski , bruce</td><td>7</td><td>1</td><td>0</td><td>1</td><td>0</td><td>0.0</td></tr><tr><td>lewis , thaddeus</td><td>9</td><td>1</td><td>0</td><td>1</td><td>0</td><td>0.0</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT COUNT(*) FROM table_sql WHERE wins > 10) = 10 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-284.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> rio ave 's head coach was carlos brito and club sporting cp has jos\u00e9 peseiro</h3>\n<h3>Input Table: 2004 - 05 primeira liga</h3>\n<div class=\"step\">\n<table>\n<tr><td>club</td><td>head_coach</td><td>city</td><td>stadium</td><td>2003_-_2004_season</td></tr><tr><td>acad\u00e9mica de coimbra</td><td>jo\u00e3o carlos pereira</td><td>coimbra</td><td>est\u00e1dio cidade de coimbra</td><td>13th in the liga</td></tr><tr><td>belenenses</td><td>carlos carvalhal</td><td>lisbon</td><td>est\u00e1dio do restelo</td><td>15th in the liga</td></tr><tr><td>benfica</td><td>giovanni trapattoni</td><td>lisbon</td><td>est\u00e1dio da luz</td><td>2nd in the liga</td></tr><tr><td>boavista</td><td>jaime pacheco</td><td>porto</td><td>est\u00e1dio do bessa - s\u00e9culo xxi</td><td>8th in the liga</td></tr><tr><td>braga</td><td>jesualdo ferreira</td><td>braga</td><td>est\u00e1dio municipal de braga - axa</td><td>5th in the liga</td></tr><tr><td>estoril - praia</td><td>litos</td><td>estoril</td><td>est\u00e1dio ant\u00f3nio coimbra da mota</td><td>1st in the liga de honra</td></tr><tr><td>gil vicente</td><td>lu\u00eds campos</td><td>barcelos</td><td>est\u00e1dio cidade de barcelos</td><td>12th in the liga</td></tr><tr><td>uni\u00e3o de leiria</td><td>v\u00edtor pontes</td><td>leiria</td><td>est\u00e1dio dr magalh\u00e3es pessoa</td><td>10th in the liga</td></tr><tr><td>penafiel</td><td>manuel fernandes</td><td>penafiel</td><td>est\u00e1dio municipal 25 de abril</td><td>3rd in the liga de honra</td></tr><tr><td>mar\u00edtimo</td><td>manuel cajuda</td><td>funchal</td><td>est\u00e1dio dos barreiros</td><td>6th in the liga</td></tr><tr><td>nacional</td><td>casemiro mior</td><td>funchal</td><td>est\u00e1dio da madeira</td><td>4th in the liga</td></tr><tr><td>beira - mar</td><td>mick wadsworth</td><td>aveiro</td><td>est\u00e1dio municipal de aveiro</td><td>11th in the liga</td></tr><tr><td>moreirense</td><td>v\u00edtor oliveira</td><td>guimar\u00e3es</td><td>est\u00e1dio do moreirense</td><td>9th in the liga</td></tr><tr><td>porto</td><td>luigi delneri</td><td>porto</td><td>est\u00e1dio do drag\u00e3o</td><td>1st in the liga</td></tr><tr><td>sporting cp</td><td>jos\u00e9 peseiro</td><td>lisbon</td><td>est\u00e1dio jos\u00e9 alvalade - s\u00e9culo xxi</td><td>3rd in the liga</td></tr><tr><td>rio ave</td><td>carlos brito</td><td>vila do conde</td><td>est\u00e1dio dos arcos</td><td>7th in the liga</td></tr><tr><td>vit\u00f3ria de guimar\u00e3es</td><td>manuel machado</td><td>guimar\u00e3es</td><td>est\u00e1dio d afonso henriques</td><td>14th in the liga</td></tr><tr><td>vit\u00f3ria de set\u00fabal</td><td>jos\u00e9 couceiro</td><td>set\u00fabal</td><td>est\u00e1dio do bonfim</td><td>2nd in the liga de honra</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT head_coach FROM table_sql WHERE club = 'rio ave') = 'carlos brito' \n             AND (SELECT club FROM table_sql WHERE head_coach = 'jos\u00e9 peseiro') = 'sporting cp' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-1440.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> when the indianapolis colts were the visiting team at giants stadium , the final score was 26 - 21</h3>\n<h3>Input Table: nbc sunday night football results (2006 - present)</h3>\n<div class=\"step\">\n<table>\n<tr><td>date</td><td>visiting_team</td><td>final_score</td><td>host_team</td><td>stadium</td></tr><tr><td>9999-09-07</td><td>miami dolphins</td><td>17 - 28</td><td>pittsburgh steelers</td><td>heinz field</td></tr><tr><td>9999-09-10</td><td>indianapolis colts</td><td>26 - 21</td><td>new york giants</td><td>giants stadium</td></tr><tr><td>9999-09-17</td><td>washington redskins</td><td>10 - 27</td><td>dallas cowboys</td><td>texas stadium</td></tr><tr><td>9999-09-24</td><td>denver broncos</td><td>17 - 7</td><td>new england patriots</td><td>gillette stadium</td></tr><tr><td>9999-10-01</td><td>seattle seahawks</td><td>6 - 37</td><td>chicago bears</td><td>soldier field</td></tr><tr><td>9999-10-08</td><td>pittsburgh steelers</td><td>13 - 23</td><td>san diego chargers</td><td>qualcomm stadium</td></tr><tr><td>9999-10-15</td><td>oakland raiders</td><td>3 - 13</td><td>denver broncos</td><td>invesco field at mile high</td></tr><tr><td>9999-10-29</td><td>dallas cowboys</td><td>35 - 14</td><td>carolina panthers</td><td>bank of america stadium</td></tr><tr><td>9999-11-05</td><td>indianapolis colts</td><td>27 - 20</td><td>new england patriots</td><td>gillette stadium</td></tr><tr><td>9999-11-12</td><td>chicago bears</td><td>38 - 20</td><td>new york giants</td><td>giants stadium</td></tr><tr><td>9999-11-19</td><td>san diego chargers</td><td>35 - 27</td><td>denver broncos</td><td>invesco field at mile high</td></tr><tr><td>9999-11-26</td><td>philadelphia eagles</td><td>21 - 45</td><td>indianapolis colts</td><td>rca dome</td></tr><tr><td>9999-12-03</td><td>seattle seahawks</td><td>23 - 20</td><td>denver broncos</td><td>invesco field at mile high</td></tr><tr><td>9999-12-10</td><td>new orleans saints</td><td>42 - 17</td><td>dallas cowboys</td><td>texas stadium</td></tr><tr><td>9999-12-17</td><td>kansas city chiefs</td><td>9 - 20</td><td>san diego chargers</td><td>qualcomm stadium</td></tr><tr><td>9999-12-25</td><td>philadelphia eagles</td><td>23 - 7</td><td>dallas cowboys</td><td>texas stadium</td></tr><tr><td>9999-12-31</td><td>green bay packers</td><td>26 - 7</td><td>chicago bears</td><td>soldier field</td></tr><tr><td>0001-01-06</td><td>kansas city chiefs</td><td>8 - 23</td><td>indianapolis colts</td><td>rca dome</td></tr><tr><td>0001-01-06</td><td>dallas cowboys</td><td>20 - 21</td><td>seattle seahawks</td><td>qwest field</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT final_score FROM table_sql WHERE visiting_team = 'indianapolis colts' AND host_team = 'new york giants') = '26 - 21' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-291.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> jos\u00e9 couceiro was the head coach in set\u00fabal , and it was manuel machado in guimar\u00e3es , the only time guimar\u00e3es is a city</h3>\n<h3>Input Table: 2004 - 05 primeira liga</h3>\n<div class=\"step\">\n<table>\n<tr><td>club</td><td>head_coach</td><td>city</td><td>stadium</td><td>2003_-_2004_season</td></tr><tr><td>acad\u00e9mica de coimbra</td><td>jo\u00e3o carlos pereira</td><td>coimbra</td><td>est\u00e1dio cidade de coimbra</td><td>13th in the liga</td></tr><tr><td>belenenses</td><td>carlos carvalhal</td><td>lisbon</td><td>est\u00e1dio do restelo</td><td>15th in the liga</td></tr><tr><td>benfica</td><td>giovanni trapattoni</td><td>lisbon</td><td>est\u00e1dio da luz</td><td>2nd in the liga</td></tr><tr><td>boavista</td><td>jaime pacheco</td><td>porto</td><td>est\u00e1dio do bessa - s\u00e9culo xxi</td><td>8th in the liga</td></tr><tr><td>braga</td><td>jesualdo ferreira</td><td>braga</td><td>est\u00e1dio municipal de braga - axa</td><td>5th in the liga</td></tr><tr><td>estoril - praia</td><td>litos</td><td>estoril</td><td>est\u00e1dio ant\u00f3nio coimbra da mota</td><td>1st in the liga de honra</td></tr><tr><td>gil vicente</td><td>lu\u00eds campos</td><td>barcelos</td><td>est\u00e1dio cidade de barcelos</td><td>12th in the liga</td></tr><tr><td>uni\u00e3o de leiria</td><td>v\u00edtor pontes</td><td>leiria</td><td>est\u00e1dio dr magalh\u00e3es pessoa</td><td>10th in the liga</td></tr><tr><td>penafiel</td><td>manuel fernandes</td><td>penafiel</td><td>est\u00e1dio municipal 25 de abril</td><td>3rd in the liga de honra</td></tr><tr><td>mar\u00edtimo</td><td>manuel cajuda</td><td>funchal</td><td>est\u00e1dio dos barreiros</td><td>6th in the liga</td></tr><tr><td>nacional</td><td>casemiro mior</td><td>funchal</td><td>est\u00e1dio da madeira</td><td>4th in the liga</td></tr><tr><td>beira - mar</td><td>mick wadsworth</td><td>aveiro</td><td>est\u00e1dio municipal de aveiro</td><td>11th in the liga</td></tr><tr><td>moreirense</td><td>v\u00edtor oliveira</td><td>guimar\u00e3es</td><td>est\u00e1dio do moreirense</td><td>9th in the liga</td></tr><tr><td>porto</td><td>luigi delneri</td><td>porto</td><td>est\u00e1dio do drag\u00e3o</td><td>1st in the liga</td></tr><tr><td>sporting cp</td><td>jos\u00e9 peseiro</td><td>lisbon</td><td>est\u00e1dio jos\u00e9 alvalade - s\u00e9culo xxi</td><td>3rd in the liga</td></tr><tr><td>rio ave</td><td>carlos brito</td><td>vila do conde</td><td>est\u00e1dio dos arcos</td><td>7th in the liga</td></tr><tr><td>vit\u00f3ria de guimar\u00e3es</td><td>manuel machado</td><td>guimar\u00e3es</td><td>est\u00e1dio d afonso henriques</td><td>14th in the liga</td></tr><tr><td>vit\u00f3ria de set\u00fabal</td><td>jos\u00e9 couceiro</td><td>set\u00fabal</td><td>est\u00e1dio do bonfim</td><td>2nd in the liga de honra</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT head_coach FROM table_sql WHERE city = 'set\u00fabal') = 'jos\u00e9 couceiro' \n             AND (SELECT head_coach FROM table_sql WHERE city = 'guimar\u00e3es') = 'manuel machado' \n             AND (SELECT COUNT(*) FROM table_sql WHERE city = 'guimar\u00e3es') = 1 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-1796.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> zo\u00eb wanamaker plays the character ariadne oliver</h3>\n<h3>Input Table: list of agatha christie 's poirot episodes</h3>\n<div class=\"step\">\n<table>\n<tr><td>actor</td><td>character</td><td>title_/_rank</td><td>series</td><td>years</td></tr><tr><td>david suchet</td><td>hercule poirot</td><td>various</td><td>1 - 13</td><td>1989 - 2013</td></tr><tr><td>hugh fraser</td><td>arthur hastings</td><td>captain obe</td><td>1 - 8 , 13</td><td>1989 - 2002 , 2013</td></tr><tr><td>philip jackson</td><td>james japp</td><td>chief inspector</td><td>1 - 8 , 13</td><td>1989 - 2001 , 2013</td></tr><tr><td>pauline moran</td><td>felicity lemon</td><td>secretary</td><td>1 - 3 , 5 - 8 , 13</td><td>1989 - 1991 , 1993 - 2001 , 2013</td></tr><tr><td>zo\u00eb wanamaker</td><td>ariadne oliver</td><td>crime novelist</td><td>10 - 13</td><td>2006 - 2013</td></tr><tr><td>david yelland</td><td>george</td><td>butler</td><td>10 - 13</td><td>2006 - 2013</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE actor = 'zo\u00eb wanamaker' \nAND character = 'ariadne oliver';</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-1731.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> week 9 was on october 30 , 1983</h3>\n<h3>Input Table: 1983 detroit lions season</h3>\n<div class=\"step\">\n<table>\n<tr><td>week</td><td>date</td><td>opponent</td><td>result</td><td>attendance</td></tr><tr><td>1</td><td>1983-09-04</td><td>tampa bay buccaneers</td><td>w 11 - 0</td><td>62154</td></tr><tr><td>2</td><td>1983-09-11</td><td>cleveland browns</td><td>l 31 - 26</td><td>60095</td></tr><tr><td>3</td><td>1983-09-18</td><td>atlanta falcons</td><td>l 30 - 14</td><td>54622</td></tr><tr><td>4</td><td>1983-09-25</td><td>minnesota vikings</td><td>l 20 - 17</td><td>58254</td></tr><tr><td>5</td><td>1983-10-02</td><td>los angeles rams</td><td>l 21 - 10</td><td>49403</td></tr><tr><td>6</td><td>1983-10-09</td><td>green bay packers</td><td>w 38 - 14</td><td>67738</td></tr><tr><td>7</td><td>1983-10-16</td><td>chicago bears</td><td>w 31 - 17</td><td>66709</td></tr><tr><td>8</td><td>1983-10-23</td><td>washington redskins</td><td>l 38 - 17</td><td>43189</td></tr><tr><td>9</td><td>1983-10-30</td><td>chicago bears</td><td>w 38 - 17</td><td>58764</td></tr><tr><td>10</td><td>1983-11-07</td><td>new york giants</td><td>w 15 - 9</td><td>68985</td></tr><tr><td>11</td><td>1983-11-13</td><td>houston oilers</td><td>l 27 - 17</td><td>40660</td></tr><tr><td>12</td><td>1983-11-20</td><td>green bay packers</td><td>w 23 - 20 ot</td><td>50050</td></tr><tr><td>13</td><td>1983-11-24</td><td>pittsburgh steelers</td><td>w 45 - 3</td><td>77724</td></tr><tr><td>14</td><td>1983-12-05</td><td>minnesota vikings</td><td>w 13 - 2</td><td>79169</td></tr><tr><td>15</td><td>1983-12-11</td><td>cincinnati bengals</td><td>l 17 - 9</td><td>45728</td></tr><tr><td>16</td><td>1983-12-18</td><td>tampa bay buccaneers</td><td>w 23 - 20</td><td>78392</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE week = 9 \nAND date = '1983-10-30';</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-1031.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> babaroga is the developer with a release date of 2010 - 12 - 16 and the title of facebook</h3>\n<h3>Input Table: list of zune applications</h3>\n<div class=\"step\">\n<table>\n<tr><td>title</td><td>developer</td><td>category</td><td>release_date</td><td>version</td></tr><tr><td>alarm clock</td><td>microsoft</td><td>utilities</td><td>2010-12-16</td><td>1.1</td></tr><tr><td>calculator</td><td>microsoft</td><td>utilities</td><td>2009-09-01</td><td>1.0</td></tr><tr><td>calendar</td><td>matchbox</td><td>utilities</td><td>2011-07-29</td><td>1.0.0.3</td></tr><tr><td>chord finder</td><td>microsoft</td><td>utilities</td><td>2010-11-17</td><td>1.0</td></tr><tr><td>drum machine hd</td><td>dino games</td><td>utilities</td><td>2010-10-20</td><td>1.0</td></tr><tr><td>email</td><td>microsoft</td><td>utilities</td><td>2011-04-01</td><td>1.1.0.1</td></tr><tr><td>facebook</td><td>matchbox</td><td>social networking</td><td>2010-12-16</td><td>1.4</td></tr><tr><td>fan prediction</td><td>ihwy , inc</td><td>entertainment</td><td>2011-06-23</td><td>1.0</td></tr><tr><td>fingerpaint</td><td>babaroga</td><td>entertainment</td><td>2011-07-29</td><td>1.1</td></tr><tr><td>level</td><td>microsoft</td><td>utilities</td><td>2011-06-23</td><td>1.0</td></tr><tr><td>metronome</td><td>dino games</td><td>utilities</td><td>2010-09-09</td><td>1.0</td></tr><tr><td>msn money</td><td>microsoft</td><td>utilities</td><td>2010-07-29</td><td>1.0</td></tr><tr><td>notes</td><td>microsoft</td><td>utilities</td><td>2011-06-23</td><td>1.0</td></tr><tr><td>piano</td><td>microsoft</td><td>entertainment</td><td>2009-11-01</td><td>1.0</td></tr><tr><td>shuffle by album</td><td>microsoft</td><td>utilities</td><td>2011-02-18</td><td>1.1</td></tr><tr><td>stopwatch</td><td>microsoft</td><td>utilities</td><td>2010-08-05</td><td>1.1</td></tr><tr><td>twitter</td><td>matchbox</td><td>social networking</td><td>2010-12-16</td><td>1.6</td></tr><tr><td>weather</td><td>microsoft</td><td>utilities</td><td>2009-09-01</td><td>1.0</td></tr><tr><td>windows live messenger</td><td>microsoft</td><td>social networking</td><td>2010-11-17</td><td>1.4</td></tr><tr><td>zune reader</td><td>microsoft</td><td>utilities</td><td>2011-02-18</td><td>1.2</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE developer = 'babaroga' \nAND release_date = '2010-12-16' \nAND title = 'facebook';</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-941.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "No",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> there are nil industrial and commercial panels that have a labour panel greater than 1 , a nominated by the taoiseach lesss than 11 and a cultural and educational panel smaller than 0</h3>\n<h3>Input Table: members of the 7th seanad</h3>\n<div class=\"step\">\n<table>\n<tr><td>party</td><td>administrative_panel</td><td>agricultural_panel</td><td>cultural_and_educational_panel</td><td>industrial_and_commercial_panel</td><td>labour_panel</td><td>national_university_of_ireland</td><td>university_of_dublin</td><td>nominated_by_the_taoiseach</td><td>total</td></tr><tr><td>fianna f\u00e1il</td><td>2</td><td>4</td><td>3</td><td>3</td><td>2</td><td>1</td><td>0</td><td>9</td><td>24</td></tr><tr><td>fine gael</td><td>1</td><td>3</td><td>1</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>8</td></tr><tr><td>labour party</td><td>1</td><td>1</td><td>0</td><td>0</td><td>2</td><td>0</td><td>0</td><td>0</td><td>4</td></tr><tr><td>clann na talmhan</td><td>0</td><td>2</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>3</td></tr><tr><td>clann na poblachta</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td></tr><tr><td>indenpendent</td><td>1</td><td>0</td><td>0</td><td>3</td><td>2</td><td>1</td><td>3</td><td>0</td><td>10</td></tr><tr><td>total</td><td>7</td><td>11</td><td>5</td><td>9</td><td>11</td><td>3</td><td>3</td><td>11</td><td>60</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT industrial_and_commercial_panel FROM table_sql WHERE labour_panel > 1 AND nominated_by_the_taoiseach < 11 AND cultural_and_educational_panel < 0) IS NULL \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-241.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the ar - 15a3 competition hbar has a barrel length of 16 in</h3>\n<h3>Input Table: none</h3>\n<div class=\"step\">\n<table>\n<tr><td>colt_model_no</td><td>name</td><td>stock</td><td>fire_control</td><td>rear_sight</td><td>forward_assist</td><td>case_deflector</td><td>barrel_length</td><td>barrel_profile</td><td>barrel_twist</td><td>hand_guards</td><td>bayonet_lug</td><td>muzzle_device</td></tr><tr><td>r6000</td><td>ar - 15 sporter (sp1)</td><td>a1</td><td>s - 1</td><td>a1</td><td>no</td><td>no</td><td>20 in</td><td>a1</td><td>1:12</td><td>triangular</td><td>yes</td><td>type 2 duckbill or a1</td></tr><tr><td>r6001</td><td>ar - 15 sporter carbine (sp1 carbine)</td><td>2nd generation</td><td>s - 1</td><td>a1</td><td>no</td><td>no</td><td>16 in</td><td>a1</td><td>1:12</td><td>short ribbed</td><td>yes</td><td>a1</td></tr><tr><td>r6002</td><td>ar - 15 sporter (sp1 , bundled with 3x scope)</td><td>a1</td><td>s - 1</td><td>a1</td><td>no</td><td>no</td><td>20 in</td><td>a1</td><td>1:12</td><td>triangular</td><td>yes</td><td>a1</td></tr><tr><td>r6420</td><td>ar - 15a2 sporter ii carbine</td><td>3rd generation</td><td>s - 1</td><td>a1</td><td>yes</td><td>no & yes</td><td>16 in</td><td>a1</td><td>1:7</td><td>short ribbed</td><td>yes</td><td>a2</td></tr><tr><td>r6430</td><td>sporter lightweight (9 mm)</td><td>a2</td><td>s - 1</td><td>a1</td><td>no</td><td>removable</td><td>16 in</td><td>a1</td><td>1:10</td><td>short ribbed</td><td>yes</td><td>a1</td></tr><tr><td>r6450</td><td>ar - 15 9 mm carbine</td><td>3rd generation</td><td>s - 1</td><td>a1</td><td>no</td><td>no & removable</td><td>16 in</td><td>a1</td><td>1:10</td><td>short ribbed</td><td>yes</td><td>a1</td></tr><tr><td>r6500</td><td>ar - 15a2 sporter ii</td><td>a2</td><td>s - 1</td><td>a1</td><td>yes</td><td>no & yes</td><td>20 in</td><td>a2</td><td>1:7</td><td>ribbed</td><td>yes</td><td>a2</td></tr><tr><td>r6520</td><td>ar - 15a2 government carbine</td><td>3rd generation</td><td>s - 1</td><td>a2</td><td>yes</td><td>yes</td><td>16 in</td><td>a1</td><td>1:7</td><td>short ribbed</td><td>yes</td><td>a2</td></tr><tr><td>r6530</td><td>sporter lightweight 223</td><td>3rd generation</td><td>s - 1</td><td>a2</td><td>yes</td><td>yes</td><td>16 in</td><td>a1</td><td>1:7</td><td>short ribbed</td><td>no</td><td>a2</td></tr><tr><td>r6550</td><td>ar - 15a2 government</td><td>a2</td><td>s - 1</td><td>a2</td><td>yes</td><td>yes</td><td>20 in</td><td>a2</td><td>1:7</td><td>ribbed</td><td>yes</td><td>a2</td></tr><tr><td>r6550cc</td><td>ar - 15a2 government (w / factory camouflage finish)</td><td>a2</td><td>s - 1</td><td>a2</td><td>yes</td><td>yes</td><td>20 in</td><td>a2</td><td>1:7</td><td>ribbed</td><td>yes</td><td>a2</td></tr><tr><td>r6551</td><td>sporter target</td><td>a2</td><td>s - 1</td><td>a2</td><td>yes</td><td>yes</td><td>20 in</td><td>a2</td><td>1:7</td><td>ribbed</td><td>no</td><td>a2</td></tr><tr><td>r6600</td><td>ar - 15a2 hbar</td><td>a2</td><td>s - 1</td><td>a2</td><td>yes</td><td>yes</td><td>20 in</td><td>hbar</td><td>1:7</td><td>ribbed</td><td>yes</td><td>a2</td></tr><tr><td>r6601</td><td>sporter match hbar</td><td>a2</td><td>s - 1</td><td>a2</td><td>yes</td><td>yes</td><td>20 in</td><td>hbar</td><td>1:7</td><td>ribbed</td><td>no</td><td>a2</td></tr><tr><td>r6700</td><td>sporter competition hbar</td><td>a2</td><td>s - 1</td><td>flattop</td><td>yes</td><td>yes</td><td>20 in</td><td>hbar</td><td>1:9</td><td>ribbed</td><td>no</td><td>a2</td></tr><tr><td>r6721</td><td>ar - 15a3 tactical carbine</td><td>4th generation</td><td>s - 1</td><td>a2</td><td>yes</td><td>yes</td><td>16 in</td><td>hbar</td><td>1:9</td><td>short ribbed</td><td>yes</td><td>a2</td></tr><tr><td>r6724</td><td>sporter competition hbar</td><td>a2</td><td>s - 1</td><td>flattop</td><td>yes</td><td>yes</td><td>24 in</td><td>hbar</td><td>1:9</td><td>ribbed</td><td>no</td><td>a2</td></tr><tr><td>r6731</td><td>ar - 15a3 competition hbar</td><td>a2</td><td>s - 1</td><td>a2</td><td>yes</td><td>yes</td><td>16 in</td><td>hbar</td><td>1:9</td><td>short ribbed</td><td>no</td><td>a2</td></tr><tr><td>r6750</td><td>sporter competition hbar (bundled w / bipod)</td><td>a2</td><td>s - 1</td><td>a2</td><td>yes</td><td>yes</td><td>20 in</td><td>super - heavy</td><td>1:7</td><td>ribbed</td><td>no</td><td>a2</td></tr><tr><td>r6821</td><td>sporter carbine (7.62x39 mm)</td><td>3rd generation</td><td>s - 1</td><td>a2</td><td>yes</td><td>yes</td><td>16 in</td><td>hbar</td><td>1:12</td><td>short ribbed</td><td>no</td><td>a1</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT barrel_length FROM table_sql WHERE colt_model_no = 'r6731') = '16 in' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-515.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> when rank is more than 4 and country is japan for notes shows sc / d</h3>\n<h3>Input Table: rowing at the 2008 summer olympics - men 's lightweight double sculls</h3>\n<div class=\"step\">\n<table>\n<tr><td>rank</td><td>rowers</td><td>country</td><td>time</td><td>notes</td></tr><tr><td>1</td><td>pedro fraga , nuno mendes</td><td>portugal</td><td>6:39.07</td><td>sa / b</td></tr><tr><td>2</td><td>eyder batista , yunior perez</td><td>cuba</td><td>6:40.15</td><td>sa / b</td></tr><tr><td>3</td><td>kazushige ura , daisaku takeda</td><td>japan</td><td>6:43.03</td><td>sc / d</td></tr><tr><td>4</td><td>zsolt hirling , tam\u00e3\u00a1s varga</td><td>hungary</td><td>6:50.48</td><td>sc / d</td></tr><tr><td>5</td><td>devender kumar khandwal , manjeet singh</td><td>india</td><td>7:02.06</td><td>sc / d</td></tr><tr><td>6</td><td>jang kang - eun , kim hong - kyun</td><td>south korea</td><td>7:12.17</td><td>sc / d</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE rank > 4 \nAND country = 'japan' \nAND notes = 'sc / d';</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-764.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> pole vault was the event before august 26 , 2005</h3>\n<h3>Input Table: memorial van damme</h3>\n<div class=\"step\">\n<table>\n<tr><td>event</td><td>record</td><td>athlete</td><td>nationality</td><td>date</td></tr><tr><td>100 m</td><td>10.72 ( - 0.3 m / s)</td><td>shelly - ann fraser - pryce</td><td>jamaica</td><td>2013-09-06</td></tr><tr><td>200 m</td><td>21.64 ( + 0.8 m / s)</td><td>merlene ottey</td><td>jamaica</td><td>1991-09-13</td></tr><tr><td>400 m</td><td>48.83</td><td>sanya richards</td><td>united states</td><td>2009-09-04</td></tr><tr><td>800 m</td><td>1:55.16</td><td>pamela jelimo</td><td>kenya</td><td>2008-09-06</td></tr><tr><td>1000 m</td><td>2:28.98</td><td>svetlana masterkova</td><td>russia</td><td>1996-08-23</td></tr><tr><td>1500 m</td><td>3:55.33</td><td>s\u00fcreyya ayhan</td><td>turkey</td><td>2003-09-05</td></tr><tr><td>mile</td><td>4:17.75</td><td>maryam yusuf jamal</td><td>bahrain</td><td>2007-09-14</td></tr><tr><td>2000 m</td><td>5:30.19</td><td>gelete burka</td><td>ethiopia</td><td>2009-09-04</td></tr><tr><td>3000 m</td><td>8:24.81 +</td><td>meseret defar</td><td>ethiopia</td><td>2007-09-14</td></tr><tr><td>two miles</td><td>8:58.58</td><td>meseret defar</td><td>ethiopia</td><td>2007-09-14</td></tr><tr><td>5000 m</td><td>14:25.43</td><td>vivian cheruiyot</td><td>kenya</td><td>2008-09-06</td></tr><tr><td>100 m hurdles</td><td>12.42 ( - 0.3 m / s)</td><td>yordanka donkova</td><td>bulgaria</td><td>1986-09-05</td></tr><tr><td>400 m hurdles</td><td>53.43</td><td>nezha bidouane</td><td>morocco</td><td>1998-08-28</td></tr><tr><td>3000 m steeplechase</td><td>9:15.06</td><td>milcah chemos</td><td>kenya</td><td>2013-09-06</td></tr><tr><td>high jump</td><td>2.05 m</td><td>anna chicherova</td><td>russia</td><td>2011-09-16</td></tr><tr><td>pole vault</td><td>4.93 m</td><td>yelena isinbayeva</td><td>russia</td><td>2005-08-26</td></tr><tr><td>long jump</td><td>7.25 m ( + 1.7 m / s)</td><td>heike drechsler</td><td>germany</td><td>1991-09-13</td></tr><tr><td>triple jump</td><td>15.14 m ( + 0.3 m / s)</td><td>tatyana lebedeva</td><td>russia</td><td>2003-09-05</td></tr><tr><td>shot put</td><td>20.57 m</td><td>natalya lisovskaya</td><td>soviet union</td><td>1987-09-11</td></tr><tr><td>discus throw</td><td>69.84 m</td><td>tsvetanka christova</td><td>bulgaria</td><td>1986-09-05</td></tr><tr><td>javelin throw</td><td>72.18 m ( old design ) 67.76 m ( current design )</td><td>fatima whitbread trine hattestad</td><td>united kingdom norway</td><td>1986-09-05</td></tr><tr><td>4100 m relay</td><td>42.97</td><td>united states</td><td>united states</td><td>1988-08-19</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT event FROM table_sql WHERE date < '2005-08-26' ORDER BY date DESC LIMIT 1) = 'pole vault' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-1115.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> denni neufeld is listed as a second for winnipeg</h3>\n<h3>Input Table: 2009 canadian olympic curling trials</h3>\n<div class=\"step\">\n<table>\n<tr><td>skip</td><td>third_/_vice_skip</td><td>second</td><td>lead</td><td>city</td></tr><tr><td>kerry burtnyk</td><td>don walchuk</td><td>richard daneault</td><td>garth smith</td><td>winnipeg</td></tr><tr><td>pat simmons</td><td>gerry adam</td><td>jeff sharp</td><td>steve laycock</td><td>davidson</td></tr><tr><td>jeff stoughton</td><td>kevin park</td><td>rob fowler</td><td>steve gould</td><td>winnipeg</td></tr><tr><td>wayne middaugh</td><td>jon mead</td><td>john epping</td><td>scott bailey</td><td>islington</td></tr><tr><td>brad gushue</td><td>mark nichols</td><td>ryan fry</td><td>jamie korab</td><td>st john 's</td></tr><tr><td>mike mcewen</td><td>b j neufeld</td><td>matt wozniak</td><td>denni neufeld</td><td>winnipeg</td></tr><tr><td>joel jordison</td><td>scott bitz</td><td>aryn schmidt</td><td>dean hicke</td><td>moose jaw</td></tr><tr><td>bob ursel</td><td>jim cotter</td><td>kevin folk</td><td>rick sawatsky</td><td>kelowna</td></tr><tr><td>jean - michel m\u00e9nard</td><td>martin cr\u00eate</td><td>\u00e9ric sylvain</td><td>jean gagnon</td><td>l\u00e9vis</td></tr><tr><td>ted appelman</td><td>tom appelman</td><td>bradon klassen</td><td>brendan melnyk</td><td>edmonton</td></tr><tr><td>greg mcaulay</td><td>ken maskiewich</td><td>deane horning</td><td>aaron watson</td><td>richmond</td></tr><tr><td>jason gunnlaugson</td><td>justin richter</td><td>braden zawada</td><td>tyler forrest</td><td>beausejour</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE second = 'denni neufeld' \nAND city = 'winnipeg';</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-1355.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> in the 28 matches that migues zapata played , he scored only 17 goals</h3>\n<h3>Input Table: 2008 - 09 segunda divisi\u00f3n b</h3>\n<div class=\"step\">\n<table>\n<tr><td>goalkeeper</td><td>goals</td><td>matches</td><td>average</td><td>team</td></tr><tr><td>miguel zapata</td><td>17</td><td>28</td><td>0.61</td><td>atl\u00e9tico ciudad</td></tr><tr><td>rub\u00e9n mart\u00ednez</td><td>24</td><td>32</td><td>0.75</td><td>cartagena</td></tr><tr><td>orlando quintana</td><td>29</td><td>34</td><td>0.85</td><td>lorca deportiva</td></tr><tr><td>\u00e1lvaro campos</td><td>24</td><td>28</td><td>0.86</td><td>real murcia b</td></tr><tr><td>mat\u00edas garavano</td><td>26</td><td>30</td><td>0.87</td><td>m\u00e9rida</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT goals FROM table_sql WHERE goalkeeper = 'miguel zapata' AND matches = 28) = 17 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-139.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the nation of croatia won 3 medals all together , 2 of which were silver</h3>\n<h3>Input Table: 2003 world taekwondo championships</h3>\n<div class=\"step\">\n<table>\n<tr><td>rank</td><td>nation</td><td>gold</td><td>silver</td><td>bronze</td><td>total</td></tr><tr><td>1</td><td>south korea</td><td>8</td><td>0</td><td>2</td><td>10</td></tr><tr><td>2</td><td>iran</td><td>2</td><td>2</td><td>1</td><td>5</td></tr><tr><td>3</td><td>chinese taipei</td><td>2</td><td>0</td><td>1</td><td>3</td></tr><tr><td>4</td><td>united states</td><td>1</td><td>2</td><td>3</td><td>6</td></tr><tr><td>5</td><td>spain</td><td>1</td><td>1</td><td>3</td><td>5</td></tr><tr><td>6</td><td>china</td><td>1</td><td>1</td><td>1</td><td>3</td></tr><tr><td>7</td><td>greece</td><td>1</td><td>0</td><td>2</td><td>3</td></tr><tr><td>8</td><td>croatia</td><td>0</td><td>2</td><td>1</td><td>3</td></tr><tr><td>9</td><td>france</td><td>0</td><td>2</td><td>0</td><td>2</td></tr><tr><td>10</td><td>germany</td><td>0</td><td>1</td><td>2</td><td>3</td></tr><tr><td>11</td><td>canada</td><td>0</td><td>1</td><td>1</td><td>2</td></tr><tr><td>11</td><td>denmark</td><td>0</td><td>1</td><td>1</td><td>1</td></tr><tr><td>13</td><td>cuba</td><td>0</td><td>1</td><td>0</td><td>1</td></tr><tr><td>13</td><td>great britain</td><td>0</td><td>1</td><td>0</td><td>1</td></tr><tr><td>13</td><td>mexico</td><td>0</td><td>1</td><td>0</td><td>1</td></tr><tr><td>16</td><td>azerbaijan</td><td>0</td><td>0</td><td>4</td><td>4</td></tr><tr><td>17</td><td>thailand</td><td>0</td><td>0</td><td>2</td><td>2</td></tr><tr><td>18</td><td>australia</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>18</td><td>austria</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>18</td><td>belarus</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>18</td><td>kazakhstan</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>18</td><td>morocco</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>18</td><td>philippines</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>18</td><td>turkey</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>18</td><td>venezuela</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>total</td><td>total</td><td>16</td><td>16</td><td>32</td><td>64</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT silver FROM table_sql WHERE nation = 'croatia') = 2 \n             AND (SELECT total FROM table_sql WHERE nation = 'croatia') = 3 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-1568.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> henrik stenson is from sweden , aaron baddeley is from australia , and charlie wi is from south korea</h3>\n<h3>Input Table: 2008 pga championship</h3>\n<div class=\"step\">\n<table>\n<tr><td>place</td><td>player</td><td>country</td><td>score</td><td>to_par</td></tr><tr><td>1</td><td>ben curtis</td><td>united states</td><td>73 + 67 + 68 = 208</td><td>- 2</td></tr><tr><td>t2</td><td>j b holmes</td><td>united states</td><td>71 + 68 + 70 = 209</td><td>- 1</td></tr><tr><td>t2</td><td>henrik stenson</td><td>sweden</td><td>71 + 70 + 68 = 209</td><td>- 1</td></tr><tr><td>t4</td><td>sergio garc\u00eda</td><td>spain</td><td>69 + 73 + 69 = 211</td><td>+ 1</td></tr><tr><td>t4</td><td>p\u00e1draig harrington</td><td>ireland</td><td>71 + 74 + 66 = 211</td><td>+ 1</td></tr><tr><td>t4</td><td>charlie wi</td><td>south korea</td><td>70 + 70 + 71 = 211</td><td>+ 1</td></tr><tr><td>t7</td><td>andr\u00e9s romero</td><td>argentina</td><td>69 + 78 + 65 = 212</td><td>+ 2</td></tr><tr><td>t7</td><td>jeev milkha singh</td><td>india</td><td>68 + 74 + 70 = 212</td><td>+ 2</td></tr><tr><td>t9</td><td>aaron baddeley</td><td>australia</td><td>71 + 71 + 71 = 213</td><td>+ 3</td></tr><tr><td>t9</td><td>steve flesch</td><td>united states</td><td>73 + 70 + 70 = 213</td><td>+ 3</td></tr><tr><td>t9</td><td>david toms</td><td>united states</td><td>72 + 69 + 72 = 213</td><td>+ 3</td></tr><tr><td>t9</td><td>camilo villegas</td><td>colombia</td><td>74 + 72 = 67 = 213</td><td>+ 3</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT country FROM table_sql WHERE player = 'henrik stenson') = 'sweden' \n             AND (SELECT country FROM table_sql WHERE player = 'aaron baddeley') = 'australia' \n             AND (SELECT country FROM table_sql WHERE player = 'charlie wi') = 'south korea' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-995.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "No",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> there were two episodes in the series that were directed by perry chafe</h3>\n<h3>Input Table: list of republic of doyle episodes</h3>\n<div class=\"step\">\n<table>\n<tr><td>Unnamed:_0</td><td>title</td><td>directed_by</td><td>written_by</td><td>viewers</td><td>original_airdate</td><td>prod_code</td></tr><tr><td>1</td><td>fathers and sons</td><td>mike clattenburg</td><td>allan hawco , perry chafe and malcolm macrury</td><td>969000</td><td>2010-01-06</td><td>101</td></tr><tr><td>2</td><td>the return of the grievous angel</td><td>steve dimarco</td><td>allan hawco and avrum jacobson</td><td>715000</td><td>2010-01-13</td><td>102</td></tr><tr><td>3</td><td>duchess of george</td><td>mike clattenburg</td><td>allan hawco , perry chafe and malcolm macrury</td><td>685000</td><td>2010-01-20</td><td>103</td></tr><tr><td>5</td><td>hit and rum</td><td>steve dimarco</td><td>matt maclennan</td><td>594000</td><td>2010-02-03</td><td>105</td></tr><tr><td>6</td><td>the one who got away</td><td>larry mclean</td><td>jesse mckeown</td><td>1012000</td><td>2010-02-10</td><td>106</td></tr><tr><td>7</td><td>the woman who knew too little</td><td>robert lieberman</td><td>jeremy boxen</td><td>1053000</td><td>2010-03-03</td><td>107</td></tr><tr><td>8</td><td>the tell - tale safe</td><td>jerry ciccoritti</td><td>john callaghan and steve cochrane</td><td>986000</td><td>2010-03-10</td><td>108</td></tr><tr><td>9</td><td>he sleeps with the chips</td><td>phil earnshaw</td><td>perry chafe</td><td>908000</td><td>2010-03-17</td><td>109</td></tr><tr><td>10</td><td>the pen is mightier than the doyle</td><td>robert lieberman</td><td>steve cochrane and avrum jacobson</td><td>897000</td><td>2010-03-24</td><td>110</td></tr><tr><td>11</td><td>a horse divided</td><td>steve scaini</td><td>jesse mckeown</td><td>902000</td><td>2010-03-31</td><td>111</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 2 THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql \nWHERE directed_by = 'perry chafe';</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-156.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the united states contributed the most players of all the countries</h3>\n<h3>Input Table: utah jazz all - time roster</h3>\n<div class=\"step\">\n<table>\n<tr><td>player</td><td>nationality</td><td>position</td><td>years_for_jazz</td><td>school_/_club_team</td></tr><tr><td>rick adelman</td><td>united states</td><td>guard</td><td>1974-01-01</td><td>loyola (ca)</td></tr><tr><td>john amaechi</td><td>england</td><td>center / forward</td><td>2001-03-01</td><td>penn state</td></tr><tr><td>louis amundson</td><td>united states</td><td>forward</td><td>2007-01-01</td><td>unlv</td></tr><tr><td>j j anderson</td><td>united states</td><td>forward</td><td>1982-01-01</td><td>bradley</td></tr><tr><td>shandon anderson</td><td>united states</td><td>guard / forward</td><td>9999-01-01</td><td>georgia</td></tr><tr><td>rafael ara\u00e3jo</td><td>brazil</td><td>center</td><td>2006-01-01</td><td>byu</td></tr><tr><td>carlos arroyo</td><td>puerto rico</td><td>guard</td><td>2002-05-01</td><td>florida international</td></tr><tr><td>isaac austin</td><td>united states</td><td>center</td><td>1991-01-01</td><td>arizona state</td></tr><tr><td>anthony avent</td><td>united states</td><td>forward</td><td>1998-01-01</td><td>seton hall</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT COUNT(*) FROM table_sql WHERE nationality = 'united states') > \n             (SELECT COUNT(*) FROM table_sql WHERE nationality != 'united states') \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-1898.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> gary beach is one of four nominees for a tony award</h3>\n<h3>Input Table: la cage aux folles (musical)</h3>\n<div class=\"step\">\n<table>\n<tr><td>year</td><td>award</td><td>category</td><td>nominee</td><td>result</td></tr><tr><td>2005</td><td>tony award</td><td>best revival of a musical</td><td>best revival of a musical</td><td>won</td></tr><tr><td>2005</td><td>tony award</td><td>best performance by a leading actor in a musical</td><td>gary beach</td><td>nominated</td></tr><tr><td>2005</td><td>tony award</td><td>best choreography</td><td>jerry mitchell</td><td>won</td></tr><tr><td>2005</td><td>tony award</td><td>best costume design</td><td>william ivey long</td><td>nominated</td></tr><tr><td>2005</td><td>drama desk award</td><td>outstanding revival of a musical</td><td>outstanding revival of a musical</td><td>won</td></tr><tr><td>2005</td><td>drama desk award</td><td>outstanding choreography</td><td>jerry mitchell</td><td>won</td></tr><tr><td>2005</td><td>drama desk award</td><td>outstanding costume design</td><td>william ivey long</td><td>nominated</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE year = 2005 \nAND award = 'tony award' \nAND category = 'best performance by a leading actor in a musical' \nAND nominee = 'gary beach';</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-913.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> dwight phillips was the first person to set a long jump record</h3>\n<h3>Input Table: long jump</h3>\n<div class=\"step\">\n<table>\n<tr><td>mark</td><td>wind</td><td>athlete</td><td>nationality</td><td>venue</td><td>date</td></tr><tr><td>8.95 m (29ft4\u00bcin)</td><td>0.3</td><td>mike powell</td><td>united states</td><td>tokyo</td><td>1991-08-30</td></tr><tr><td>8.90 m (29ft2\u00bcin) a</td><td>2.0</td><td>bob beamon</td><td>united states</td><td>mexico city</td><td>1968-10-18</td></tr><tr><td>8.87 m (29ft1in)</td><td>0.2</td><td>carl lewis</td><td>united states</td><td>tokyo</td><td>1991-08-30</td></tr><tr><td>8.86 m (29ft0\u00bein) a</td><td>1.9</td><td>robert emmiyan</td><td>soviet union</td><td>tsakhkadzor</td><td>1987-05-22</td></tr><tr><td>8.74 m (28ft8in)</td><td>1.4</td><td>larry myricks</td><td>united states</td><td>indianapolis</td><td>1988-07-18</td></tr><tr><td>8.74 m (28ft8in) a</td><td>2.0</td><td>erick walder</td><td>united states</td><td>el paso</td><td>1994-04-02</td></tr><tr><td>8.74 m (28ft8in)</td><td>1.2</td><td>dwight phillips</td><td>united states</td><td>eugene</td><td>2009-06-07</td></tr><tr><td>8.73 m (28ft7\u00bdin)</td><td>1.2</td><td>irving saladino</td><td>panama</td><td>hengelo</td><td>2008-05-24</td></tr><tr><td>8.71 m (28ft6\u00bein)</td><td>1.9</td><td>iv\u00e1n pedroso</td><td>cuba</td><td>salamanca</td><td>1995-07-18</td></tr><tr><td>8.66 m (28ft4\u00bein)</td><td>1.6</td><td>lo\u00fais ts\u00e1toumas</td><td>greece</td><td>kalam\u00e1ta</td><td>2007-06-02</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT MIN(date) FROM table_sql) = (SELECT MIN(date) FROM table_sql WHERE athlete = 'dwight phillips') \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FN/test-1700.html": {
        "method": "Text2SQL",
        "subfolder": "FN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "No",
        "Model_Prediction": "False",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> skip ron macdonald had a pf of 67 and ends lost of 51</h3>\n<h3>Input Table: 2005 tim hortons brier</h3>\n<div class=\"step\">\n<table>\n<tr><td>locale</td><td>skip</td><td>w</td><td>l</td><td>pf</td><td>pa</td><td>ends_won</td><td>ends_lost</td><td>blank_ends</td><td>stolen_ends</td><td>shot_pct</td></tr><tr><td>alberta</td><td>randy ferbey</td><td>9</td><td>2</td><td>90</td><td>58</td><td>48</td><td>43</td><td>7</td><td>9</td><td>86%</td></tr><tr><td>manitoba</td><td>randy dutiaume</td><td>8</td><td>3</td><td>77</td><td>69</td><td>47</td><td>44</td><td>10</td><td>13</td><td>79%</td></tr><tr><td>nova scotia</td><td>shawn adams</td><td>8</td><td>3</td><td>80</td><td>60</td><td>47</td><td>41</td><td>16</td><td>13</td><td>83%</td></tr><tr><td>quebec</td><td>jean - michel m\u00e3nard</td><td>7</td><td>4</td><td>77</td><td>69</td><td>54</td><td>40</td><td>8</td><td>15</td><td>80%</td></tr><tr><td>british columbia</td><td>deane horning</td><td>6</td><td>5</td><td>72</td><td>65</td><td>47</td><td>45</td><td>18</td><td>12</td><td>80%</td></tr><tr><td>ontario</td><td>wayne middaugh</td><td>6</td><td>5</td><td>75</td><td>62</td><td>42</td><td>46</td><td>10</td><td>7</td><td>82%</td></tr><tr><td>newfoundland and labrador</td><td>brad gushue</td><td>6</td><td>5</td><td>76</td><td>69</td><td>48</td><td>45</td><td>13</td><td>10</td><td>79%</td></tr><tr><td>saskatchewan</td><td>pat simmons</td><td>6</td><td>5</td><td>66</td><td>61</td><td>43</td><td>45</td><td>12</td><td>9</td><td>80%</td></tr><tr><td>prince edward island</td><td>rod macdonald</td><td>4</td><td>7</td><td>67</td><td>85</td><td>41</td><td>51</td><td>12</td><td>5</td><td>79%</td></tr><tr><td>northern ontario</td><td>mike jakubo</td><td>3</td><td>8</td><td>64</td><td>86</td><td>41</td><td>48</td><td>9</td><td>6</td><td>79%</td></tr><tr><td>new brunswick</td><td>wade blanchard</td><td>3</td><td>8</td><td>56</td><td>83</td><td>41</td><td>45</td><td>17</td><td>8</td><td>78%</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT pf FROM table_sql WHERE skip = 'ron macdonald') = 67 \n             AND (SELECT ends_lost FROM table_sql WHERE skip = 'ron macdonald') = 51 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-1380.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "No",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> there is 1 mideast rank and 1 asian rank</h3>\n<h3>Input Table: list of asian and pacific countries by gdp (ppp)</h3>\n<div class=\"step\">\n<table>\n<tr><td>rank_mideast</td><td>rank_asia</td><td>rank_world</td><td>country</td><td>2011_gdp_(ppp)_billions_of_usd</td></tr><tr><td>1</td><td>6</td><td>17</td><td>iran</td><td>930.236</td></tr><tr><td>2</td><td>9</td><td>23</td><td>saudi arabia</td><td>677.663</td></tr><tr><td>3</td><td>18</td><td>48</td><td>united arab emirates</td><td>261.189</td></tr><tr><td>4</td><td>19</td><td>50</td><td>israel</td><td>235.446</td></tr><tr><td>5</td><td>21</td><td>55</td><td>qatar</td><td>181.912</td></tr><tr><td>6</td><td>22</td><td>58</td><td>kuwait</td><td>150.002</td></tr><tr><td>7</td><td>23</td><td>60</td><td>iraq</td><td>127.348</td></tr><tr><td>8</td><td>26</td><td>66</td><td>syria</td><td>107.803</td></tr><tr><td>9</td><td>29</td><td>76</td><td>oman</td><td>81.005</td></tr><tr><td>10</td><td>30</td><td>83</td><td>yemen</td><td>63.344</td></tr><tr><td>11</td><td>31</td><td>84</td><td>lebanon</td><td>61.738</td></tr><tr><td>12</td><td>35</td><td>97</td><td>jordan</td><td>36.897</td></tr><tr><td>13</td><td>37</td><td>104</td><td>bahrain</td><td>30.889</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 1 THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql \nWHERE rank_mideast IS NOT NULL \nAND rank_asia IS NOT NULL;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-1232.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the lions finished with a record of 4 wins and 8 losses</h3>\n<h3>Input Table: 1976 detroit lions season</h3>\n<div class=\"step\">\n<table>\n<tr><td>week</td><td>date</td><td>opponent</td><td>result</td><td>attendance</td></tr><tr><td>1</td><td>1976-09-12</td><td>chicago bears</td><td>l 10 - 3</td><td>54125</td></tr><tr><td>2</td><td>1976-09-19</td><td>atlanta falcons</td><td>w 24 - 10</td><td>50840</td></tr><tr><td>3</td><td>1976-09-26</td><td>minnesota vikings</td><td>l 10 - 9</td><td>77292</td></tr><tr><td>4</td><td>1976-10-03</td><td>green bay packers</td><td>l 24 - 14</td><td>55041</td></tr><tr><td>5</td><td>1976-10-10</td><td>new england patriots</td><td>w 30 - 10</td><td>60174</td></tr><tr><td>6</td><td>1976-10-17</td><td>washington redskins</td><td>l 20 - 7</td><td>45908</td></tr><tr><td>7</td><td>1976-10-24</td><td>seattle seahawks</td><td>w 41 - 14</td><td>61280</td></tr><tr><td>8</td><td>1976-10-31</td><td>green bay packers</td><td>w 27 - 6</td><td>74992</td></tr><tr><td>9</td><td>1976-11-07</td><td>minnesota vikings</td><td>l 31 - 23</td><td>46735</td></tr><tr><td>10</td><td>1976-11-14</td><td>new orleans saints</td><td>l 17 - 16</td><td>42048</td></tr><tr><td>11</td><td>1976-11-21</td><td>chicago bears</td><td>w 14 - 10</td><td>78042</td></tr><tr><td>12</td><td>1976-11-25</td><td>buffalo bills</td><td>w 27 - 14</td><td>66875</td></tr><tr><td>13</td><td>1976-12-05</td><td>new york giants</td><td>l 24 - 10</td><td>66069</td></tr><tr><td>14</td><td>1976-12-11</td><td>los angeles rams</td><td>l 20 - 17</td><td>73470</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT COUNT(*) FROM table_sql WHERE result = 'w') = 4 \n             AND (SELECT COUNT(*) FROM table_sql WHERE result = 'l') = 8 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-1234.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the chicago bears defeated the lions in both games they played</h3>\n<h3>Input Table: 1976 detroit lions season</h3>\n<div class=\"step\">\n<table>\n<tr><td>week</td><td>date</td><td>opponent</td><td>result</td><td>attendance</td></tr><tr><td>1</td><td>1976-09-12</td><td>chicago bears</td><td>l 10 - 3</td><td>54125</td></tr><tr><td>2</td><td>1976-09-19</td><td>atlanta falcons</td><td>w 24 - 10</td><td>50840</td></tr><tr><td>3</td><td>1976-09-26</td><td>minnesota vikings</td><td>l 10 - 9</td><td>77292</td></tr><tr><td>4</td><td>1976-10-03</td><td>green bay packers</td><td>l 24 - 14</td><td>55041</td></tr><tr><td>5</td><td>1976-10-10</td><td>new england patriots</td><td>w 30 - 10</td><td>60174</td></tr><tr><td>6</td><td>1976-10-17</td><td>washington redskins</td><td>l 20 - 7</td><td>45908</td></tr><tr><td>7</td><td>1976-10-24</td><td>seattle seahawks</td><td>w 41 - 14</td><td>61280</td></tr><tr><td>8</td><td>1976-10-31</td><td>green bay packers</td><td>w 27 - 6</td><td>74992</td></tr><tr><td>9</td><td>1976-11-07</td><td>minnesota vikings</td><td>l 31 - 23</td><td>46735</td></tr><tr><td>10</td><td>1976-11-14</td><td>new orleans saints</td><td>l 17 - 16</td><td>42048</td></tr><tr><td>11</td><td>1976-11-21</td><td>chicago bears</td><td>w 14 - 10</td><td>78042</td></tr><tr><td>12</td><td>1976-11-25</td><td>buffalo bills</td><td>w 27 - 14</td><td>66875</td></tr><tr><td>13</td><td>1976-12-05</td><td>new york giants</td><td>l 24 - 10</td><td>66069</td></tr><tr><td>14</td><td>1976-12-11</td><td>los angeles rams</td><td>l 20 - 17</td><td>73470</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 2 THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql \nWHERE opponent = 'chicago bears' \nAND result LIKE 'w%';</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FN/test-1130.html": {
        "method": "Text2SQL",
        "subfolder": "FN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "No",
        "Model_Prediction": "False",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the player with the highest number of league goals is ian robins</h3>\n<h3>Input Table: 1979 - 80 huddersfield town f.c. season</h3>\n<div class=\"step\">\n<table>\n<tr><td>name</td><td>position</td><td>league_apps</td><td>league_goals</td><td>fa_cup_apps</td><td>fa_cup_goals</td><td>league_cup_apps</td><td>league_cup_goals</td><td>total_apps</td><td>total_goals</td></tr><tr><td>jim branagan</td><td>df</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0 (1)</td><td>0</td><td>0 (1)</td><td>0</td></tr><tr><td>malcolm brown</td><td>df</td><td>46</td><td>2</td><td>2</td><td>0</td><td>4</td><td>1</td><td>52</td><td>3</td></tr><tr><td>david cowling</td><td>mf</td><td>39 (1)</td><td>10</td><td>1</td><td>0</td><td>4</td><td>0</td><td>44 (1)</td><td>10</td></tr><tr><td>peter fletcher</td><td>fw</td><td>30 (8)</td><td>17</td><td>2</td><td>0</td><td>3</td><td>1</td><td>35 (8)</td><td>18</td></tr><tr><td>keith hanvey</td><td>df</td><td>33</td><td>2</td><td>0</td><td>0</td><td>4</td><td>0</td><td>39</td><td>2</td></tr><tr><td>peter hart</td><td>mf</td><td>46</td><td>4</td><td>1</td><td>1</td><td>4</td><td>0</td><td>51</td><td>5</td></tr><tr><td>ian holmes</td><td>mf</td><td>6 (4)</td><td>3</td><td>0</td><td>0</td><td>4</td><td>1</td><td>10 (4)</td><td>4</td></tr><tr><td>steve kindon</td><td>fw</td><td>22 (1)</td><td>14</td><td>0</td><td>0</td><td>0</td><td>0</td><td>22 (1)</td><td>14</td></tr><tr><td>mick laverick</td><td>mf</td><td>45</td><td>4</td><td>2</td><td>0</td><td>4</td><td>0</td><td>51</td><td>4</td></tr><tr><td>bernard purdie</td><td>df</td><td>18 (4)</td><td>0</td><td>2</td><td>0</td><td>0</td><td>0</td><td>20 (4)</td><td>0</td></tr><tr><td>andy rankin</td><td>gk</td><td>24</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>24</td><td>0</td></tr><tr><td>ian robins</td><td>fw</td><td>45</td><td>25</td><td>2</td><td>0</td><td>4</td><td>2</td><td>51</td><td>27</td></tr><tr><td>fred robinson</td><td>df</td><td>30</td><td>1</td><td>2</td><td>0</td><td>4</td><td>0</td><td>36</td><td>1</td></tr><tr><td>tommy smith</td><td>fw</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td></tr><tr><td>brian stanton</td><td>mf</td><td>41</td><td>9</td><td>2</td><td>0</td><td>0</td><td>0</td><td>43</td><td>9</td></tr><tr><td>alan starling</td><td>gk</td><td>22</td><td>0</td><td>2</td><td>0</td><td>4</td><td>0</td><td>28</td><td>0</td></tr><tr><td>dave sutton</td><td>df</td><td>46</td><td>6</td><td>2</td><td>0</td><td>4</td><td>1</td><td>52</td><td>7</td></tr><tr><td>chris topping</td><td>df</td><td>13</td><td>0</td><td>2</td><td>0</td><td>0</td><td>0</td><td>15</td><td>0</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT MAX(league_goals) FROM table_sql) = (SELECT league_goals FROM table_sql WHERE name = 'ian robins') \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-462.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> gene borek is from the united states</h3>\n<h3>Input Table: 1973 u.s. open (golf)</h3>\n<div class=\"step\">\n<table>\n<tr><td>place</td><td>player</td><td>country</td><td>score</td><td>to_par</td></tr><tr><td>1</td><td>gary player</td><td>south africa</td><td>67 + 70 = 137</td><td>- 5</td></tr><tr><td>2</td><td>jim colbert</td><td>united states</td><td>70 + 68 = 138</td><td>- 4</td></tr><tr><td>t3</td><td>jack nicklaus</td><td>united states</td><td>71 + 69 = 140</td><td>- 2</td></tr><tr><td>t3</td><td>johnny miller</td><td>united states</td><td>71 + 69 = 140</td><td>- 2</td></tr><tr><td>t3</td><td>bob charles</td><td>new zealand</td><td>71 + 69 = 140</td><td>- 2</td></tr><tr><td>t6</td><td>gene borek</td><td>united states</td><td>77 + 65 = 142</td><td>e</td></tr><tr><td>t6</td><td>julius boros</td><td>united states</td><td>73 + 69 = 142</td><td>e</td></tr><tr><td>t6</td><td>tom weiskopf</td><td>united states</td><td>73 + 69 = 142</td><td>e</td></tr><tr><td>t6</td><td>arnold palmer</td><td>united states</td><td>71 + 71 = 142</td><td>e</td></tr><tr><td>t6</td><td>lee trevino</td><td>united states</td><td>70 + 72 = 142</td><td>e</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE player = 'gene borek' \nAND country = 'united states';</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-527.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> kardinia park is one of the six venues that were put to use on 3 june , 1961</h3>\n<h3>Input Table: 1961 vfl season</h3>\n<div class=\"step\">\n<table>\n<tr><td>home_team</td><td>home_team_score</td><td>away_team</td><td>away_team_score</td><td>venue</td><td>crowd</td><td>date</td></tr><tr><td>north melbourne</td><td>9.14 (68)</td><td>st kilda</td><td>11.16 (82)</td><td>arden street oval</td><td>13000</td><td>1961-06-03</td></tr><tr><td>hawthorn</td><td>10.13 (73)</td><td>richmond</td><td>8.12 (60)</td><td>glenferrie oval</td><td>15000</td><td>1961-06-03</td></tr><tr><td>collingwood</td><td>18.11 (119)</td><td>essendon</td><td>8.10 (58)</td><td>victoria park</td><td>28290</td><td>1961-06-03</td></tr><tr><td>geelong</td><td>13.13 (91)</td><td>footscray</td><td>4.14 (38)</td><td>kardinia park</td><td>18683</td><td>1961-06-03</td></tr><tr><td>south melbourne</td><td>7.8 (50)</td><td>fitzroy</td><td>17.15 (117)</td><td>lake oval</td><td>14500</td><td>1961-06-03</td></tr><tr><td>melbourne</td><td>15.14 (104)</td><td>carlton</td><td>11.13 (79)</td><td>mcg</td><td>49678</td><td>1961-06-03</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE date = '1961-06-03' \nAND venue = 'kardinia park';</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-734.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> there were two times the attendance was over 50000</h3>\n<h3>Input Table: 2008 arizona diamondbacks season</h3>\n<div class=\"step\">\n<table>\n<tr><td>date</td><td>opponent</td><td>score</td><td>loss</td><td>attendance</td><td>record</td></tr><tr><td>9999-09-01</td><td>cardinals</td><td>8 - 6</td><td>mcclellan (2 - 7)</td><td>35075</td><td>70 - 67</td></tr><tr><td>9999-09-02</td><td>cardinals</td><td>8 - 2</td><td>petit (3 - 4)</td><td>27568</td><td>70 - 68</td></tr><tr><td>9999-09-03</td><td>cardinals</td><td>4 - 3</td><td>perez (2 - 2)</td><td>24350</td><td>71 - 68</td></tr><tr><td>9999-09-05</td><td>dodgers</td><td>7 - 0</td><td>haren (14 - 8)</td><td>52270</td><td>71 - 69</td></tr><tr><td>9999-09-06</td><td>dodgers</td><td>7 - 2</td><td>webb (19 - 7)</td><td>47543</td><td>71 - 70</td></tr><tr><td>9999-09-07</td><td>dodgers</td><td>5 - 3</td><td>rauch (4 - 6)</td><td>54137</td><td>71 - 71</td></tr><tr><td>9999-09-08</td><td>giants</td><td>6 - 2</td><td>petit (3 - 5)</td><td>30252</td><td>71 - 72</td></tr><tr><td>9999-09-09</td><td>giants</td><td>5 - 4</td><td>rauch (4 - 7)</td><td>30518</td><td>71 - 73</td></tr><tr><td>9999-09-10</td><td>giants</td><td>4 - 3</td><td>lyon (2 - 5)</td><td>30992</td><td>71 - 74</td></tr><tr><td>9999-09-12</td><td>reds</td><td>3 - 2</td><td>harang (4 - 16)</td><td>29046</td><td>72 - 74</td></tr><tr><td>9999-09-13</td><td>reds</td><td>3 - 2 (10)</td><td>pe\u00f1a (1 - 2)</td><td>45075</td><td>72 - 75</td></tr><tr><td>9999-09-14</td><td>reds</td><td>2 - 1 (10)</td><td>rauch (4 - 8)</td><td>27297</td><td>72 - 76</td></tr><tr><td>9999-09-15</td><td>giants</td><td>3 - 1</td><td>hennessey (1 - 2)</td><td>25969</td><td>73 - 76</td></tr><tr><td>9999-09-16</td><td>giants</td><td>2 - 0</td><td>cain (8 - 13)</td><td>33195</td><td>74 - 76</td></tr><tr><td>9999-09-17</td><td>giants</td><td>7 - 6</td><td>s\u00e1nchez (9 - 11)</td><td>22616</td><td>75 - 76</td></tr><tr><td>9999-09-18</td><td>giants</td><td>3 - 2</td><td>lincecum (17 - 4)</td><td>34323</td><td>76 - 76</td></tr><tr><td>9999-09-19</td><td>rockies</td><td>3 - 2</td><td>scherzer (0 - 3)</td><td>43137</td><td>76 - 77</td></tr><tr><td>9999-09-20</td><td>rockies</td><td>5 - 3</td><td>fuentes (1 - 5)</td><td>38283</td><td>77 - 77</td></tr><tr><td>9999-09-21</td><td>rockies</td><td>13 - 4</td><td>reynolds (2 - 8)</td><td>32915</td><td>78 - 77</td></tr><tr><td>9999-09-22</td><td>cardinals</td><td>4 - 2</td><td>wellemeyer (12 - 9)</td><td>40349</td><td>79 - 77</td></tr><tr><td>9999-09-23</td><td>cardinals</td><td>7 - 4</td><td>johnson (10 - 10)</td><td>40013</td><td>79 - 78</td></tr><tr><td>9999-09-24</td><td>cardinals</td><td>4 - 2</td><td>scherzer (0 - 4)</td><td>40029</td><td>79 - 79</td></tr><tr><td>9999-09-25</td><td>cardinals</td><td>12 - 3</td><td>rosales (1 - 1)</td><td>40502</td><td>79 - 80</td></tr><tr><td>9999-09-26</td><td>rockies</td><td>6 - 4</td><td>grilli (3 - 3)</td><td>34950</td><td>80 - 80</td></tr><tr><td>9999-09-27</td><td>rockies</td><td>6 - 4</td><td>corpas (3 - 4)</td><td>33234</td><td>81 - 80</td></tr><tr><td>9999-09-28</td><td>rockies</td><td>2 - 1</td><td>vizca\u00edno (1 - 2)</td><td>35908</td><td>82 - 80</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) >= 2 THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql \nWHERE attendance > 50000;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-1072.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the largest attendance of 44505 was at the game that took place on september 13 , 1976</h3>\n<h3>Input Table: 1976 buffalo bills season</h3>\n<div class=\"step\">\n<table>\n<tr><td>week</td><td>date</td><td>opponent</td><td>result</td><td>attendance</td></tr><tr><td>1</td><td>1976-09-13</td><td>miami dolphins</td><td>l 30 - 21</td><td>77683</td></tr><tr><td>2</td><td>1976-09-19</td><td>houston oilers</td><td>l 13 - 3</td><td>61384</td></tr><tr><td>3</td><td>1976-09-26</td><td>tampa bay buccaneers</td><td>w 14 - 9</td><td>44505</td></tr><tr><td>4</td><td>1976-10-03</td><td>kansas city chiefs</td><td>w 50 - 17</td><td>51909</td></tr><tr><td>5</td><td>1976-10-10</td><td>new york jets</td><td>l 17 - 14</td><td>59110</td></tr><tr><td>6</td><td>1976-10-17</td><td>baltimore colts</td><td>l 31 - 13</td><td>71009</td></tr><tr><td>7</td><td>1976-10-24</td><td>new england patriots</td><td>l 26 - 22</td><td>45144</td></tr><tr><td>8</td><td>1976-10-31</td><td>new york jets</td><td>l 19 - 14</td><td>41285</td></tr><tr><td>9</td><td>1976-11-07</td><td>new england patriots</td><td>l 20 - 10</td><td>61157</td></tr><tr><td>10</td><td>1976-11-15</td><td>dallas cowboys</td><td>l 17 - 10</td><td>51799</td></tr><tr><td>11</td><td>1976-11-21</td><td>san diego chargers</td><td>l 34 - 13</td><td>36539</td></tr><tr><td>12</td><td>1976-11-25</td><td>detroit lions</td><td>l 27 - 14</td><td>66875</td></tr><tr><td>13</td><td>1976-12-05</td><td>miami dolphins</td><td>l 45 - 27</td><td>43475</td></tr><tr><td>14</td><td>1976-12-12</td><td>baltimore colts</td><td>l 58 - 20</td><td>50451</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN attendance = 44505 AND date = '1976-09-13' THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-1501.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> potter co in copiah was the first project proposed , but the last to be listed</h3>\n<h3>Input Table: list of superfund sites in mississippi</h3>\n<div class=\"step\">\n<table>\n<tr><td>cerclis_id</td><td>name</td><td>county</td><td>proposed</td><td>listed</td><td>construction_completed</td><td>partially_deleted</td><td>deleted</td></tr><tr><td>msd004006995</td><td>american creosote works , inc</td><td>winston</td><td>2001-06-14</td><td>2001-09-13</td><td>9999-01-01</td><td>-</td><td>-</td></tr><tr><td>msd008154486</td><td>chemfax , inc</td><td>harrison</td><td>1993-06-23</td><td>9999-01-01</td><td>9999-01-01</td><td>-</td><td>-</td></tr><tr><td>msd046497012</td><td>davis timber company</td><td>lamar</td><td>2000-05-11</td><td>2000-07-27</td><td>9999-01-01</td><td>-</td><td>-</td></tr><tr><td>msd980710941</td><td>flowood site</td><td>rankin</td><td>1983-09-08</td><td>1984-09-21</td><td>1993-09-17</td><td>-</td><td>02 / 16 / 1996</td></tr><tr><td>msd980840045</td><td>newsom brothers / old reichhold chemicals , inc</td><td>marion</td><td>1984-10-15</td><td>1986-06-10</td><td>1997-08-08</td><td>-</td><td>09 / 27 / 2000</td></tr><tr><td>msd065490930</td><td>picayune wood treating</td><td>pearl river</td><td>2004-03-08</td><td>2004-07-22</td><td>9999-01-01</td><td>-</td><td>-</td></tr><tr><td>msd056029648</td><td>potter co</td><td>copiah</td><td>1993-05-10</td><td>9999-01-01</td><td>9999-01-01</td><td>-</td><td>-</td></tr><tr><td>msd086556388</td><td>sonford products</td><td>rankin</td><td>2006-09-27</td><td>2007-03-07</td><td>9999-01-01</td><td>-</td><td>-</td></tr><tr><td>msd980601736</td><td>walcotte chemical co warehouses</td><td>washington</td><td>9999-01-01</td><td>9999-01-01</td><td>1982-12-30</td><td>-</td><td>12 / 30 / 1982</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT proposed FROM table_sql WHERE name = 'potter co' AND county = 'copiah') = \n             (SELECT MIN(proposed) FROM table_sql) \n        AND (SELECT listed FROM table_sql WHERE name = 'potter co' AND county = 'copiah') = \n             (SELECT MAX(listed) FROM table_sql) \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FN/test-1577.html": {
        "method": "Text2SQL",
        "subfolder": "FN",
        "LLM_analysis": "No",
        "Actual_Correctness": "No",
        "Model_Prediction": "False",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the screening that started march 29th , 2006 , was completed may 3rd , 2006</h3>\n<h3>Input Table: none</h3>\n<div class=\"step\">\n<table>\n<tr><td>screening_started</td><td>screening_completed</td><td>chapter_unfrozen</td><td>chapter_opened</td><td>chapter_closed</td></tr><tr><td>2005-11-25</td><td>2005-12-22</td><td>9999-01-01</td><td>2008-12-19</td><td>9999-01-01</td></tr><tr><td>2006-06-21</td><td>2006-07-20</td><td>9999-01-01</td><td>2008-06-17</td><td>9999-01-01</td></tr><tr><td>2006-02-06</td><td>2006-03-03</td><td>9999-01-01</td><td>2008-06-17</td><td>9999-01-01</td></tr><tr><td>2006-06-12</td><td>2006-07-14</td><td>9999-01-01</td><td>2008-12-19</td><td>9999-01-01</td></tr><tr><td>2006-03-09</td><td>2006-04-28</td><td>9999-01-01</td><td>2010-06-30</td><td>9999-01-01</td></tr><tr><td>2006-06-06</td><td>2006-07-12</td><td>9999-01-01</td><td>2009-06-30</td><td>9999-01-01</td></tr><tr><td>2006-02-16</td><td>2006-03-23</td><td>9999-01-01</td><td>9999-01-01</td><td>9999-01-01</td></tr><tr><td>2006-06-19</td><td>2006-07-18</td><td>9999-01-01</td><td>2007-06-25</td><td>9999-01-01</td></tr><tr><td>2006-02-08</td><td>2006-03-22</td><td>9999-01-01</td><td>9999-01-01</td><td>9999-01-01</td></tr><tr><td>2006-03-27</td><td>2006-05-01</td><td>9999-01-01</td><td>2007-03-29</td><td>9999-01-01</td></tr><tr><td>2006-06-30</td><td>2006-09-29</td><td>9999-01-01</td><td>2007-12-19</td><td>9999-01-01</td></tr><tr><td>2006-09-11</td><td>2006-10-10</td><td>2013-02-12</td><td>2013-06-25</td><td>9999-01-01</td></tr><tr><td>2006-09-07</td><td>2006-10-13</td><td>9999-01-01</td><td>9999-01-01</td><td>9999-01-01</td></tr><tr><td>2005-10-20</td><td>2005-11-14</td><td>9999-01-01</td><td>2006-06-12</td><td>2006-06-12</td></tr><tr><td>2006-04-03</td><td>2006-06-02</td><td>9999-01-01</td><td>2009-12-21</td><td>9999-01-01</td></tr><tr><td>2006-06-08</td><td>2006-07-11</td><td>9999-01-01</td><td>2007-12-19</td><td>9999-01-01</td></tr><tr><td>2006-05-18</td><td>2006-06-30</td><td>9999-01-01</td><td>2007-07-26</td><td>9999-01-01</td></tr><tr><td>9999-01-01</td><td>9999-01-01</td><td>9999-01-01</td><td>9999-01-01</td><td>9999-01-01</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN screening_started = '2006-03-29' AND screening_completed = '2006-05-03' THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-790.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "No",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> brian watts of sweden with to par + 2 has scored 68 + 69 + 73 = 210 and is at place t2</h3>\n<h3>Input Table: 1998 open championship</h3>\n<div class=\"step\">\n<table>\n<tr><td>place</td><td>player</td><td>country</td><td>score</td><td>to_par</td></tr><tr><td>1</td><td>brian watts</td><td>united states</td><td>68 + 69 + 73 = 210</td><td>e</td></tr><tr><td>t2</td><td>jim furyk</td><td>united states</td><td>70 + 70 + 72 = 212</td><td>+ 2</td></tr><tr><td>t2</td><td>mark o'meara</td><td>united states</td><td>72 + 68 + 72 = 212</td><td>+ 2</td></tr><tr><td>t2</td><td>jesper parnevik</td><td>sweden</td><td>68 + 72 + 72 = 212</td><td>+ 2</td></tr><tr><td>5</td><td>justin rose (a)</td><td>england</td><td>72 + 66 + 75 = 213</td><td>+ 3</td></tr><tr><td>t6</td><td>thomas bj\u00e3rn</td><td>denmark</td><td>68 + 71 + 76 = 215</td><td>+ 5</td></tr><tr><td>t6</td><td>brad faxon</td><td>united states</td><td>67 + 74 + 74 = 215</td><td>+ 5</td></tr><tr><td>t6</td><td>john huston</td><td>united states</td><td>65 + 77 + 73 = 215</td><td>+ 5</td></tr><tr><td>t6</td><td>tiger woods</td><td>united states</td><td>65 + 73 + 77 = 215</td><td>+ 5</td></tr><tr><td>t10</td><td>david duval</td><td>united states</td><td>70 + 71 + 75 = 216</td><td>+ 6</td></tr><tr><td>t10</td><td>costantino rocca</td><td>italy</td><td>72 + 74 + 70 = 216</td><td>+ 6</td></tr><tr><td>t10</td><td>raymond russell</td><td>scotland</td><td>68 + 73 + 75 = 216</td><td>+ 6</td></tr><tr><td>t10</td><td>katsuyoshi tomori</td><td>japan</td><td>75 + 71 + 70 = 216</td><td>+ 6</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT place FROM table_sql WHERE player = 'brian watts' AND country = 'sweden' AND to_par = '+ 2' AND score = '68 + 69 + 73 = 210') = 't2' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FP/test-1278.html": {
        "method": "Text2SQL",
        "subfolder": "FP",
        "LLM_analysis": "No",
        "Actual_Correctness": "No",
        "Model_Prediction": "True",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> denver lost more than one game in a row on two occasions during november</h3>\n<h3>Input Table: 2009 - 10 denver nuggets season</h3>\n<div class=\"step\">\n<table>\n<tr><td>game</td><td>date</td><td>team</td><td>score</td><td>high_points</td><td>high_rebounds</td><td>high_assists</td><td>location_attendance</td><td>record</td></tr><tr><td>3</td><td>9999-11-01</td><td>grizzlies</td><td>w 133 - 123 (ot)</td><td>carmelo anthony (42)</td><td>nen\u00ea (9)</td><td>chauncey billups (12)</td><td>pepsi center 15823</td><td>3 - 0</td></tr><tr><td>4</td><td>9999-11-03</td><td>pacers</td><td>w 111 - 93 (ot)</td><td>carmelo anthony (25)</td><td>nen\u00ea (13)</td><td>anthony carter (5)</td><td>conseco fieldhouse 10627</td><td>4 - 0</td></tr><tr><td>5</td><td>9999-11-04</td><td>nets</td><td>w 122 - 94 (ot)</td><td>ty lawson (23)</td><td>kenyon martin (10)</td><td>chauncey billups (5)</td><td>izod center 15319</td><td>5 - 0</td></tr><tr><td>7</td><td>9999-11-07</td><td>hawks</td><td>l 100 - 125 (ot)</td><td>carmelo anthony (30)</td><td>chris andersen (11)</td><td>chauncey billups (7)</td><td>philips arena 17801</td><td>5 - 2</td></tr><tr><td>8</td><td>9999-11-10</td><td>bulls</td><td>w 90 - 89 (ot)</td><td>carmelo anthony (20)</td><td>nen\u00ea (12)</td><td>chauncey billups (6)</td><td>united center 21409</td><td>6 - 2</td></tr><tr><td>9</td><td>9999-11-11</td><td>bucks</td><td>l 102 - 108 (ot)</td><td>carmelo anthony (32)</td><td>carmelo anthony (10)</td><td>chauncey billups , ty lawson (5)</td><td>bradley center 12987</td><td>6 - 3</td></tr><tr><td>10</td><td>9999-11-13</td><td>lakers</td><td>w 105 - 79 (ot)</td><td>carmelo anthony (25)</td><td>chris andersen (11)</td><td>chauncey billups (8)</td><td>pepsi center 19141</td><td>7 - 3</td></tr><tr><td>11</td><td>9999-11-17</td><td>raptors</td><td>w 130 - 112 (ot)</td><td>carmelo anthony (32)</td><td>nen\u00ea (10)</td><td>chauncey billups (10)</td><td>pepsi center 16446</td><td>8 - 3</td></tr><tr><td>12</td><td>9999-11-20</td><td>clippers</td><td>l 99 - 106 (ot)</td><td>carmelo anthony (37)</td><td>nen\u00ea (12)</td><td>chauncey billups (7)</td><td>staples center 18155</td><td>8 - 4</td></tr><tr><td>13</td><td>9999-11-21</td><td>bulls</td><td>w 112 - 93 (ot)</td><td>carmelo anthony (30)</td><td>carmelo anthony , kenyon martin (11)</td><td>carmelo anthony (7)</td><td>pepsi center 19359</td><td>9 - 4</td></tr><tr><td>14</td><td>9999-11-24</td><td>nets</td><td>w 101 - 87 (ot)</td><td>carmelo anthony (27)</td><td>nen\u00ea (9)</td><td>chauncey billups (7)</td><td>pepsi center 16307</td><td>10 - 4</td></tr><tr><td>15</td><td>9999-11-25</td><td>timberwolves</td><td>w 124 - 111 (ot)</td><td>carmelo anthony (22)</td><td>nen\u00ea (8)</td><td>nen\u00ea , ty lawson (6)</td><td>target center 13101</td><td>11 - 4</td></tr><tr><td>16</td><td>9999-11-27</td><td>knicks</td><td>w 128 - 125 (ot)</td><td>carmelo anthony (50)</td><td>nen\u00ea , kenyon martin (11)</td><td>chauncey billups (8)</td><td>pepsi center 19155</td><td>12 - 4</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT COUNT(*) FROM table_sql WHERE record LIKE '%- 0%') >= 2 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-1242.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the production code for the episode directed by robert duncan mcneill is bcw403</h3>\n<h3>Input Table: list of white collar episodes</h3>\n<div class=\"step\">\n<table>\n<tr><td>no_in_series</td><td>no_in_season</td><td>title</td><td>directed_by</td><td>written_by</td><td>us_viewers_(million)</td><td>original_air_date</td><td>production_code</td></tr><tr><td>47</td><td>1</td><td>wanted</td><td>paul holahan</td><td>jeff eastin</td><td>3.21</td><td>2012-07-10</td><td>bcw401</td></tr><tr><td>48</td><td>2</td><td>most wanted</td><td>paul holahan</td><td>mark goffman</td><td>2.98</td><td>2012-07-17</td><td>bcw402</td></tr><tr><td>49</td><td>3</td><td>diminishing returns</td><td>stefan schwartz</td><td>jim campolongo</td><td>3.01</td><td>2012-07-24</td><td>bcw403</td></tr><tr><td>50</td><td>4</td><td>parting shots</td><td>robert duncan mcneill</td><td>alexandra mcnally</td><td>2.82</td><td>2012-07-31</td><td>bcw404</td></tr><tr><td>51</td><td>5</td><td>honor among thieves</td><td>arlene sanford</td><td>joe henderson</td><td>2.93</td><td>2012-08-14</td><td>bcw405</td></tr><tr><td>52</td><td>6</td><td>identity crisis</td><td>david straiton</td><td>channing powell</td><td>3.89</td><td>2012-08-21</td><td>bcw406</td></tr><tr><td>53</td><td>7</td><td>compromising positions</td><td>paul holahan</td><td>matthew negrete</td><td>3.36</td><td>2012-08-28</td><td>bcw407</td></tr><tr><td>54</td><td>8</td><td>ancient history</td><td>russell lee fine</td><td>daniel shattuck</td><td>3.38</td><td>2012-09-04</td><td>bcw408</td></tr><tr><td>55</td><td>9</td><td>gloves off</td><td>renny harlin</td><td>mark goffman</td><td>3.8</td><td>2012-09-11</td><td>bcw409</td></tr><tr><td>56</td><td>10</td><td>vested interest</td><td>russell lee fine</td><td>jeff eastin</td><td>3.41</td><td>2012-09-18</td><td>bcw410</td></tr><tr><td>57</td><td>11</td><td>family business</td><td>paul holahan</td><td>joe henderson</td><td>2.77</td><td>2013-01-22</td><td>bcw411</td></tr><tr><td>58</td><td>12</td><td>brass tacks</td><td>anton cropper</td><td>jim campolongo & alexandra mcnally</td><td>2.61</td><td>2013-01-29</td><td>bcw412</td></tr><tr><td>59</td><td>13</td><td>empire city</td><td>tim dekay</td><td>channing powell & daniel shattuck</td><td>2.28</td><td>2013-02-05</td><td>bcw413</td></tr><tr><td>60</td><td>14</td><td>shoot the moon</td><td>russell lee fine</td><td>matthew negrete & bob derosa</td><td>2.42</td><td>2013-02-19</td><td>bcw414</td></tr><tr><td>61</td><td>15</td><td>the original</td><td>john kretchmer</td><td>mark goffman</td><td>2.12</td><td>2013-02-26</td><td>bcw415</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT production_code FROM table_sql WHERE directed_by = 'robert duncan mcneill') = 'bcw403' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-1529.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> draft pick number 155 comes from arizona university</h3>\n<h3>Input Table: 1990 buffalo bills season</h3>\n<div class=\"step\">\n<table>\n<tr><td>round</td><td>pick</td><td>player</td><td>position</td><td>college</td></tr><tr><td>1</td><td>16</td><td>james williams</td><td>defensive back</td><td>fresno state</td></tr><tr><td>2</td><td>43</td><td>carwell gardner</td><td>running back</td><td>louisville</td></tr><tr><td>3</td><td>70</td><td>glenn parker</td><td>guard</td><td>arizona</td></tr><tr><td>4</td><td>101</td><td>eddie fuller</td><td>running back</td><td>lsu</td></tr><tr><td>6</td><td>155</td><td>john nies</td><td>punter</td><td>arizona</td></tr><tr><td>7</td><td>167</td><td>brent griffith</td><td>guard</td><td>minnesota - duluth</td></tr><tr><td>7</td><td>171</td><td>brent collins</td><td>linebacker</td><td>carson - newman</td></tr><tr><td>7</td><td>182</td><td>fred deriggi</td><td>nose tackle</td><td>syracuse</td></tr><tr><td>8</td><td>209</td><td>marvcus patton</td><td>middle linebacker</td><td>ucla</td></tr><tr><td>9</td><td>239</td><td>clarkston hines</td><td>wide receiver</td><td>duke</td></tr><tr><td>10</td><td>266</td><td>mike lodish</td><td>defensive tackle</td><td>ucla</td></tr><tr><td>11</td><td>293</td><td>al edwards</td><td>wide receiver</td><td>northwestern state , la</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE pick = 155 \nAND college = 'arizona';</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-1437.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the indianapolis colts played the new york giants on september 10 at giants stadium , final score 26 - 21</h3>\n<h3>Input Table: nbc sunday night football results (2006 - present)</h3>\n<div class=\"step\">\n<table>\n<tr><td>date</td><td>visiting_team</td><td>final_score</td><td>host_team</td><td>stadium</td></tr><tr><td>9999-09-07</td><td>miami dolphins</td><td>17 - 28</td><td>pittsburgh steelers</td><td>heinz field</td></tr><tr><td>9999-09-10</td><td>indianapolis colts</td><td>26 - 21</td><td>new york giants</td><td>giants stadium</td></tr><tr><td>9999-09-17</td><td>washington redskins</td><td>10 - 27</td><td>dallas cowboys</td><td>texas stadium</td></tr><tr><td>9999-09-24</td><td>denver broncos</td><td>17 - 7</td><td>new england patriots</td><td>gillette stadium</td></tr><tr><td>9999-10-01</td><td>seattle seahawks</td><td>6 - 37</td><td>chicago bears</td><td>soldier field</td></tr><tr><td>9999-10-08</td><td>pittsburgh steelers</td><td>13 - 23</td><td>san diego chargers</td><td>qualcomm stadium</td></tr><tr><td>9999-10-15</td><td>oakland raiders</td><td>3 - 13</td><td>denver broncos</td><td>invesco field at mile high</td></tr><tr><td>9999-10-29</td><td>dallas cowboys</td><td>35 - 14</td><td>carolina panthers</td><td>bank of america stadium</td></tr><tr><td>9999-11-05</td><td>indianapolis colts</td><td>27 - 20</td><td>new england patriots</td><td>gillette stadium</td></tr><tr><td>9999-11-12</td><td>chicago bears</td><td>38 - 20</td><td>new york giants</td><td>giants stadium</td></tr><tr><td>9999-11-19</td><td>san diego chargers</td><td>35 - 27</td><td>denver broncos</td><td>invesco field at mile high</td></tr><tr><td>9999-11-26</td><td>philadelphia eagles</td><td>21 - 45</td><td>indianapolis colts</td><td>rca dome</td></tr><tr><td>9999-12-03</td><td>seattle seahawks</td><td>23 - 20</td><td>denver broncos</td><td>invesco field at mile high</td></tr><tr><td>9999-12-10</td><td>new orleans saints</td><td>42 - 17</td><td>dallas cowboys</td><td>texas stadium</td></tr><tr><td>9999-12-17</td><td>kansas city chiefs</td><td>9 - 20</td><td>san diego chargers</td><td>qualcomm stadium</td></tr><tr><td>9999-12-25</td><td>philadelphia eagles</td><td>23 - 7</td><td>dallas cowboys</td><td>texas stadium</td></tr><tr><td>9999-12-31</td><td>green bay packers</td><td>26 - 7</td><td>chicago bears</td><td>soldier field</td></tr><tr><td>0001-01-06</td><td>kansas city chiefs</td><td>8 - 23</td><td>indianapolis colts</td><td>rca dome</td></tr><tr><td>0001-01-06</td><td>dallas cowboys</td><td>20 - 21</td><td>seattle seahawks</td><td>qwest field</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE date = '9999-09-10' \nAND visiting_team = 'indianapolis colts' \nAND final_score = '26 - 21' \nAND host_team = 'new york giants' \nAND stadium = 'giants stadium';</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FP/test-55.html": {
        "method": "Text2SQL",
        "subfolder": "FP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "No",
        "Model_Prediction": "True",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> agricultural panel has the most members from one party</h3>\n<h3>Input Table: members of the 5th seanad</h3>\n<div class=\"step\">\n<table>\n<tr><td>party</td><td>administrative_panel</td><td>agricultural_panel</td><td>cultural_and_educational_panel</td><td>industrial_and_commercial_panel</td><td>labour_panel</td><td>national_university_of_ireland</td><td>university_of_dublin</td><td>nominated_by_the_taoiseach</td><td>total</td></tr><tr><td>fianna f\u00e1il</td><td>4</td><td>4</td><td>2</td><td>3</td><td>0</td><td>1</td><td>0</td><td>7</td><td>21</td></tr><tr><td>fine gael</td><td>1</td><td>3</td><td>2</td><td>2</td><td>0</td><td>1</td><td>0</td><td>0</td><td>9</td></tr><tr><td>labour party</td><td>0</td><td>0</td><td>0</td><td>1</td><td>5</td><td>0</td><td>0</td><td>2</td><td>8</td></tr><tr><td>clann na talmhan</td><td>0</td><td>2</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>3</td></tr><tr><td>independent</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td><td>3</td><td>3</td><td>9</td></tr><tr><td>total</td><td>7</td><td>11</td><td>5</td><td>9</td><td>11</td><td>3</td><td>3</td><td>11</td><td>60</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT MAX(agricultural_panel) FROM table_sql) = \n             (SELECT agricultural_panel FROM table_sql WHERE party = 'fianna f\u00e1il') \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-920.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the blue jays fell to 76 - 86 following their loss to the red sox on september 28</h3>\n<h3>Input Table: 1997 toronto blue jays season</h3>\n<div class=\"step\">\n<table>\n<tr><td>date</td><td>opponent</td><td>score</td><td>loss</td><td>attendance</td><td>record</td></tr><tr><td>9999-09-01</td><td>mets</td><td>3 - 0</td><td>hentgen (14 - 9)</td><td>19196</td><td>65 - 71</td></tr><tr><td>9999-09-02</td><td>mets</td><td>8 - 5</td><td>clemens (20 - 5)</td><td>17635</td><td>65 - 72</td></tr><tr><td>9999-09-03</td><td>mets</td><td>4 - 2</td><td>quantrill (6 - 6)</td><td>14513</td><td>65 - 73</td></tr><tr><td>9999-09-04</td><td>rangers</td><td>6 - 2</td><td>carpenter (1 - 7)</td><td>26178</td><td>65 - 74</td></tr><tr><td>9999-09-05</td><td>rangers</td><td>5 - 1</td><td>pavlik (2 - 4)</td><td>27121</td><td>66 - 74</td></tr><tr><td>9999-09-06</td><td>rangers</td><td>2 - 1</td><td>burkett (7 - 12)</td><td>31232</td><td>67 - 74</td></tr><tr><td>9999-09-07</td><td>rangers</td><td>4 - 0</td><td>oliver (11 - 11)</td><td>30212</td><td>68 - 74</td></tr><tr><td>9999-09-08</td><td>angels</td><td>12 - 10</td><td>james (4 - 5)</td><td>25775</td><td>69 - 74</td></tr><tr><td>9999-09-09</td><td>angels</td><td>2 - 0</td><td>hill (7 - 12)</td><td>25674</td><td>70 - 74</td></tr><tr><td>9999-09-10</td><td>athletics</td><td>3 - 2</td><td>plesac (1 - 4)</td><td>4764</td><td>70 - 75</td></tr><tr><td>9999-09-11</td><td>athletics</td><td>8 - 7</td><td>escobar (2 - 1)</td><td>6135</td><td>70 - 76</td></tr><tr><td>9999-09-12</td><td>mariners</td><td>7 - 3</td><td>clemens (21 - 6)</td><td>37044</td><td>70 - 77</td></tr><tr><td>9999-09-13</td><td>mariners</td><td>6 - 3</td><td>ayala (10 - 5)</td><td>51631</td><td>71 - 77</td></tr><tr><td>9999-09-14</td><td>mariners</td><td>3 - 2</td><td>risley (0 - 1)</td><td>45477</td><td>71 - 78</td></tr><tr><td>9999-09-15</td><td>mariners</td><td>7 - 3</td><td>williams (8 - 14)</td><td>41684</td><td>71 - 79</td></tr><tr><td>9999-09-17</td><td>red sox</td><td>4 - 3</td><td>quantrill (6 - 7)</td><td>23648</td><td>71 - 80</td></tr><tr><td>9999-09-18</td><td>red sox</td><td>3 - 2</td><td>escobar (3 - 2)</td><td>27990</td><td>71 - 81</td></tr><tr><td>9999-09-19</td><td>yankees</td><td>3 - 0</td><td>gooden (8 - 5)</td><td>31195</td><td>72 - 81</td></tr><tr><td>9999-09-20</td><td>yankees</td><td>4 - 3 (11)</td><td>janzen (1 - 1)</td><td>38332</td><td>72 - 82</td></tr><tr><td>9999-09-21</td><td>yankees</td><td>5 - 4 (10)</td><td>almanzar (0 - 1)</td><td>40038</td><td>72 - 83</td></tr><tr><td>9999-09-22</td><td>yankees</td><td>8 - 1</td><td>hentgen (15 - 10)</td><td>23380</td><td>72 - 84</td></tr><tr><td>9999-09-23</td><td>orioles</td><td>3 - 2</td><td>clemens (21 - 7)</td><td>29276</td><td>72 - 85</td></tr><tr><td>9999-09-24</td><td>orioles</td><td>9 - 3</td><td>daal (1 - 1)</td><td>27443</td><td>72 - 86</td></tr><tr><td>9999-09-25</td><td>orioles</td><td>4 - 3</td><td>mussina (15 - 8)</td><td>28324</td><td>73 - 86</td></tr><tr><td>9999-09-26</td><td>red sox</td><td>3 - 0</td><td>henry (7 - 3)</td><td>34155</td><td>74 - 86</td></tr><tr><td>9999-09-27</td><td>red sox</td><td>12 - 5</td><td>corsi (5 - 3)</td><td>37401</td><td>75 - 86</td></tr><tr><td>9999-09-28</td><td>red sox</td><td>3 - 2</td><td>gordon (6 - 10)</td><td>40251</td><td>76 - 86</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN record = '76 - 86' AND opponent = 'red sox' AND date = '9999-09-28' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-1337.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the second most rebounds by a bobcats player in one game was 20</h3>\n<h3>Input Table: 2009 - 10 charlotte bobcats season</h3>\n<div class=\"step\">\n<table>\n<tr><td>game</td><td>date</td><td>team</td><td>score</td><td>high_points</td><td>high_rebounds</td><td>high_assists</td><td>location_attendance</td><td>record</td></tr><tr><td>47</td><td>01-02-9999</td><td>portland</td><td>l 79 - 98 (ot)</td><td>raymond felton (23)</td><td>gerald wallace (10)</td><td>stephen jackson (4)</td><td>rose garden 20106</td><td>24 - 23</td></tr><tr><td>48</td><td>9999-02-03</td><td>la lakers</td><td>l 97 - 99 (ot)</td><td>stephen jackson (30)</td><td>nazr mohammed (17)</td><td>boris diaw (5)</td><td>staples center 18997</td><td>24 - 24</td></tr><tr><td>49</td><td>9999-02-06</td><td>new orleans</td><td>l 99 - 104 (ot)</td><td>stephen jackson (26)</td><td>boris diaw (8)</td><td>raymond felton (7)</td><td>time warner cable arena 19164</td><td>24 - 25</td></tr><tr><td>50</td><td>9999-02-09</td><td>washington</td><td>w 94 - 92 (ot)</td><td>stephen jackson (22)</td><td>nazr mohammed (10)</td><td>raymond felton (5)</td><td>time warner cable arena 12376</td><td>25 - 25</td></tr><tr><td>51</td><td>01-02-10</td><td>minnesota</td><td>w 93 - 92 (ot)</td><td>stephen jackson (33)</td><td>nazr mohammed (20)</td><td>dj augustin (7)</td><td>target center 13352</td><td>26 - 25</td></tr><tr><td>52</td><td>01-02-16</td><td>new jersey</td><td>l 94 - 103 (ot)</td><td>gerald wallace (21)</td><td>gerald wallace , boris diaw (10)</td><td>stephen jackson (5)</td><td>time warner cable arena 13712</td><td>26 - 26</td></tr><tr><td>53</td><td>9999-02-19</td><td>cleveland</td><td>w 110 - 93 (ot)</td><td>stephen jackson (29)</td><td>tyrus thomas (12)</td><td>boris diaw (9)</td><td>time warner cable arena 19568</td><td>27 - 26</td></tr><tr><td>54</td><td>9999-02-20</td><td>milwaukee</td><td>l 88 - 93 (ot)</td><td>stephen jackson (35)</td><td>tyrus thomas (11)</td><td>stephen jackson (5)</td><td>bradley center 17174</td><td>27 - 27</td></tr><tr><td>55</td><td>9999-02-22</td><td>la clippers</td><td>l 94 - 98 (ot)</td><td>gerald wallace (32)</td><td>gerald wallace (12)</td><td>boris diaw , raymond felton (9)</td><td>staples center 15892</td><td>27 - 28</td></tr><tr><td>56</td><td>9999-02-24</td><td>utah</td><td>l 93 - 102 (ot)</td><td>gerald wallace (27)</td><td>gerald wallace (8)</td><td>raymond felton (5)</td><td>energysolutions arena 19911</td><td>27 - 29</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT MAX(high_rebounds) FROM table_sql) = 20 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FN/test-443.html": {
        "method": "Text2SQL",
        "subfolder": "FN",
        "LLM_analysis": "No",
        "Actual_Correctness": "No",
        "Model_Prediction": "False",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> only two teams (hawthorn and south melbourne) scored less than 10</h3>\n<h3>Input Table: 1938 vfl season</h3>\n<div class=\"step\">\n<table>\n<tr><td>home_team</td><td>home_team_score</td><td>away_team</td><td>away_team_score</td><td>venue</td><td>crowd</td><td>date</td></tr><tr><td>geelong</td><td>11.23 (89)</td><td>hawthorn</td><td>6.13 (49)</td><td>corio oval</td><td>7000</td><td>1938-06-18</td></tr><tr><td>fitzroy</td><td>16.12 (108)</td><td>south melbourne</td><td>8.8 (56)</td><td>brunswick street oval</td><td>12000</td><td>1938-06-18</td></tr><tr><td>st kilda</td><td>14.12 (96)</td><td>melbourne</td><td>16.16 (112)</td><td>junction oval</td><td>14000</td><td>1938-06-18</td></tr><tr><td>richmond</td><td>15.14 (104)</td><td>essendon</td><td>15.9 (99)</td><td>punt road oval</td><td>20000</td><td>1938-06-18</td></tr><tr><td>footscray</td><td>13.9 (87)</td><td>collingwood</td><td>10.5 (65)</td><td>western oval</td><td>18000</td><td>1938-06-18</td></tr><tr><td>north melbourne</td><td>11.5 (71)</td><td>carlton</td><td>16.25 (121)</td><td>arden street oval</td><td>13000</td><td>1938-06-18</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT COUNT(*) FROM table_sql WHERE home_team_score < 10 OR away_team_score < 10) = 2 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FN/test-128.html": {
        "method": "Text2SQL",
        "subfolder": "FN",
        "LLM_analysis": "No",
        "Actual_Correctness": "No",
        "Model_Prediction": "False",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> greg ostertag played the center position for the jazz from 1995 to 2004 and then from 2005 to 2006</h3>\n<h3>Input Table: utah jazz all - time roster</h3>\n<div class=\"step\">\n<table>\n<tr><td>player</td><td>nationality</td><td>position</td><td>years_for_jazz</td><td>school_/_club_team</td></tr><tr><td>mehmet okur</td><td>turkey</td><td>forward - center</td><td>2004 - 11</td><td>efes pilsen ( turkey )</td></tr><tr><td>jos\u00e3 ortiz</td><td>puerto rico</td><td>center</td><td>1988 - 90</td><td>oregon state</td></tr><tr><td>greg ostertag</td><td>united states</td><td>center</td><td>1995 - 2004 , 2005 - 06</td><td>kansas</td></tr><tr><td>dan o 'sullivan</td><td>united states</td><td>center</td><td>1990 - 91</td><td>fordham</td></tr><tr><td>andre owens</td><td>united states</td><td>guard</td><td>2005 - 06</td><td>houston</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT COUNT(*) FROM table_sql WHERE player = 'greg ostertag' AND position = 'center' AND years_for_jazz = '1995-2004, 2005-2006') > 0 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-1090.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the episode called aaliyah was shown later than the episode that has nick production number one higher</h3>\n<h3>Input Table: list of all that episodes</h3>\n<div class=\"step\">\n<table>\n<tr><td>season</td><td>series</td><td>episode_title</td><td>original_air_date</td><td>nick_prod</td></tr><tr><td>1</td><td>38</td><td>tia & tamera mowry / ll cool j</td><td>1996-11-16</td><td>338</td></tr><tr><td>2</td><td>39</td><td>montell jordan</td><td>1996-11-23</td><td>339</td></tr><tr><td>4</td><td>41</td><td>dru hill</td><td>1996-12-07</td><td>341</td></tr><tr><td>5</td><td>42</td><td>tyra banks / blackstreet</td><td>1996-12-14</td><td>342</td></tr><tr><td>6</td><td>43</td><td>music special</td><td>1996-12-17</td><td>343</td></tr><tr><td>7</td><td>44</td><td>a tribe called quest</td><td>1996-12-21</td><td>344</td></tr><tr><td>8</td><td>45</td><td>702</td><td>1996-12-28</td><td>345</td></tr><tr><td>9</td><td>46</td><td>tony! toni! tone!</td><td>1997-01-04</td><td>346</td></tr><tr><td>10</td><td>47</td><td>chris farley / mint condition</td><td>1997-01-11</td><td>347</td></tr><tr><td>11</td><td>48</td><td>112</td><td>1997-01-18</td><td>348</td></tr><tr><td>12</td><td>49</td><td>sherman hemsley / nas</td><td>1997-01-25</td><td>349</td></tr><tr><td>13</td><td>50</td><td>john leguizamo / mona lisa</td><td>1997-02-01</td><td>350</td></tr><tr><td>14</td><td>51</td><td>ray j</td><td>1997-02-08</td><td>351</td></tr><tr><td>15</td><td>52</td><td>for real</td><td>1997-09-20</td><td>352</td></tr><tr><td>16</td><td>53</td><td>aaliyah</td><td>1997-10-04</td><td>353</td></tr><tr><td>17</td><td>54</td><td>az yet</td><td>1997-09-27</td><td>354</td></tr><tr><td>18</td><td>55</td><td>monica</td><td>1997-10-11</td><td>355</td></tr><tr><td>19</td><td>56</td><td>mc lyte</td><td>1997-10-18</td><td>356</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT original_air_date FROM table_sql WHERE episode_title = 'aaliyah') > \n             (SELECT original_air_date FROM table_sql WHERE nick_prod = (SELECT nick_prod FROM table_sql WHERE episode_title = 'aaliyah') + 1) \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FP/test-738.html": {
        "method": "Text2SQL",
        "subfolder": "FP",
        "LLM_analysis": "No",
        "Actual_Correctness": "No",
        "Model_Prediction": "True",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> rosales of arizona diamond have more losses than johnson</h3>\n<h3>Input Table: 2008 arizona diamondbacks season</h3>\n<div class=\"step\">\n<table>\n<tr><td>date</td><td>opponent</td><td>score</td><td>loss</td><td>attendance</td><td>record</td></tr><tr><td>9999-09-01</td><td>cardinals</td><td>8 - 6</td><td>mcclellan (2 - 7)</td><td>35075</td><td>70 - 67</td></tr><tr><td>9999-09-02</td><td>cardinals</td><td>8 - 2</td><td>petit (3 - 4)</td><td>27568</td><td>70 - 68</td></tr><tr><td>9999-09-03</td><td>cardinals</td><td>4 - 3</td><td>perez (2 - 2)</td><td>24350</td><td>71 - 68</td></tr><tr><td>9999-09-05</td><td>dodgers</td><td>7 - 0</td><td>haren (14 - 8)</td><td>52270</td><td>71 - 69</td></tr><tr><td>9999-09-06</td><td>dodgers</td><td>7 - 2</td><td>webb (19 - 7)</td><td>47543</td><td>71 - 70</td></tr><tr><td>9999-09-07</td><td>dodgers</td><td>5 - 3</td><td>rauch (4 - 6)</td><td>54137</td><td>71 - 71</td></tr><tr><td>9999-09-08</td><td>giants</td><td>6 - 2</td><td>petit (3 - 5)</td><td>30252</td><td>71 - 72</td></tr><tr><td>9999-09-09</td><td>giants</td><td>5 - 4</td><td>rauch (4 - 7)</td><td>30518</td><td>71 - 73</td></tr><tr><td>9999-09-10</td><td>giants</td><td>4 - 3</td><td>lyon (2 - 5)</td><td>30992</td><td>71 - 74</td></tr><tr><td>9999-09-12</td><td>reds</td><td>3 - 2</td><td>harang (4 - 16)</td><td>29046</td><td>72 - 74</td></tr><tr><td>9999-09-13</td><td>reds</td><td>3 - 2 (10)</td><td>pe\u00f1a (1 - 2)</td><td>45075</td><td>72 - 75</td></tr><tr><td>9999-09-14</td><td>reds</td><td>2 - 1 (10)</td><td>rauch (4 - 8)</td><td>27297</td><td>72 - 76</td></tr><tr><td>9999-09-15</td><td>giants</td><td>3 - 1</td><td>hennessey (1 - 2)</td><td>25969</td><td>73 - 76</td></tr><tr><td>9999-09-16</td><td>giants</td><td>2 - 0</td><td>cain (8 - 13)</td><td>33195</td><td>74 - 76</td></tr><tr><td>9999-09-17</td><td>giants</td><td>7 - 6</td><td>s\u00e1nchez (9 - 11)</td><td>22616</td><td>75 - 76</td></tr><tr><td>9999-09-18</td><td>giants</td><td>3 - 2</td><td>lincecum (17 - 4)</td><td>34323</td><td>76 - 76</td></tr><tr><td>9999-09-19</td><td>rockies</td><td>3 - 2</td><td>scherzer (0 - 3)</td><td>43137</td><td>76 - 77</td></tr><tr><td>9999-09-20</td><td>rockies</td><td>5 - 3</td><td>fuentes (1 - 5)</td><td>38283</td><td>77 - 77</td></tr><tr><td>9999-09-21</td><td>rockies</td><td>13 - 4</td><td>reynolds (2 - 8)</td><td>32915</td><td>78 - 77</td></tr><tr><td>9999-09-22</td><td>cardinals</td><td>4 - 2</td><td>wellemeyer (12 - 9)</td><td>40349</td><td>79 - 77</td></tr><tr><td>9999-09-23</td><td>cardinals</td><td>7 - 4</td><td>johnson (10 - 10)</td><td>40013</td><td>79 - 78</td></tr><tr><td>9999-09-24</td><td>cardinals</td><td>4 - 2</td><td>scherzer (0 - 4)</td><td>40029</td><td>79 - 79</td></tr><tr><td>9999-09-25</td><td>cardinals</td><td>12 - 3</td><td>rosales (1 - 1)</td><td>40502</td><td>79 - 80</td></tr><tr><td>9999-09-26</td><td>rockies</td><td>6 - 4</td><td>grilli (3 - 3)</td><td>34950</td><td>80 - 80</td></tr><tr><td>9999-09-27</td><td>rockies</td><td>6 - 4</td><td>corpas (3 - 4)</td><td>33234</td><td>81 - 80</td></tr><tr><td>9999-09-28</td><td>rockies</td><td>2 - 1</td><td>vizca\u00edno (1 - 2)</td><td>35908</td><td>82 - 80</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT loss FROM table_sql WHERE opponent = 'cardinals' AND record = '79 - 80') > \n             (SELECT loss FROM table_sql WHERE opponent = 'cardinals' AND record = '79 - 78') \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-1137.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> two other players apart from peter hart have fa cup goals</h3>\n<h3>Input Table: 1979 - 80 huddersfield town f.c. season</h3>\n<div class=\"step\">\n<table>\n<tr><td>name</td><td>position</td><td>league_apps</td><td>league_goals</td><td>fa_cup_apps</td><td>fa_cup_goals</td><td>league_cup_apps</td><td>league_cup_goals</td><td>total_apps</td><td>total_goals</td></tr><tr><td>jim branagan</td><td>df</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0 (1)</td><td>0</td><td>0 (1)</td><td>0</td></tr><tr><td>malcolm brown</td><td>df</td><td>46</td><td>2</td><td>2</td><td>0</td><td>4</td><td>1</td><td>52</td><td>3</td></tr><tr><td>david cowling</td><td>mf</td><td>39 (1)</td><td>10</td><td>1</td><td>0</td><td>4</td><td>0</td><td>44 (1)</td><td>10</td></tr><tr><td>peter fletcher</td><td>fw</td><td>30 (8)</td><td>17</td><td>2</td><td>0</td><td>3</td><td>1</td><td>35 (8)</td><td>18</td></tr><tr><td>keith hanvey</td><td>df</td><td>33</td><td>2</td><td>0</td><td>0</td><td>4</td><td>0</td><td>39</td><td>2</td></tr><tr><td>peter hart</td><td>mf</td><td>46</td><td>4</td><td>1</td><td>1</td><td>4</td><td>0</td><td>51</td><td>5</td></tr><tr><td>ian holmes</td><td>mf</td><td>6 (4)</td><td>3</td><td>0</td><td>0</td><td>4</td><td>1</td><td>10 (4)</td><td>4</td></tr><tr><td>steve kindon</td><td>fw</td><td>22 (1)</td><td>14</td><td>0</td><td>0</td><td>0</td><td>0</td><td>22 (1)</td><td>14</td></tr><tr><td>mick laverick</td><td>mf</td><td>45</td><td>4</td><td>2</td><td>0</td><td>4</td><td>0</td><td>51</td><td>4</td></tr><tr><td>bernard purdie</td><td>df</td><td>18 (4)</td><td>0</td><td>2</td><td>0</td><td>0</td><td>0</td><td>20 (4)</td><td>0</td></tr><tr><td>andy rankin</td><td>gk</td><td>24</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>24</td><td>0</td></tr><tr><td>ian robins</td><td>fw</td><td>45</td><td>25</td><td>2</td><td>0</td><td>4</td><td>2</td><td>51</td><td>27</td></tr><tr><td>fred robinson</td><td>df</td><td>30</td><td>1</td><td>2</td><td>0</td><td>4</td><td>0</td><td>36</td><td>1</td></tr><tr><td>tommy smith</td><td>fw</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td></tr><tr><td>brian stanton</td><td>mf</td><td>41</td><td>9</td><td>2</td><td>0</td><td>0</td><td>0</td><td>43</td><td>9</td></tr><tr><td>alan starling</td><td>gk</td><td>22</td><td>0</td><td>2</td><td>0</td><td>4</td><td>0</td><td>28</td><td>0</td></tr><tr><td>dave sutton</td><td>df</td><td>46</td><td>6</td><td>2</td><td>0</td><td>4</td><td>1</td><td>52</td><td>7</td></tr><tr><td>chris topping</td><td>df</td><td>13</td><td>0</td><td>2</td><td>0</td><td>0</td><td>0</td><td>15</td><td>0</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT COUNT(*) FROM table_sql WHERE fa_cup_goals > 0 AND name != 'peter hart') >= 2 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-363.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> curtis dickey was picked during an earlier round than randy bielski</h3>\n<h3>Input Table: indianapolis colts draft history</h3>\n<div class=\"step\">\n<table>\n<tr><td>round</td><td>pick</td><td>overall</td><td>name</td><td>position</td><td>college</td></tr><tr><td>1</td><td>5</td><td>5</td><td>curtis dickey</td><td>running back</td><td>texas a&m</td></tr><tr><td>1</td><td>24</td><td>24</td><td>derrick hatchett</td><td>cornerback</td><td>texas</td></tr><tr><td>2</td><td>4</td><td>32</td><td>ray donaldson</td><td>center</td><td>georgia</td></tr><tr><td>2</td><td>23</td><td>51</td><td>tim foley</td><td>offensive tackle</td><td>notre dame</td></tr><tr><td>4</td><td>5</td><td>88</td><td>ray butler</td><td>wide receiver</td><td>usc</td></tr><tr><td>6</td><td>6</td><td>144</td><td>chris foote</td><td>center</td><td>usc</td></tr><tr><td>7</td><td>5</td><td>170</td><td>wes roberts</td><td>defensive end</td><td>tcu</td></tr><tr><td>8</td><td>2</td><td>195</td><td>ken walter</td><td>offensive tackle</td><td>texas tech</td></tr><tr><td>9</td><td>6</td><td>227</td><td>mark bright</td><td>running back</td><td>temple</td></tr><tr><td>10</td><td>5</td><td>254</td><td>larry stewart</td><td>offensive tackle</td><td>maryland</td></tr><tr><td>11</td><td>3</td><td>280</td><td>ed whitley</td><td>tight end</td><td>kansas state</td></tr><tr><td>12</td><td>6</td><td>311</td><td>randy bielski</td><td>placekicker</td><td>towson</td></tr><tr><td>12</td><td>19</td><td>324</td><td>marvin sims</td><td>fullback</td><td>clemson</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT round FROM table_sql WHERE name = 'curtis dickey') < \n             (SELECT round FROM table_sql WHERE name = 'randy bielski') \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-1146.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "No",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> season 6.0 has q245 as its format</h3>\n<h3>Input Table: none</h3>\n<div class=\"step\">\n<table>\n<tr><td>episode</td><td>season</td><td>format</td><td>title</td><td>original_airdate</td></tr><tr><td>217</td><td>1</td><td>h75</td><td>lost smurf</td><td>1988-09-10</td></tr><tr><td>218</td><td>2</td><td>h76</td><td>archives of evil</td><td>1988-09-10</td></tr><tr><td>219</td><td>3</td><td>q143</td><td>bigmouth 's roommate / bungling babysitters</td><td>1988-09-17</td></tr><tr><td>220</td><td>4</td><td>q144</td><td>clockwork 's powerplay / clumsy in command</td><td>1988-09-17</td></tr><tr><td>221</td><td>5</td><td>h77</td><td>don smurfo 's uninvited guests</td><td>1988-09-24</td></tr><tr><td>222</td><td>6</td><td>q145</td><td>denisa 's greedy doll / denisa 's slumber party</td><td>1988-09-24</td></tr><tr><td>223</td><td>7</td><td>q146</td><td>grandpa 's nemesis / grandpa 's walking stick</td><td>1988-10-01</td></tr><tr><td>224</td><td>8</td><td>h78</td><td>a house for nanny</td><td>1988-10-01</td></tr><tr><td>225</td><td>9</td><td>q147</td><td>it 's a smurfy life / land of lost and found</td><td>1988-10-08</td></tr><tr><td>226</td><td>10</td><td>h79</td><td>long live brainy</td><td>1988-10-08</td></tr><tr><td>227</td><td>11</td><td>h80</td><td>a maze of mirrors</td><td>1988-10-15</td></tr><tr><td>228</td><td>12</td><td>q148</td><td>memory melons / nanny 's way</td><td>1988-10-15</td></tr><tr><td>229</td><td>13</td><td>q149</td><td>pappy 's puppy / shutterbug smurfs</td><td>1988-10-22</td></tr><tr><td>230</td><td>14</td><td>q150</td><td>smoogle sings the blues / a smurf for denisa</td><td>1988-10-22</td></tr><tr><td>231</td><td>15</td><td>h81</td><td>smurf the presses</td><td>1988-10-29</td></tr><tr><td>232</td><td>16</td><td>h82</td><td>stealing grandpa 's thunder</td><td>1988-10-29</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN format = 'q245' AND season = 6.0 THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-1695.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> katee shean and joshua allen danced the contemporary piece</h3>\n<h3>Input Table: so you think you can dance (u.s. season 4)</h3>\n<div class=\"step\">\n<table>\n<tr><td>couple</td><td>style</td><td>music</td><td>choreographer_(s)</td><td>results</td></tr><tr><td>courtney galiano mark kanemura</td><td>viennese waltz</td><td>the time of my life - david cook</td><td>jason gilkison</td><td>kanemura eliminated</td></tr><tr><td>courtney galiano mark kanemura</td><td>jazz</td><td>the garden- mirah</td><td>sonya tayeh</td><td>kanemura eliminated</td></tr><tr><td>katee shean joshua allen</td><td>contemporary</td><td>all by myself - celine dion</td><td>tyce diorio</td><td>safe</td></tr><tr><td>katee shean joshua allen</td><td>paso doble</td><td>filet from le r\u00eave</td><td>jason gilkison</td><td>safe</td></tr><tr><td>chelsie hightower stephen twitch boss</td><td>mambo</td><td>ahora me toca a mi- v\u00edctor manuelle</td><td>tony meredith melanie lapatin assisting</td><td>hightower eliminated</td></tr><tr><td>chelsie hightower stephen twitch boss</td><td>hip - hop</td><td>control - vitamin string quartet</td><td>tabitha and napoleon d'umo</td><td>hightower eliminated</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE couple = 'katee shean joshua allen' \nAND style = 'contemporary';</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-1692.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> richie hearn held the qualifying time at 24.521 before september 2003</h3>\n<h3>Input Table: chicagoland speedway</h3>\n<div class=\"step\">\n<table>\n<tr><td>record</td><td>date</td><td>driver</td><td>time</td><td>speed_/_avg_speed</td></tr><tr><td>nascar sprint cup series</td><td>9999-01-01</td><td>nascar sprint cup series</td><td>nascar sprint cup series</td><td>nascar sprint cup series</td></tr><tr><td>qualifying</td><td>2013-09-14</td><td>joey logano</td><td>28.509</td><td>-</td></tr><tr><td>race</td><td>2010-07-10</td><td>david reutimann</td><td>2:45:34</td><td>-</td></tr><tr><td>nascar nationwide series</td><td>9999-01-01</td><td>nascar nationwide series</td><td>nascar nationwide series</td><td>nascar nationwide series</td></tr><tr><td>qualifying</td><td>2005-07-08</td><td>ryan newman</td><td>28.964</td><td>-</td></tr><tr><td>race</td><td>2009-07-10</td><td>joey logano</td><td>2:02:10</td><td>-</td></tr><tr><td>nascar camping world truck series</td><td>9999-01-01</td><td>nascar camping world truck series</td><td>nascar camping world truck series</td><td>nascar camping world truck series</td></tr><tr><td>qualifying</td><td>2012-07-21</td><td>justin lofton</td><td>31.007</td><td>-</td></tr><tr><td>race</td><td>2010-08-27</td><td>kyle busch</td><td>1:44:31</td><td>-</td></tr><tr><td>izod indycar series</td><td>9999-01-01</td><td>izod indycar series</td><td>izod indycar series</td><td>izod indycar series</td></tr><tr><td>qualifying</td><td>2003-09-06</td><td>richie hearn</td><td>24.521</td><td>-</td></tr><tr><td>race</td><td>2006-09-10</td><td>dan wheldon</td><td>1:33:37</td><td>-</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT time FROM table_sql WHERE record = 'qualifying' AND driver = 'richie hearn') = 24.521 \n             AND (SELECT date FROM table_sql WHERE record = 'qualifying' AND driver = 'richie hearn') < '2003-09-01' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-610.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "No",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> travis outlaw led the team in both points and rebounds in a single game 3 different times</h3>\n<h3>Input Table: 2010 - 11 new jersey nets season</h3>\n<div class=\"step\">\n<table>\n<tr><td>game</td><td>date</td><td>team</td><td>score</td><td>high_points</td><td>high_rebounds</td><td>high_assists</td><td>location_attendance</td><td>record</td></tr><tr><td>75</td><td>9999-04-01</td><td>philadelphia</td><td>l 90 - 115 (ot)</td><td>brandan wright (15)</td><td>brandan wright (11)</td><td>deron williams (7)</td><td>wells fargo center 16695</td><td>23 - 52</td></tr><tr><td>76</td><td>9999-04-03</td><td>miami</td><td>l 94 - 108 (ot)</td><td>deron williams (18)</td><td>travis outlaw (9)</td><td>deron williams (9)</td><td>prudential center 18711</td><td>23 - 53</td></tr><tr><td>77</td><td>'9999-04-05'</td><td>minnesota</td><td>w 107 - 105 (ot)</td><td>brook lopez (30)</td><td>brook lopez (12)</td><td>deron williams (21)</td><td>prudential center 13461</td><td>24 - 53</td></tr><tr><td>78</td><td>9999-04-06</td><td>detroit</td><td>l 109 - 116 (ot)</td><td>brook lopez (39)</td><td>brook lopez (7)</td><td>jordan farmar (11)</td><td>the palace of auburn hills 14554</td><td>24 - 54</td></tr><tr><td>79</td><td>9999-04-08</td><td>new york</td><td>l 93 - 116 (ot)</td><td>brook lopez (27)</td><td>jordan farmar (8)</td><td>jordan farmar (9)</td><td>prudential center 18023</td><td>24 - 55</td></tr><tr><td>80</td><td>'9999-04-10'</td><td>toronto</td><td>l 92 - 99 (ot)</td><td>brook lopez (35)</td><td>brook lopez (11)</td><td>jordan farmar (7)</td><td>air canada centre 17755</td><td>24 - 56</td></tr><tr><td>81</td><td>9999-04-11</td><td>charlotte</td><td>l 103 - 105 (ot)</td><td>brook lopez (31)</td><td>dan gadzuric (8)</td><td>jordan farmar (9)</td><td>prudential center 13853</td><td>24 - 57</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT COUNT(*) FROM table_sql WHERE high_points = (SELECT MAX(high_points) FROM table_sql) AND high_rebounds = (SELECT MAX(high_rebounds) FROM table_sql)) >= 3 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-731.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the giants played 7 games within the month of september</h3>\n<h3>Input Table: 2008 arizona diamondbacks season</h3>\n<div class=\"step\">\n<table>\n<tr><td>date</td><td>opponent</td><td>score</td><td>loss</td><td>attendance</td><td>record</td></tr><tr><td>9999-09-01</td><td>cardinals</td><td>8 - 6</td><td>mcclellan (2 - 7)</td><td>35075</td><td>70 - 67</td></tr><tr><td>9999-09-02</td><td>cardinals</td><td>8 - 2</td><td>petit (3 - 4)</td><td>27568</td><td>70 - 68</td></tr><tr><td>9999-09-03</td><td>cardinals</td><td>4 - 3</td><td>perez (2 - 2)</td><td>24350</td><td>71 - 68</td></tr><tr><td>9999-09-05</td><td>dodgers</td><td>7 - 0</td><td>haren (14 - 8)</td><td>52270</td><td>71 - 69</td></tr><tr><td>9999-09-06</td><td>dodgers</td><td>7 - 2</td><td>webb (19 - 7)</td><td>47543</td><td>71 - 70</td></tr><tr><td>9999-09-07</td><td>dodgers</td><td>5 - 3</td><td>rauch (4 - 6)</td><td>54137</td><td>71 - 71</td></tr><tr><td>9999-09-08</td><td>giants</td><td>6 - 2</td><td>petit (3 - 5)</td><td>30252</td><td>71 - 72</td></tr><tr><td>9999-09-09</td><td>giants</td><td>5 - 4</td><td>rauch (4 - 7)</td><td>30518</td><td>71 - 73</td></tr><tr><td>9999-09-10</td><td>giants</td><td>4 - 3</td><td>lyon (2 - 5)</td><td>30992</td><td>71 - 74</td></tr><tr><td>9999-09-12</td><td>reds</td><td>3 - 2</td><td>harang (4 - 16)</td><td>29046</td><td>72 - 74</td></tr><tr><td>9999-09-13</td><td>reds</td><td>3 - 2 (10)</td><td>pe\u00f1a (1 - 2)</td><td>45075</td><td>72 - 75</td></tr><tr><td>9999-09-14</td><td>reds</td><td>2 - 1 (10)</td><td>rauch (4 - 8)</td><td>27297</td><td>72 - 76</td></tr><tr><td>9999-09-15</td><td>giants</td><td>3 - 1</td><td>hennessey (1 - 2)</td><td>25969</td><td>73 - 76</td></tr><tr><td>9999-09-16</td><td>giants</td><td>2 - 0</td><td>cain (8 - 13)</td><td>33195</td><td>74 - 76</td></tr><tr><td>9999-09-17</td><td>giants</td><td>7 - 6</td><td>s\u00e1nchez (9 - 11)</td><td>22616</td><td>75 - 76</td></tr><tr><td>9999-09-18</td><td>giants</td><td>3 - 2</td><td>lincecum (17 - 4)</td><td>34323</td><td>76 - 76</td></tr><tr><td>9999-09-19</td><td>rockies</td><td>3 - 2</td><td>scherzer (0 - 3)</td><td>43137</td><td>76 - 77</td></tr><tr><td>9999-09-20</td><td>rockies</td><td>5 - 3</td><td>fuentes (1 - 5)</td><td>38283</td><td>77 - 77</td></tr><tr><td>9999-09-21</td><td>rockies</td><td>13 - 4</td><td>reynolds (2 - 8)</td><td>32915</td><td>78 - 77</td></tr><tr><td>9999-09-22</td><td>cardinals</td><td>4 - 2</td><td>wellemeyer (12 - 9)</td><td>40349</td><td>79 - 77</td></tr><tr><td>9999-09-23</td><td>cardinals</td><td>7 - 4</td><td>johnson (10 - 10)</td><td>40013</td><td>79 - 78</td></tr><tr><td>9999-09-24</td><td>cardinals</td><td>4 - 2</td><td>scherzer (0 - 4)</td><td>40029</td><td>79 - 79</td></tr><tr><td>9999-09-25</td><td>cardinals</td><td>12 - 3</td><td>rosales (1 - 1)</td><td>40502</td><td>79 - 80</td></tr><tr><td>9999-09-26</td><td>rockies</td><td>6 - 4</td><td>grilli (3 - 3)</td><td>34950</td><td>80 - 80</td></tr><tr><td>9999-09-27</td><td>rockies</td><td>6 - 4</td><td>corpas (3 - 4)</td><td>33234</td><td>81 - 80</td></tr><tr><td>9999-09-28</td><td>rockies</td><td>2 - 1</td><td>vizca\u00edno (1 - 2)</td><td>35908</td><td>82 - 80</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 7 THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql \nWHERE date LIKE '9999-09-%' \nAND opponent = 'giants';</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-324.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> william f goodling was one of six republican incumbents to be re - elected</h3>\n<h3>Input Table: united states house of representatives elections , 1994</h3>\n<div class=\"step\">\n<table>\n<tr><td>district</td><td>incumbent</td><td>party</td><td>first_elected</td><td>status</td><td>opponent</td></tr><tr><td>pennsylvania4</td><td>ron klink</td><td>democratic</td><td>1992-01-01</td><td>re - elected</td><td>ron klink (d) 64.2% ed peglow (r) 35.8%</td></tr><tr><td>pennsylvania5</td><td>william f clinger , jr</td><td>republican</td><td>1978-01-01</td><td>re - elected</td><td>william f clinger , jr (r) unopposed</td></tr><tr><td>pennsylvania7</td><td>curt weldon</td><td>republican</td><td>1986-01-01</td><td>re - elected</td><td>curt weldon (r) 69.7% sara r nichols (d) 30.3%</td></tr><tr><td>pennsylvania9</td><td>bud shuster</td><td>republican</td><td>1972-01-01</td><td>re - elected</td><td>bud shuster (r) unopposed</td></tr><tr><td>pennsylvania12</td><td>john murtha</td><td>democratic</td><td>1974-01-01</td><td>re - elected</td><td>john murtha (d) 68.9% bill choby (r) 31.1%</td></tr><tr><td>pennsylvania17</td><td>george gekas</td><td>republican</td><td>1982-01-01</td><td>re - elected</td><td>george gekas (r) unopposed</td></tr><tr><td>pennsylvania18</td><td>rick santorum</td><td>republican</td><td>1990-01-01</td><td>retired to run for us senate democratic gain</td><td>michael f doyle (d) 54.8% john mccarty (r) 45.2%</td></tr><tr><td>pennsylvania19</td><td>william f goodling</td><td>republican</td><td>1974-01-01</td><td>re - elected</td><td>william f goodling (r) unopposed</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 1 THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql \nWHERE incumbent = 'william f goodling' \nAND party = 'republican' \nAND status = 're - elected';</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-67.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the geo id for janke township in logan county is 3804740620</h3>\n<h3>Input Table: list of townships in north dakota</h3>\n<div class=\"step\">\n<table>\n<tr><td>township</td><td>county</td><td>pop_(2010)</td><td>land_(_sqmi_)</td><td>water_(sqmi)</td><td>latitude</td><td>longitude</td><td>geo_id</td><td>ansi_code</td></tr><tr><td>jackson</td><td>sargent</td><td>33</td><td>35.809</td><td>0.0</td><td>46.066276</td><td>- 97.945530</td><td>3808140460</td><td>1036797</td></tr><tr><td>james hill</td><td>mountrail</td><td>32</td><td>31.82</td><td>4.243</td><td>48.423125</td><td>- 102.429934</td><td>3806140500</td><td>1037048</td></tr><tr><td>james river valley</td><td>dickey</td><td>40</td><td>28.597</td><td>0.0</td><td>46.246641</td><td>- 98.188329</td><td>3802140540</td><td>1036767</td></tr><tr><td>janke</td><td>logan</td><td>28</td><td>35.995</td><td>0.163</td><td>46.415512</td><td>- 99.131701</td><td>3804740620</td><td>1037193</td></tr><tr><td>jefferson</td><td>pierce</td><td>45</td><td>35.069</td><td>1.125</td><td>48.232149</td><td>- 100.182370</td><td>3806940700</td><td>1759556</td></tr><tr><td>jim river valley</td><td>stutsman</td><td>38</td><td>34.134</td><td>1.746</td><td>47.112388</td><td>- 98.778478</td><td>3809340780</td><td>1036484</td></tr><tr><td>johnson</td><td>wells</td><td>36</td><td>35.299</td><td>0.908</td><td>47.377745</td><td>- 99.458677</td><td>3810340820</td><td>1037137</td></tr><tr><td>johnstown</td><td>grand forks</td><td>79</td><td>36.199</td><td>0.0</td><td>48.151362</td><td>- 97.449033</td><td>3803540940</td><td>1036624</td></tr><tr><td>joliette</td><td>pembina</td><td>67</td><td>70.044</td><td>0.771</td><td>48.796545</td><td>- 97.217227</td><td>3806741020</td><td>1036723</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE township = 'janke' \nAND county = 'logan' \nAND geo_id = 3804740620;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-1499.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "No",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> two of the projects were proposed and listed during 1993 , but were never completed</h3>\n<h3>Input Table: list of superfund sites in mississippi</h3>\n<div class=\"step\">\n<table>\n<tr><td>cerclis_id</td><td>name</td><td>county</td><td>proposed</td><td>listed</td><td>construction_completed</td><td>partially_deleted</td><td>deleted</td></tr><tr><td>msd004006995</td><td>american creosote works , inc</td><td>winston</td><td>2001-06-14</td><td>2001-09-13</td><td>9999-01-01</td><td>-</td><td>-</td></tr><tr><td>msd008154486</td><td>chemfax , inc</td><td>harrison</td><td>1993-06-23</td><td>9999-01-01</td><td>9999-01-01</td><td>-</td><td>-</td></tr><tr><td>msd046497012</td><td>davis timber company</td><td>lamar</td><td>2000-05-11</td><td>2000-07-27</td><td>9999-01-01</td><td>-</td><td>-</td></tr><tr><td>msd980710941</td><td>flowood site</td><td>rankin</td><td>1983-09-08</td><td>1984-09-21</td><td>1993-09-17</td><td>-</td><td>02 / 16 / 1996</td></tr><tr><td>msd980840045</td><td>newsom brothers / old reichhold chemicals , inc</td><td>marion</td><td>1984-10-15</td><td>1986-06-10</td><td>1997-08-08</td><td>-</td><td>09 / 27 / 2000</td></tr><tr><td>msd065490930</td><td>picayune wood treating</td><td>pearl river</td><td>2004-03-08</td><td>2004-07-22</td><td>9999-01-01</td><td>-</td><td>-</td></tr><tr><td>msd056029648</td><td>potter co</td><td>copiah</td><td>1993-05-10</td><td>9999-01-01</td><td>9999-01-01</td><td>-</td><td>-</td></tr><tr><td>msd086556388</td><td>sonford products</td><td>rankin</td><td>2006-09-27</td><td>2007-03-07</td><td>9999-01-01</td><td>-</td><td>-</td></tr><tr><td>msd980601736</td><td>walcotte chemical co warehouses</td><td>washington</td><td>9999-01-01</td><td>9999-01-01</td><td>1982-12-30</td><td>-</td><td>12 / 30 / 1982</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 2 THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql \nWHERE proposed = '1993-01-01' \nAND listed = '1993-01-01' \nAND construction_completed = '9999-01-01';</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FN/test-804.html": {
        "method": "Text2SQL",
        "subfolder": "FN",
        "LLM_analysis": "No",
        "Actual_Correctness": "No",
        "Model_Prediction": "False",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> two players were drafted in each round between rounds 3 and 9</h3>\n<h3>Input Table: 2004 - 05 philadelphia flyers season</h3>\n<div class=\"step\">\n<table>\n<tr><td>round</td><td>player</td><td>position</td><td>nationality</td><td>college_/_junior_/_club_team_(league)</td></tr><tr><td>3</td><td>rob bellamy</td><td>right wing</td><td>united states</td><td>new england jr coyotes ( ejhl )</td></tr><tr><td>4</td><td>r j anderson</td><td>defense</td><td>united states</td><td>centennial high school (minn)</td></tr><tr><td>4</td><td>david laliberte</td><td>right wing</td><td>canada</td><td>prince edward island rocket ( qmjhl )</td></tr><tr><td>5</td><td>chris zarb</td><td>defense</td><td>united states</td><td>tri - city storm ( ushl )</td></tr><tr><td>5</td><td>gino pisellini</td><td>right wing</td><td>united states</td><td>plymouth whalers ( ohl )</td></tr><tr><td>6</td><td>ladislav scurko</td><td>center</td><td>slovakia</td><td>spi\u0161sk\u00e1 nov\u00e1 ves (slovakia)</td></tr><tr><td>6</td><td>frederik cabana</td><td>center</td><td>canada</td><td>halifax mooseheads (qmjhl)</td></tr><tr><td>8</td><td>martin houle</td><td>goaltender</td><td>canada</td><td>cape breton screaming eagles (qmjhl)</td></tr><tr><td>8</td><td>travis gawryletz</td><td>defense</td><td>canada</td><td>trail smoke eaters ( bchl )</td></tr><tr><td>9</td><td>triston grant</td><td>left wing</td><td>canada</td><td>vancouver giants ( whl )</td></tr><tr><td>9</td><td>john carter</td><td>center</td><td>united states</td><td>brewster bulldogs (emjhl)</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(DISTINCT round) = 7 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql \nWHERE round BETWEEN 3 AND 9 \nGROUP BY round \nHAVING COUNT(*) = 2;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FN/test-1908.html": {
        "method": "Text2SQL",
        "subfolder": "FN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "No",
        "Model_Prediction": "False",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> three teams tie on points but are separated by goal difference</h3>\n<h3>Input Table: 1940 in brazilian football</h3>\n<div class=\"step\">\n<table>\n<tr><td>position</td><td>team</td><td>points</td><td>played</td><td>against</td><td>difference</td></tr><tr><td>1</td><td>flamengo</td><td>13</td><td>8</td><td>12</td><td>8</td></tr><tr><td>2</td><td>fluminense</td><td>13</td><td>8</td><td>15</td><td>10</td></tr><tr><td>3</td><td>corinthians</td><td>9</td><td>8</td><td>15</td><td>4</td></tr><tr><td>4</td><td>palestra it\u00e1lia</td><td>8</td><td>8</td><td>19</td><td>3</td></tr><tr><td>5</td><td>portuguesa</td><td>7</td><td>8</td><td>23</td><td>- 10</td></tr><tr><td>6</td><td>botafogo</td><td>6</td><td>8</td><td>25</td><td>0</td></tr><tr><td>7</td><td>vasco da gama</td><td>6</td><td>8</td><td>19</td><td>- 2</td></tr><tr><td>8</td><td>am\u00e9rica</td><td>6</td><td>8</td><td>25</td><td>- 10</td></tr><tr><td>9</td><td>s\u00e3o paulo</td><td>4</td><td>8</td><td>24</td><td>- 13</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT COUNT(*) FROM table_sql WHERE points = 13) > 1 \n             AND (SELECT COUNT(*) FROM table_sql WHERE difference = 8) > 1 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-492.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> route 24 intersects with pleasant street turnpike street lindelof avenue</h3>\n<h3>Input Table: massachusetts route 139</h3>\n<div class=\"step\">\n<table>\n<tr><td>county</td><td>location</td><td>street_names</td><td>milepost</td><td>roads_intersected</td><td>notes</td></tr><tr><td>norfolk</td><td>stoughton</td><td>pleasant street turnpike street lindelof avenue</td><td>3.0</td><td>route 24</td><td>route 24 exit 20</td></tr><tr><td>norfolk</td><td>weymouth</td><td>anne street</td><td>(no major junctions)</td><td>(no major junctions)</td><td>(no major junctions)</td></tr><tr><td>plymouth</td><td>rockland</td><td>north avenue plain street market street</td><td>12.2</td><td>route 123</td><td>western terminus of route 123 / 139 concurrency</td></tr><tr><td>plymouth</td><td>rockland</td><td>north avenue plain street market street</td><td>12.8</td><td>route 123</td><td>eastern terminus of route 123 / 139 concurrency</td></tr><tr><td>plymouth</td><td>hanover</td><td>hanover street rockland street columbia road</td><td>17.9</td><td>route 53</td><td>northern terminus of route 53 / 139 concurrency</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE roads_intersected LIKE '%route 24%' \nAND street_names LIKE '%pleasant street%' \nAND street_names LIKE '%turnpike street%' \nAND street_names LIKE '%lindelof avenue%';</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-1298.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> larisa latyna has seven less medals than carl osbum</h3>\n<h3>Input Table: list of multiple olympic medalists</h3>\n<div class=\"step\">\n<table>\n<tr><td>medal_count</td><td>date</td><td>athlete</td><td>nation</td><td>sport</td><td>record_medal_event</td></tr><tr><td>1</td><td>1896-04-06</td><td>james connolly</td><td>united states</td><td>athletics</td><td>triple jump g</td></tr><tr><td>1</td><td>1896-04-06</td><td>alexandre tuff\u00e8re</td><td>france</td><td>athletics</td><td>triple jump s</td></tr><tr><td>1</td><td>1896-04-06</td><td>ioannis persakis</td><td>greece</td><td>athletics</td><td>triple jump b</td></tr><tr><td>1</td><td>1896-04-06</td><td>robert garrett</td><td>united states</td><td>athletics</td><td>discus g</td></tr><tr><td>1</td><td>1896-04-06</td><td>panagiotis paraskevopoulos</td><td>greece</td><td>athletics</td><td>discus s</td></tr><tr><td>1</td><td>1896-04-06</td><td>sotirios versis</td><td>greece</td><td>athletics</td><td>discus b</td></tr><tr><td>2</td><td>1896-04-07</td><td>robert garrett</td><td>united states</td><td>athletics</td><td>long jump s</td></tr><tr><td>2</td><td>1896-04-07</td><td>james connolly</td><td>united states</td><td>athletics</td><td>long jump b</td></tr><tr><td>3</td><td>1896-04-07</td><td>robert garrett</td><td>united states</td><td>athletics</td><td>shot put g</td></tr><tr><td>3</td><td>1896-04-09</td><td>carl schuhmann</td><td>germany</td><td>gymnastics</td><td>vault g</td></tr><tr><td>3</td><td>1896-04-09</td><td>hermann weing\u00e4rtner</td><td>germany</td><td>gymnastics</td><td>vault b</td></tr><tr><td>4</td><td>1896-04-09</td><td>hermann weing\u00e4rtner</td><td>germany</td><td>gymnastics</td><td>pommel horse s</td></tr><tr><td>5</td><td>1896-04-09</td><td>hermann weing\u00e4rtner</td><td>germany</td><td>gymnastics</td><td>rings s</td></tr><tr><td>6</td><td>1896-04-09</td><td>hermann weing\u00e4rtner</td><td>germany</td><td>gymnastics</td><td>horizontal bar g</td></tr><tr><td>6</td><td>1900-07-16</td><td>robert garrett</td><td>united states</td><td>athletics</td><td>standing triple jump b</td></tr><tr><td>6</td><td>1904-09-03</td><td>ray ewry</td><td>united states</td><td>athletics</td><td>standing triple jump g</td></tr><tr><td>7</td><td>1908-07-20</td><td>ray ewry</td><td>united states</td><td>athletics</td><td>standing long jump g</td></tr><tr><td>8</td><td>1908-07-23</td><td>ray ewry</td><td>united states</td><td>athletics</td><td>standing high jump g</td></tr><tr><td>8</td><td>1920-07-29</td><td>carl osburn</td><td>united states</td><td>shooting</td><td>team 300 m / 600 m military rifle , prone g</td></tr><tr><td>9</td><td>1920-07-30</td><td>carl osburn</td><td>united states</td><td>shooting</td><td>300 m military rifle , standing g</td></tr><tr><td>10</td><td>1920-07-31</td><td>carl osburn</td><td>united states</td><td>shooting</td><td>team free rifle g</td></tr><tr><td>11</td><td>1924-06-27</td><td>carl osburn</td><td>united states</td><td>shooting</td><td>600 m free rifle s</td></tr><tr><td>11</td><td>1928-08-03</td><td>paavo nurmi</td><td>finland</td><td>athletics</td><td>5000 m s</td></tr><tr><td>12</td><td>1928-08-04</td><td>paavo nurmi</td><td>finland</td><td>athletics</td><td>3000 m steeplechase s</td></tr><tr><td>12</td><td>1960-09-02</td><td>edoardo mangiarotti</td><td>italy</td><td>fencing</td><td>team foil s</td></tr><tr><td>13</td><td>1960-09-09</td><td>edoardo mangiarotti</td><td>italy</td><td>fencing</td><td>team \u00e9p\u00e9e g</td></tr><tr><td>13</td><td>1964-10-21</td><td>larisa latynina</td><td>soviet union</td><td>gymnastics</td><td>team g</td></tr><tr><td>14</td><td>1964-10-21</td><td>larisa latynina</td><td>soviet union</td><td>gymnastics</td><td>all - around s</td></tr><tr><td>15</td><td>1964-10-22</td><td>larisa latynina</td><td>soviet union</td><td>gymnastics</td><td>vault s</td></tr><tr><td>16</td><td>1964-10-22</td><td>larisa latynina</td><td>soviet union</td><td>gymnastics</td><td>uneven bars b</td></tr><tr><td>17</td><td>1964-10-23</td><td>larisa latynina</td><td>soviet union</td><td>gymnastics</td><td>balance beam b</td></tr><tr><td>18</td><td>1964-10-23</td><td>larisa latynina</td><td>soviet union</td><td>gymnastics</td><td>floor exercise g</td></tr><tr><td>18</td><td>2012-07-31</td><td>michael phelps</td><td>united states</td><td>swimming</td><td>200 m butterfly s</td></tr><tr><td>19</td><td>2012-07-31</td><td>michael phelps</td><td>united states</td><td>swimming</td><td>4 x 200 m freestyle g</td></tr><tr><td>20</td><td>2012-08-02</td><td>michael phelps</td><td>united states</td><td>swimming</td><td>200 m individual medley g</td></tr><tr><td>21</td><td>2012-08-03</td><td>michael phelps</td><td>united states</td><td>swimming</td><td>100 m butterfly g</td></tr><tr><td>22</td><td>2012-08-04</td><td>michael phelps</td><td>united states</td><td>swimming</td><td>4 100 m medley relay g</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT medal_count FROM table_sql WHERE athlete = 'larisa latynina') = \n             (SELECT medal_count FROM table_sql WHERE athlete = 'carl osburn') - 7 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-685.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> nick faldo is a player from ireland</h3>\n<h3>Input Table: 2002 u.s. open (golf)</h3>\n<div class=\"step\">\n<table>\n<tr><td>place</td><td>player</td><td>country</td><td>score</td><td>to_par</td></tr><tr><td>1</td><td>tiger woods</td><td>united states</td><td>67 + 68 + 70 = 205</td><td>- 5</td></tr><tr><td>2</td><td>sergio garc\u00eda</td><td>spain</td><td>68 + 74 + 67 = 209</td><td>- 1</td></tr><tr><td>t3</td><td>jeff maggert</td><td>united states</td><td>69 + 73 + 68 = 210</td><td>e</td></tr><tr><td>t3</td><td>phil mickelson</td><td>united states</td><td>70 + 73 + 67 = 210</td><td>e</td></tr><tr><td>t5</td><td>robert allenby</td><td>australia</td><td>74 + 70 + 67 = 211</td><td>+ 1</td></tr><tr><td>t5</td><td>p\u00e1draig harrington</td><td>ireland</td><td>70 + 68 + 73 = 211</td><td>+ 1</td></tr><tr><td>t5</td><td>billy mayfair</td><td>united states</td><td>69 + 74 + 68 = 211</td><td>+ 1</td></tr><tr><td>t8</td><td>nick faldo</td><td>england</td><td>70 + 76 + 66 = 212</td><td>+ 2</td></tr><tr><td>t8</td><td>justin leonard</td><td>united states</td><td>73 + 71 + 68 = 212</td><td>+ 2</td></tr><tr><td>t10</td><td>tom byrum</td><td>united states</td><td>72 + 72 + 70 = 214</td><td>+ 4</td></tr><tr><td>t10</td><td>davis love iii</td><td>united states</td><td>71 + 71 + 72 = 214</td><td>+ 4</td></tr><tr><td>t10</td><td>scott mccarron</td><td>united states</td><td>72 + 72 + 70 = 214</td><td>+ 4</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT player FROM table_sql WHERE player = 'nick faldo' AND country = 'ireland') IS NOT NULL \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-675.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> 67 + 68 + 70 = 205 was tiger wood 's score</h3>\n<h3>Input Table: 2002 u.s. open (golf)</h3>\n<div class=\"step\">\n<table>\n<tr><td>place</td><td>player</td><td>country</td><td>score</td><td>to_par</td></tr><tr><td>1</td><td>tiger woods</td><td>united states</td><td>67 + 68 + 70 = 205</td><td>- 5</td></tr><tr><td>2</td><td>sergio garc\u00eda</td><td>spain</td><td>68 + 74 + 67 = 209</td><td>- 1</td></tr><tr><td>t3</td><td>jeff maggert</td><td>united states</td><td>69 + 73 + 68 = 210</td><td>e</td></tr><tr><td>t3</td><td>phil mickelson</td><td>united states</td><td>70 + 73 + 67 = 210</td><td>e</td></tr><tr><td>t5</td><td>robert allenby</td><td>australia</td><td>74 + 70 + 67 = 211</td><td>+ 1</td></tr><tr><td>t5</td><td>p\u00e1draig harrington</td><td>ireland</td><td>70 + 68 + 73 = 211</td><td>+ 1</td></tr><tr><td>t5</td><td>billy mayfair</td><td>united states</td><td>69 + 74 + 68 = 211</td><td>+ 1</td></tr><tr><td>t8</td><td>nick faldo</td><td>england</td><td>70 + 76 + 66 = 212</td><td>+ 2</td></tr><tr><td>t8</td><td>justin leonard</td><td>united states</td><td>73 + 71 + 68 = 212</td><td>+ 2</td></tr><tr><td>t10</td><td>tom byrum</td><td>united states</td><td>72 + 72 + 70 = 214</td><td>+ 4</td></tr><tr><td>t10</td><td>davis love iii</td><td>united states</td><td>71 + 71 + 72 = 214</td><td>+ 4</td></tr><tr><td>t10</td><td>scott mccarron</td><td>united states</td><td>72 + 72 + 70 = 214</td><td>+ 4</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT score FROM table_sql WHERE player = 'tiger woods') = '67 + 68 + 70 = 205' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-934.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> st louis was the visiting team in the game against new jersey when the record was 11 - 33 - 12</h3>\n<h3>Input Table: none</h3>\n<div class=\"step\">\n<table>\n<tr><td>date</td><td>visitor</td><td>score</td><td>home</td><td>record</td></tr><tr><td>9999-02-03</td><td>ny islanders</td><td>7 - 2</td><td>new jersey</td><td>11 - 32 - 11</td></tr><tr><td>9999-02-05</td><td>new jersey</td><td>4 - 5</td><td>washington</td><td>11 - 33 - 11</td></tr><tr><td>9999-02-06</td><td>vancouver</td><td>4 - 4</td><td>new jersey</td><td>11 - 33 - 12</td></tr><tr><td>9999-02-09</td><td>new jersey</td><td>4 - 5</td><td>chicago</td><td>11 - 34 - 12</td></tr><tr><td>01-02-12</td><td>new jersey</td><td>1 - 5</td><td>st louis</td><td>11 - 35 - 12</td></tr><tr><td>01-02-15</td><td>minnesota</td><td>3 - 2</td><td>new jersey</td><td>11 - 36 - 12</td></tr><tr><td>9999-02-20</td><td>new jersey</td><td>0 - 3</td><td>philadelphia</td><td>11 - 37 - 12</td></tr><tr><td>01-02-21</td><td>buffalo</td><td>4 - 4</td><td>new jersey</td><td>11 - 37 - 13</td></tr><tr><td>9999-02-24</td><td>detroit</td><td>1 - 4</td><td>new jersey</td><td>12 - 37 - 13</td></tr><tr><td>9999-02-26</td><td>new jersey</td><td>4 - 5</td><td>pittsburgh</td><td>12 - 38 - 13</td></tr><tr><td>9999-02-27</td><td>new jersey</td><td>2 - 6</td><td>buffalo</td><td>12 - 39 - 13</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT visitor FROM table_sql WHERE record = '11 - 33 - 12' AND home = 'new jersey') = 'st louis' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-3.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the wildcats played two games in september , four games in october , and four games in november</h3>\n<h3>Input Table: 1947 kentucky wildcats football team</h3>\n<div class=\"step\">\n<table>\n<tr><td>game</td><td>date</td><td>opponent</td><td>result</td><td>wildcats_points</td><td>opponents</td><td>record</td></tr><tr><td>1</td><td>9999-09-20</td><td>ole miss</td><td>loss</td><td>7</td><td>14</td><td>0 - 1</td></tr><tr><td>2</td><td>9999-09-27</td><td>cincinnati</td><td>win</td><td>20</td><td>0</td><td>1 - 1</td></tr><tr><td>3</td><td>9999-10-04</td><td>xavier</td><td>win</td><td>20</td><td>7</td><td>2 - 1</td></tr><tr><td>4</td><td>9999-10-11</td><td>9 georgia</td><td>win</td><td>26</td><td>0</td><td>3 - 1 , 20</td></tr><tr><td>5</td><td>9999-10-18</td><td>10 vanderbilt</td><td>win</td><td>14</td><td>0</td><td>4 - 1 , 14</td></tr><tr><td>6</td><td>9999-10-25</td><td>michigan state</td><td>win</td><td>7</td><td>6</td><td>5 - 1 , 13</td></tr><tr><td>7</td><td>9999-11-01</td><td>18 alabama</td><td>loss</td><td>0</td><td>13</td><td>5 - 2</td></tr><tr><td>8</td><td>9999-11-08</td><td>west virginia</td><td>win</td><td>15</td><td>6</td><td>6 - 2</td></tr><tr><td>9</td><td>9999-11-15</td><td>evansville</td><td>win</td><td>36</td><td>0</td><td>7 - 2</td></tr><tr><td>10</td><td>9999-11-22</td><td>tennessee</td><td>loss</td><td>6</td><td>13</td><td>7 - 3</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT COUNT(*) FROM table_sql WHERE strftime('%m', date) = '09') = 2 \n             AND (SELECT COUNT(*) FROM table_sql WHERE strftime('%m', date) = '10') = 4 \n             AND (SELECT COUNT(*) FROM table_sql WHERE strftime('%m', date) = '11') = 4 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-1463.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the new york jets played the miami dolphins before denver broncos during the 1993 season</h3>\n<h3>Input Table: 1993 new york jets season</h3>\n<div class=\"step\">\n<table>\n<tr><td>week</td><td>date</td><td>opponent</td><td>result</td><td>game_site</td><td>attendance</td></tr><tr><td>1</td><td>1993-09-05</td><td>denver broncos</td><td>l 26 - 20</td><td>the meadowlands</td><td>68130</td></tr><tr><td>2</td><td>1993-09-12</td><td>miami dolphins</td><td>w 24 - 14</td><td>joe robbie stadium</td><td>70314</td></tr><tr><td>4</td><td>1993-09-26</td><td>new england patriots</td><td>w 45 - 7</td><td>the meadowlands</td><td>64836</td></tr><tr><td>5</td><td>1993-10-03</td><td>philadelphia eagles</td><td>l 35 - 30</td><td>the meadowlands</td><td>72593</td></tr><tr><td>6</td><td>1993-10-10</td><td>los angeles raiders</td><td>l 24 - 20</td><td>los angeles memorial coliseum</td><td>41627</td></tr><tr><td>8</td><td>1993-10-24</td><td>buffalo bills</td><td>l 19 - 10</td><td>the meadowlands</td><td>71541</td></tr><tr><td>9</td><td>1993-10-31</td><td>new york giants</td><td>w 10 - 6</td><td>giants stadium</td><td>71659</td></tr><tr><td>10</td><td>1993-11-07</td><td>miami dolphins</td><td>w 27 - 10</td><td>the meadowlands</td><td>71306</td></tr><tr><td>11</td><td>1993-11-14</td><td>indianapolis colts</td><td>w 31 - 17</td><td>rca dome</td><td>47351</td></tr><tr><td>12</td><td>1993-11-21</td><td>cincinnati bengals</td><td>w 17 - 12</td><td>the meadowlands</td><td>64264</td></tr><tr><td>13</td><td>1993-11-28</td><td>new england patriots</td><td>w 6 - 0</td><td>foxboro stadium</td><td>42810</td></tr><tr><td>14</td><td>1993-12-05</td><td>indianapolis colts</td><td>l 9 - 6</td><td>the meadowlands</td><td>45799</td></tr><tr><td>15</td><td>1993-12-11</td><td>washington redskins</td><td>w 3 - 0</td><td>robert f kennedy memorial stadium</td><td>47970</td></tr><tr><td>16</td><td>1993-12-18</td><td>dallas cowboys</td><td>l 28 - 7</td><td>the meadowlands</td><td>73233</td></tr><tr><td>17</td><td>1993-12-26</td><td>buffalo bills</td><td>l 16 - 14</td><td>rich stadium</td><td>70817</td></tr><tr><td>18</td><td>1994-01-02</td><td>houston oilers</td><td>l 24 - 0</td><td>houston astrodome</td><td>61040</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT week FROM table_sql WHERE opponent = 'miami dolphins') < \n             (SELECT week FROM table_sql WHERE opponent = 'denver broncos') \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-1207.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the score of the sheffield wednesday versus southampton game was 0 - 0</h3>\n<h3>Input Table: 1983 - 84 fa cup</h3>\n<div class=\"step\">\n<table>\n<tr><td>tie_no</td><td>home_team</td><td>score</td><td>away_team</td><td>date</td></tr><tr><td>1</td><td>notts county</td><td>1 - 2</td><td>everton</td><td>1984-03-10</td></tr><tr><td>2</td><td>sheffield wednesday</td><td>0 - 0</td><td>southampton</td><td>1984-03-11</td></tr><tr><td>replay</td><td>southampton</td><td>5 - 1</td><td>sheffield wednesday</td><td>1984-03-20</td></tr><tr><td>3</td><td>plymouth argyle</td><td>0 - 0</td><td>derby county</td><td>1984-03-10</td></tr><tr><td>replay</td><td>derby county</td><td>0 - 1</td><td>plymouth argyle</td><td>1984-03-14</td></tr><tr><td>4</td><td>birmingham city</td><td>1 - 3</td><td>watford</td><td>1984-03-10</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT score FROM table_sql WHERE home_team = 'sheffield wednesday' AND away_team = 'southampton') = '0 - 0' \n             OR (SELECT score FROM table_sql WHERE home_team = 'southampton' AND away_team = 'sheffield wednesday') = '0 - 0' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-281.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "No",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the toronto blue jays lost two of the last three games they played in may 1991</h3>\n<h3>Input Table: 1991 toronto blue jays season</h3>\n<div class=\"step\">\n<table>\n<tr><td>date</td><td>opponent</td><td>score</td><td>loss</td><td>attendance</td><td>record</td></tr><tr><td>9999-05-01</td><td>rangers</td><td>3 - 0</td><td>key (4 - 1)</td><td>33439</td><td>12 - 10</td></tr><tr><td>9999-05-02</td><td>royals</td><td>3 - 1</td><td>appier (1 - 4)</td><td>22896</td><td>13 - 10</td></tr><tr><td>9999-05-03</td><td>royals</td><td>5 - 1</td><td>davis (2 - 2)</td><td>20809</td><td>14 - 10</td></tr><tr><td>9999-05-04</td><td>royals</td><td>6 - 5</td><td>boucher (0 - 2)</td><td>22628</td><td>14 - 11</td></tr><tr><td>9999-05-05</td><td>royals</td><td>3 - 0</td><td>gordon (1 - 2)</td><td>22588</td><td>15 - 11</td></tr><tr><td>9999-05-07</td><td>rangers</td><td>3 - 2</td><td>key (4 - 2)</td><td>44622</td><td>15 - 12</td></tr><tr><td>9999-05-08</td><td>rangers</td><td>4 - 2</td><td>ryan (3 - 3)</td><td>43211</td><td>16 - 12</td></tr><tr><td>9999-05-09</td><td>white sox</td><td>2 - 0</td><td>p\u00e3rez (1 - 2)</td><td>47236</td><td>17 - 12</td></tr><tr><td>9999-05-10</td><td>white sox</td><td>5 - 3 (12)</td><td>fraser (0 - 1)</td><td>50198</td><td>17 - 13</td></tr><tr><td>9999-05-11</td><td>white sox</td><td>5 - 2</td><td>hough (0 - 2)</td><td>50206</td><td>18 - 13</td></tr><tr><td>9999-05-12</td><td>white sox</td><td>4 - 2</td><td>hibbard (2 - 1)</td><td>50108</td><td>19 - 13</td></tr><tr><td>9999-05-13</td><td>royals</td><td>4 - 2</td><td>davis (2 - 4)</td><td>44275</td><td>20 - 13</td></tr><tr><td>9999-05-14</td><td>royals</td><td>4 - 1</td><td>gubicza (0 - 1)</td><td>43357</td><td>21 - 13</td></tr><tr><td>9999-05-15</td><td>royals</td><td>6 - 4</td><td>boucher (0 - 3)</td><td>50113</td><td>21 - 14</td></tr><tr><td>9999-05-17</td><td>white sox</td><td>5 - 3</td><td>timlin (3 - 1)</td><td>30095</td><td>21 - 15</td></tr><tr><td>9999-05-18</td><td>white sox</td><td>9 - 2</td><td>hibbard (2 - 2)</td><td>34861</td><td>22 - 15</td></tr><tr><td>9999-05-19</td><td>white sox</td><td>5 - 4</td><td>timlin (3 - 2)</td><td>41015</td><td>22 - 16</td></tr><tr><td>9999-05-20</td><td>athletics</td><td>1 - 0</td><td>welch (4 - 3)</td><td>24631</td><td>23 - 16</td></tr><tr><td>9999-05-21</td><td>athletics</td><td>11 - 7</td><td>dressendorfer (3 - 3)</td><td>22738</td><td>24 - 16</td></tr><tr><td>9999-05-22</td><td>athletics</td><td>2 - 1</td><td>stieb (4 - 3)</td><td>34028</td><td>24 - 17</td></tr><tr><td>9999-05-24</td><td>angels</td><td>3 - 2</td><td>finley (7 - 2)</td><td>26408</td><td>25 - 17</td></tr><tr><td>9999-05-25</td><td>angels</td><td>5 - 0</td><td>stottlemyre (5 - 1)</td><td>36732</td><td>25 - 18</td></tr><tr><td>9999-05-26</td><td>angels</td><td>6 - 2</td><td>wells (5 - 4)</td><td>45307</td><td>25 - 19</td></tr><tr><td>9999-05-28</td><td>athletics</td><td>8 - 4</td><td>acker (1 - 2)</td><td>50299</td><td>25 - 20</td></tr><tr><td>9999-05-29</td><td>athletics</td><td>8 - 3</td><td>slusarski (1 - 2)</td><td>50262</td><td>26 - 20</td></tr><tr><td>9999-05-30</td><td>athletics</td><td>8 - 6</td><td>ward (0 - 2)</td><td>50271</td><td>26 - 21</td></tr><tr><td>9999-05-31</td><td>angels</td><td>5 - 1</td><td>langston (6 - 2)</td><td>50252</td><td>27 - 21</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT loss FROM table_sql WHERE date = '9999-05-29') = 'lost' \n             AND (SELECT loss FROM table_sql WHERE date = '9999-05-30') = 'lost' \n             AND (SELECT loss FROM table_sql WHERE date = '9999-05-31') = 'won' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-5.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "No",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the wildcats kept the opposing team scoreless in ten games</h3>\n<h3>Input Table: 1947 kentucky wildcats football team</h3>\n<div class=\"step\">\n<table>\n<tr><td>game</td><td>date</td><td>opponent</td><td>result</td><td>wildcats_points</td><td>opponents</td><td>record</td></tr><tr><td>1</td><td>9999-09-20</td><td>ole miss</td><td>loss</td><td>7</td><td>14</td><td>0 - 1</td></tr><tr><td>2</td><td>9999-09-27</td><td>cincinnati</td><td>win</td><td>20</td><td>0</td><td>1 - 1</td></tr><tr><td>3</td><td>9999-10-04</td><td>xavier</td><td>win</td><td>20</td><td>7</td><td>2 - 1</td></tr><tr><td>4</td><td>9999-10-11</td><td>9 georgia</td><td>win</td><td>26</td><td>0</td><td>3 - 1 , 20</td></tr><tr><td>5</td><td>9999-10-18</td><td>10 vanderbilt</td><td>win</td><td>14</td><td>0</td><td>4 - 1 , 14</td></tr><tr><td>6</td><td>9999-10-25</td><td>michigan state</td><td>win</td><td>7</td><td>6</td><td>5 - 1 , 13</td></tr><tr><td>7</td><td>9999-11-01</td><td>18 alabama</td><td>loss</td><td>0</td><td>13</td><td>5 - 2</td></tr><tr><td>8</td><td>9999-11-08</td><td>west virginia</td><td>win</td><td>15</td><td>6</td><td>6 - 2</td></tr><tr><td>9</td><td>9999-11-15</td><td>evansville</td><td>win</td><td>36</td><td>0</td><td>7 - 2</td></tr><tr><td>10</td><td>9999-11-22</td><td>tennessee</td><td>loss</td><td>6</td><td>13</td><td>7 - 3</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql \nWHERE opponents > 0;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-739.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "No",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the highest attendance of the season was on september 5</h3>\n<h3>Input Table: 2008 arizona diamondbacks season</h3>\n<div class=\"step\">\n<table>\n<tr><td>date</td><td>opponent</td><td>score</td><td>loss</td><td>attendance</td><td>record</td></tr><tr><td>9999-09-01</td><td>cardinals</td><td>8 - 6</td><td>mcclellan (2 - 7)</td><td>35075</td><td>70 - 67</td></tr><tr><td>9999-09-02</td><td>cardinals</td><td>8 - 2</td><td>petit (3 - 4)</td><td>27568</td><td>70 - 68</td></tr><tr><td>9999-09-03</td><td>cardinals</td><td>4 - 3</td><td>perez (2 - 2)</td><td>24350</td><td>71 - 68</td></tr><tr><td>9999-09-05</td><td>dodgers</td><td>7 - 0</td><td>haren (14 - 8)</td><td>52270</td><td>71 - 69</td></tr><tr><td>9999-09-06</td><td>dodgers</td><td>7 - 2</td><td>webb (19 - 7)</td><td>47543</td><td>71 - 70</td></tr><tr><td>9999-09-07</td><td>dodgers</td><td>5 - 3</td><td>rauch (4 - 6)</td><td>54137</td><td>71 - 71</td></tr><tr><td>9999-09-08</td><td>giants</td><td>6 - 2</td><td>petit (3 - 5)</td><td>30252</td><td>71 - 72</td></tr><tr><td>9999-09-09</td><td>giants</td><td>5 - 4</td><td>rauch (4 - 7)</td><td>30518</td><td>71 - 73</td></tr><tr><td>9999-09-10</td><td>giants</td><td>4 - 3</td><td>lyon (2 - 5)</td><td>30992</td><td>71 - 74</td></tr><tr><td>9999-09-12</td><td>reds</td><td>3 - 2</td><td>harang (4 - 16)</td><td>29046</td><td>72 - 74</td></tr><tr><td>9999-09-13</td><td>reds</td><td>3 - 2 (10)</td><td>pe\u00f1a (1 - 2)</td><td>45075</td><td>72 - 75</td></tr><tr><td>9999-09-14</td><td>reds</td><td>2 - 1 (10)</td><td>rauch (4 - 8)</td><td>27297</td><td>72 - 76</td></tr><tr><td>9999-09-15</td><td>giants</td><td>3 - 1</td><td>hennessey (1 - 2)</td><td>25969</td><td>73 - 76</td></tr><tr><td>9999-09-16</td><td>giants</td><td>2 - 0</td><td>cain (8 - 13)</td><td>33195</td><td>74 - 76</td></tr><tr><td>9999-09-17</td><td>giants</td><td>7 - 6</td><td>s\u00e1nchez (9 - 11)</td><td>22616</td><td>75 - 76</td></tr><tr><td>9999-09-18</td><td>giants</td><td>3 - 2</td><td>lincecum (17 - 4)</td><td>34323</td><td>76 - 76</td></tr><tr><td>9999-09-19</td><td>rockies</td><td>3 - 2</td><td>scherzer (0 - 3)</td><td>43137</td><td>76 - 77</td></tr><tr><td>9999-09-20</td><td>rockies</td><td>5 - 3</td><td>fuentes (1 - 5)</td><td>38283</td><td>77 - 77</td></tr><tr><td>9999-09-21</td><td>rockies</td><td>13 - 4</td><td>reynolds (2 - 8)</td><td>32915</td><td>78 - 77</td></tr><tr><td>9999-09-22</td><td>cardinals</td><td>4 - 2</td><td>wellemeyer (12 - 9)</td><td>40349</td><td>79 - 77</td></tr><tr><td>9999-09-23</td><td>cardinals</td><td>7 - 4</td><td>johnson (10 - 10)</td><td>40013</td><td>79 - 78</td></tr><tr><td>9999-09-24</td><td>cardinals</td><td>4 - 2</td><td>scherzer (0 - 4)</td><td>40029</td><td>79 - 79</td></tr><tr><td>9999-09-25</td><td>cardinals</td><td>12 - 3</td><td>rosales (1 - 1)</td><td>40502</td><td>79 - 80</td></tr><tr><td>9999-09-26</td><td>rockies</td><td>6 - 4</td><td>grilli (3 - 3)</td><td>34950</td><td>80 - 80</td></tr><tr><td>9999-09-27</td><td>rockies</td><td>6 - 4</td><td>corpas (3 - 4)</td><td>33234</td><td>81 - 80</td></tr><tr><td>9999-09-28</td><td>rockies</td><td>2 - 1</td><td>vizca\u00edno (1 - 2)</td><td>35908</td><td>82 - 80</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN MAX(attendance) = 52270 THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql \nWHERE date = '9999-09-05';</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-815.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "No",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the games on june 18 and 28 , both had a score of 2 - 0</h3>\n<h3>Input Table: 1998 in paraguayan football</h3>\n<div class=\"step\">\n<table>\n<tr><td>date</td><td>venue</td><td>score</td><td>comp</td><td>report</td></tr><tr><td>1998-02-08</td><td>estadio defensores del chaco asunci\u00f3n , paraguay</td><td>4 - 0</td><td>f</td><td>450</td></tr><tr><td>1998-03-14</td><td>qualcomm stadium san diego , united states</td><td>2 - 2</td><td>f</td><td>451</td></tr><tr><td>1998-03-18</td><td>estadio ol\u00edmpico universitario mexico city , mexico</td><td>1 - 1</td><td>f</td><td>452</td></tr><tr><td>1998-03-28</td><td>yale bowl new haven , united states</td><td>1 - 1</td><td>f</td><td>453</td></tr><tr><td>1998-04-22</td><td>stadio ennio tardini parma , italy</td><td>3 - 1</td><td>f</td><td>454</td></tr><tr><td>1998-05-17</td><td>olympic stadium tokyo , japan</td><td>1 - 1</td><td>kirin cup</td><td>455</td></tr><tr><td>1998-05-21</td><td>kobe universiade memorial stadium kobe , japan</td><td>1 - 0</td><td>kirin cup</td><td>456</td></tr><tr><td>1998-06-01</td><td>philips stadion eindhoven , netherlands</td><td>5 - 1</td><td>f</td><td>457</td></tr><tr><td>1998-06-03</td><td>steaua stadium bucharest , romania</td><td>3 - 2</td><td>f</td><td>458</td></tr><tr><td>1998-06-06</td><td>king baudouin stadium brussels , belgium</td><td>1 - 0</td><td>f</td><td>459</td></tr><tr><td>1998-06-12</td><td>stade de la mosson montpellier , france</td><td>0 - 0</td><td>world cup</td><td>report</td></tr><tr><td>1998-06-19</td><td>stade geoffroy - guichard saint - \u00e9tienne , france</td><td>0 - 0</td><td>world cup</td><td>report</td></tr><tr><td>1998-06-24</td><td>stade de toulouse toulouse , france</td><td>1 - 3</td><td>world cup</td><td>report</td></tr><tr><td>1998-06-28</td><td>stade f\u00e9lix bollaert lens , france</td><td>0 - 0 ( 1 - 0 aet )</td><td>world cup</td><td>report</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT score FROM table_sql WHERE date = '1998-06-18') = '2 - 0' \n             AND (SELECT score FROM table_sql WHERE date = '1998-06-28') = '2 - 0' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-1798.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> daniel uberti was sacked by nejapa on december 29th , 2008</h3>\n<h3>Input Table: primera divisi\u00f3n de f\u00fatbol profesional apertura 2008</h3>\n<div class=\"step\">\n<table>\n<tr><td>team</td><td>outgoing_manager</td><td>manner_of_departure</td><td>date_of_vacancy</td><td>replaced_by</td><td>date_of_appointment</td><td>position_in_table</td></tr><tr><td>nejapa</td><td>mauricio cienfuegos</td><td>mutual consent</td><td>2008-08-14</td><td>daniel uberti</td><td>2008-09-05</td><td>10th</td></tr><tr><td>firpo</td><td>gerardo reinoso</td><td>sacked</td><td>2008-08-25</td><td>oscar benitez</td><td>2008-09-02</td><td>7th</td></tr><tr><td>balboa</td><td>gustavo de simone</td><td>sacked</td><td>2008-08-30</td><td>roberto gamarra</td><td>2008-09-05</td><td>10th</td></tr><tr><td>alianza</td><td>pablo centrone</td><td>sacked</td><td>2008-09-14</td><td>carlos jurado</td><td>2008-09-16</td><td>5th</td></tr><tr><td>firpo</td><td>oscar ben\u00edtez</td><td>sacked</td><td>2008-12-09</td><td>agust\u00edn castillo</td><td>2008-12-23</td><td>post - season (6th)</td></tr><tr><td>\u00e1guila</td><td>agust\u00edn castillo</td><td>sacked</td><td>2008-12-15</td><td>pablo centrone</td><td>2008-12-24</td><td>post - season (semifinals)</td></tr><tr><td>fas</td><td>nelson ancheta</td><td>sacked</td><td>2008-12-27</td><td>roberto gamarra</td><td>2009-01-01</td><td>post - season (semifinals)</td></tr><tr><td>nejapa</td><td>daniel uberti</td><td>sacked</td><td>2008-12-29</td><td>nelson ancheta</td><td>2008-12-29</td><td>post - season (10th)</td></tr><tr><td>balboa</td><td>roberto gamarra</td><td>mutual consent</td><td>2009-01-01</td><td>carlos de toro</td><td>2009-01-16</td><td>post - season (7th)</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE team = 'nejapa' \nAND outgoing_manager = 'daniel uberti' \nAND manner_of_departure = 'sacked' \nAND date_of_vacancy = '2008-12-29';</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-989.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> march was the month that aired the most episodes with five</h3>\n<h3>Input Table: list of republic of doyle episodes</h3>\n<div class=\"step\">\n<table>\n<tr><td>Unnamed:_0</td><td>title</td><td>directed_by</td><td>written_by</td><td>viewers</td><td>original_airdate</td><td>prod_code</td></tr><tr><td>1</td><td>fathers and sons</td><td>mike clattenburg</td><td>allan hawco , perry chafe and malcolm macrury</td><td>969000</td><td>2010-01-06</td><td>101</td></tr><tr><td>2</td><td>the return of the grievous angel</td><td>steve dimarco</td><td>allan hawco and avrum jacobson</td><td>715000</td><td>2010-01-13</td><td>102</td></tr><tr><td>3</td><td>duchess of george</td><td>mike clattenburg</td><td>allan hawco , perry chafe and malcolm macrury</td><td>685000</td><td>2010-01-20</td><td>103</td></tr><tr><td>5</td><td>hit and rum</td><td>steve dimarco</td><td>matt maclennan</td><td>594000</td><td>2010-02-03</td><td>105</td></tr><tr><td>6</td><td>the one who got away</td><td>larry mclean</td><td>jesse mckeown</td><td>1012000</td><td>2010-02-10</td><td>106</td></tr><tr><td>7</td><td>the woman who knew too little</td><td>robert lieberman</td><td>jeremy boxen</td><td>1053000</td><td>2010-03-03</td><td>107</td></tr><tr><td>8</td><td>the tell - tale safe</td><td>jerry ciccoritti</td><td>john callaghan and steve cochrane</td><td>986000</td><td>2010-03-10</td><td>108</td></tr><tr><td>9</td><td>he sleeps with the chips</td><td>phil earnshaw</td><td>perry chafe</td><td>908000</td><td>2010-03-17</td><td>109</td></tr><tr><td>10</td><td>the pen is mightier than the doyle</td><td>robert lieberman</td><td>steve cochrane and avrum jacobson</td><td>897000</td><td>2010-03-24</td><td>110</td></tr><tr><td>11</td><td>a horse divided</td><td>steve scaini</td><td>jesse mckeown</td><td>902000</td><td>2010-03-31</td><td>111</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT COUNT(*) FROM table_sql WHERE strftime('%m', original_airdate) = '03') = 5 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-1451.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> in the illinois 6th district , republican henry hyde , incumbent since 1974 , beat democrat mario reymond reda</h3>\n<h3>Input Table: united states house of representatives elections , 1980</h3>\n<div class=\"step\">\n<table>\n<tr><td>district</td><td>incumbent</td><td>party</td><td>first_elected</td><td>result</td><td>candidates</td></tr><tr><td>illinois 2</td><td>morgan f murphy</td><td>democratic</td><td>1970-01-01</td><td>retired democratic hold</td><td>gus savage (d) 88.2% marsha a harris (r) 11.8%</td></tr><tr><td>illinois 6</td><td>henry hyde</td><td>republican</td><td>1974-01-01</td><td>re - elected</td><td>henry hyde (r) 67.0% mario reymond reda (d) 33.0%</td></tr><tr><td>illinois 7</td><td>cardiss collins</td><td>democratic</td><td>1973-01-01</td><td>re - elected</td><td>cardiss collins (d) 85.1% ruth r hooper (r) 14.9%</td></tr><tr><td>illinois 12</td><td>phil crane</td><td>republican</td><td>1969-01-01</td><td>re - elected</td><td>phil crane (r) 74.1% david mccartney (d) 25.9%</td></tr><tr><td>illinois 13</td><td>robert mcclory</td><td>republican</td><td>1962-01-01</td><td>re - elected</td><td>robert mcclory (r) 71.7% michael reese (d) 28.3%</td></tr><tr><td>illinois 15</td><td>tom corcoran</td><td>republican</td><td>1976-01-01</td><td>re - elected</td><td>tom corcoran (r) 76.7% john p quillin (d) 23.3%</td></tr><tr><td>illinois 19</td><td>tom railsback</td><td>republican</td><td>1966-01-01</td><td>re - elected</td><td>tom railsback (r) 73.4% thomas j hand (d) 26.6%</td></tr><tr><td>illinois 20</td><td>paul findley</td><td>republican</td><td>1960-01-01</td><td>re - elected</td><td>paul findley (r) 56.0% david robinson (d) 44.0%</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT result FROM table_sql WHERE district = 'illinois 6' AND incumbent = 'henry hyde' AND party = 'republican' AND first_elected = '1974-01-01') = 're - elected' \n             AND (SELECT candidates FROM table_sql WHERE district = 'illinois 6' AND incumbent = 'henry hyde' AND party = 'republican' AND first_elected = '1974-01-01') LIKE '%henry hyde (r)%' \n             AND (SELECT candidates FROM table_sql WHERE district = 'illinois 6' AND incumbent = 'henry hyde' AND party = 'republican' AND first_elected = '1974-01-01') LIKE '%mario reymond reda (d)%' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FN/test-244.html": {
        "method": "Text2SQL",
        "subfolder": "FN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "No",
        "Model_Prediction": "False",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> italy received two more gold medals than canada did but tied with the united states and west germany</h3>\n<h3>Input Table: 1988 winter olympics</h3>\n<div class=\"step\">\n<table>\n<tr><td>rank</td><td>nation</td><td>gold</td><td>silver</td><td>bronze</td><td>total</td></tr><tr><td>1</td><td>soviet union (urs)</td><td>11</td><td>9</td><td>9</td><td>29</td></tr><tr><td>2</td><td>east germany (gdr)</td><td>9</td><td>10</td><td>6</td><td>25</td></tr><tr><td>3</td><td>switzerland (sui)</td><td>5</td><td>5</td><td>5</td><td>15</td></tr><tr><td>4</td><td>finland (fin)</td><td>4</td><td>1</td><td>2</td><td>7</td></tr><tr><td>5</td><td>sweden (swe)</td><td>4</td><td>0</td><td>2</td><td>6</td></tr><tr><td>6</td><td>austria (aut)</td><td>3</td><td>5</td><td>2</td><td>10</td></tr><tr><td>7</td><td>netherlands (ned)</td><td>3</td><td>2</td><td>2</td><td>7</td></tr><tr><td>8</td><td>west germany (frg)</td><td>2</td><td>4</td><td>2</td><td>8</td></tr><tr><td>9</td><td>united states (usa)</td><td>2</td><td>1</td><td>3</td><td>6</td></tr><tr><td>10</td><td>italy (ita)</td><td>2</td><td>1</td><td>2</td><td>5</td></tr><tr><td>13</td><td>canada (can)</td><td>0</td><td>2</td><td>3</td><td>5</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT gold FROM table_sql WHERE nation = 'italy') - \n             (SELECT gold FROM table_sql WHERE nation = 'canada') = 2 \n             AND \n             (SELECT gold FROM table_sql WHERE nation = 'italy') = \n             (SELECT gold FROM table_sql WHERE nation = 'united states') \n             AND \n             (SELECT gold FROM table_sql WHERE nation = 'italy') = \n             (SELECT gold FROM table_sql WHERE nation = 'west germany') \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-1302.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the round played on january 7th 2003 was the first leg of the semi - final</h3>\n<h3>Input Table: 2002 - 03 manchester united f.c. season</h3>\n<div class=\"step\">\n<table>\n<tr><td>date</td><td>round</td><td>opponents</td><td>result_f_-_a</td><td>attendance</td></tr><tr><td>2002-11-05</td><td>round 3</td><td>leicester city</td><td>2 - 0</td><td>47848</td></tr><tr><td>2002-12-03</td><td>round 4</td><td>burnley</td><td>2 - 0</td><td>22034</td></tr><tr><td>2002-12-17</td><td>round 5</td><td>chelsea</td><td>1 - 0</td><td>57985</td></tr><tr><td>2003-01-07</td><td>semi - final first leg</td><td>blackburn rovers</td><td>1 - 1</td><td>62740</td></tr><tr><td>2003-01-22</td><td>semi - final second leg</td><td>blackburn rovers</td><td>3 - 1</td><td>29048</td></tr><tr><td>2003-03-02</td><td>final</td><td>liverpool</td><td>0 - 2</td><td>74500</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE date = '2003-01-07' \nAND round = 'semi - final first leg';</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FN/test-43.html": {
        "method": "Text2SQL",
        "subfolder": "FN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "No",
        "Model_Prediction": "False",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> steve stricker of united states has the lowest score among all the players</h3>\n<h3>Input Table: 2006 u.s. open (golf)</h3>\n<div class=\"step\">\n<table>\n<tr><td>place</td><td>player</td><td>country</td><td>score</td><td>to_par</td></tr><tr><td>1</td><td>steve stricker</td><td>united states</td><td>70 + 69 = 139</td><td>- 1</td></tr><tr><td>2</td><td>colin montgomerie</td><td>scotland</td><td>69 + 71 = 140</td><td>e</td></tr><tr><td>t3</td><td>kenneth ferrie</td><td>england</td><td>71 + 70 = 141</td><td>+ 1</td></tr><tr><td>t3</td><td>geoff ogilvy</td><td>australia</td><td>71 + 70 = 141</td><td>+ 1</td></tr><tr><td>t5</td><td>jim furyk</td><td>united states</td><td>70 + 72 = 142</td><td>+ 2</td></tr><tr><td>t5</td><td>p\u00e1draig harrington</td><td>ireland</td><td>70 + 72 = 142</td><td>+ 2</td></tr><tr><td>t7</td><td>jason dufner</td><td>united states</td><td>72 + 71 = 143</td><td>+ 3</td></tr><tr><td>t7</td><td>graeme mcdowell</td><td>northern ireland</td><td>71 + 72 = 143</td><td>+ 3</td></tr><tr><td>t7</td><td>phil mickelson</td><td>united states</td><td>70 + 73 = 143</td><td>+ 3</td></tr><tr><td>t7</td><td>arron oberholser</td><td>united states</td><td>75 + 68 = 143</td><td>+ 3</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT MIN(score) FROM table_sql) = (SELECT score FROM table_sql WHERE player = 'steve stricker' AND country = 'united states') \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-223.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> there is more than one disc</h3>\n<h3>Input Table: none</h3>\n<div class=\"step\">\n<table>\n<tr><td>volume</td><td>discs</td><td>episodes</td><td>region_1</td><td>region_2</td><td>region_4</td></tr><tr><td>1</td><td>1</td><td>4</td><td>2006-01-31</td><td>2007-02-19</td><td>2007-03-15</td></tr><tr><td>2</td><td>1</td><td>4</td><td>2006-03-28</td><td>2007-06-04</td><td>2007-07-05</td></tr><tr><td>3</td><td>1</td><td>4</td><td>2006-05-30</td><td>2007-09-03</td><td>2008-03-13</td></tr><tr><td>4</td><td>1</td><td>4</td><td>2006-07-18</td><td>2008-02-18</td><td>2008-06-19</td></tr><tr><td>5</td><td>1</td><td>4</td><td>2006-09-19</td><td>2008-05-26</td><td>2009-03-05</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(DISTINCT discs) > 1 THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-805.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "No",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> triston grant plays the same position as the other payer drafted in his round</h3>\n<h3>Input Table: 2004 - 05 philadelphia flyers season</h3>\n<div class=\"step\">\n<table>\n<tr><td>round</td><td>player</td><td>position</td><td>nationality</td><td>college_/_junior_/_club_team_(league)</td></tr><tr><td>3</td><td>rob bellamy</td><td>right wing</td><td>united states</td><td>new england jr coyotes ( ejhl )</td></tr><tr><td>4</td><td>r j anderson</td><td>defense</td><td>united states</td><td>centennial high school (minn)</td></tr><tr><td>4</td><td>david laliberte</td><td>right wing</td><td>canada</td><td>prince edward island rocket ( qmjhl )</td></tr><tr><td>5</td><td>chris zarb</td><td>defense</td><td>united states</td><td>tri - city storm ( ushl )</td></tr><tr><td>5</td><td>gino pisellini</td><td>right wing</td><td>united states</td><td>plymouth whalers ( ohl )</td></tr><tr><td>6</td><td>ladislav scurko</td><td>center</td><td>slovakia</td><td>spi\u0161sk\u00e1 nov\u00e1 ves (slovakia)</td></tr><tr><td>6</td><td>frederik cabana</td><td>center</td><td>canada</td><td>halifax mooseheads (qmjhl)</td></tr><tr><td>8</td><td>martin houle</td><td>goaltender</td><td>canada</td><td>cape breton screaming eagles (qmjhl)</td></tr><tr><td>8</td><td>travis gawryletz</td><td>defense</td><td>canada</td><td>trail smoke eaters ( bchl )</td></tr><tr><td>9</td><td>triston grant</td><td>left wing</td><td>canada</td><td>vancouver giants ( whl )</td></tr><tr><td>9</td><td>john carter</td><td>center</td><td>united states</td><td>brewster bulldogs (emjhl)</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT position FROM table_sql WHERE round = 9 AND player = 'triston grant') = \n             (SELECT position FROM table_sql WHERE round = 9 AND player != 'triston grant') \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FN/test-1334.html": {
        "method": "Text2SQL",
        "subfolder": "FN",
        "LLM_analysis": "No",
        "Actual_Correctness": "No",
        "Model_Prediction": "False",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the bobcats had a record of 3 wins and 7 losses</h3>\n<h3>Input Table: 2009 - 10 charlotte bobcats season</h3>\n<div class=\"step\">\n<table>\n<tr><td>game</td><td>date</td><td>team</td><td>score</td><td>high_points</td><td>high_rebounds</td><td>high_assists</td><td>location_attendance</td><td>record</td></tr><tr><td>47</td><td>01-02-9999</td><td>portland</td><td>l 79 - 98 (ot)</td><td>raymond felton (23)</td><td>gerald wallace (10)</td><td>stephen jackson (4)</td><td>rose garden 20106</td><td>24 - 23</td></tr><tr><td>48</td><td>9999-02-03</td><td>la lakers</td><td>l 97 - 99 (ot)</td><td>stephen jackson (30)</td><td>nazr mohammed (17)</td><td>boris diaw (5)</td><td>staples center 18997</td><td>24 - 24</td></tr><tr><td>49</td><td>9999-02-06</td><td>new orleans</td><td>l 99 - 104 (ot)</td><td>stephen jackson (26)</td><td>boris diaw (8)</td><td>raymond felton (7)</td><td>time warner cable arena 19164</td><td>24 - 25</td></tr><tr><td>50</td><td>9999-02-09</td><td>washington</td><td>w 94 - 92 (ot)</td><td>stephen jackson (22)</td><td>nazr mohammed (10)</td><td>raymond felton (5)</td><td>time warner cable arena 12376</td><td>25 - 25</td></tr><tr><td>51</td><td>01-02-10</td><td>minnesota</td><td>w 93 - 92 (ot)</td><td>stephen jackson (33)</td><td>nazr mohammed (20)</td><td>dj augustin (7)</td><td>target center 13352</td><td>26 - 25</td></tr><tr><td>52</td><td>01-02-16</td><td>new jersey</td><td>l 94 - 103 (ot)</td><td>gerald wallace (21)</td><td>gerald wallace , boris diaw (10)</td><td>stephen jackson (5)</td><td>time warner cable arena 13712</td><td>26 - 26</td></tr><tr><td>53</td><td>9999-02-19</td><td>cleveland</td><td>w 110 - 93 (ot)</td><td>stephen jackson (29)</td><td>tyrus thomas (12)</td><td>boris diaw (9)</td><td>time warner cable arena 19568</td><td>27 - 26</td></tr><tr><td>54</td><td>9999-02-20</td><td>milwaukee</td><td>l 88 - 93 (ot)</td><td>stephen jackson (35)</td><td>tyrus thomas (11)</td><td>stephen jackson (5)</td><td>bradley center 17174</td><td>27 - 27</td></tr><tr><td>55</td><td>9999-02-22</td><td>la clippers</td><td>l 94 - 98 (ot)</td><td>gerald wallace (32)</td><td>gerald wallace (12)</td><td>boris diaw , raymond felton (9)</td><td>staples center 15892</td><td>27 - 28</td></tr><tr><td>56</td><td>9999-02-24</td><td>utah</td><td>l 93 - 102 (ot)</td><td>gerald wallace (27)</td><td>gerald wallace (8)</td><td>raymond felton (5)</td><td>energysolutions arena 19911</td><td>27 - 29</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT COUNT(*) FROM table_sql WHERE record = '3 - 7') = 1 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-1037.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "No",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> there are only two highest ranks listed in the table</h3>\n<h3>Input Table: list of sumo record holders</h3>\n<div class=\"step\">\n<table>\n<tr><td>name</td><td>total</td><td>first</td><td>last</td><td>highest_rank</td></tr><tr><td>kotonishiki</td><td>34</td><td>1990-09-01</td><td>1999-09-01</td><td>sekiwake</td></tr><tr><td>kai\u014d</td><td>32</td><td>1994-05-01</td><td>2000-07-01</td><td>\u014dzeki</td></tr><tr><td>mus\u014dyama</td><td>31</td><td>1994-03-01</td><td>2000-09-01</td><td>\u014dzeki</td></tr><tr><td>hasegawa</td><td>30</td><td>1965-11-01</td><td>1974-09-01</td><td>sekiwake</td></tr><tr><td>kotomitsuki</td><td>30</td><td>2001-01-01</td><td>2007-07-01</td><td>\u014dzeki</td></tr><tr><td>akinoshima</td><td>27</td><td>1988-11-01</td><td>2000-09-01</td><td>sekiwake</td></tr><tr><td>takamiyama</td><td>27</td><td>1969-11-01</td><td>1982-09-01</td><td>sekiwake</td></tr><tr><td>takat\u014driki</td><td>26</td><td>1991-05-01</td><td>2000-05-01</td><td>sekiwake</td></tr><tr><td>wakanosato</td><td>26</td><td>2000-11-01</td><td>2005-09-01</td><td>sekiwake</td></tr><tr><td>daikirin</td><td>22</td><td>1966-11-01</td><td>1970-09-01</td><td>\u014dzeki</td></tr><tr><td>tochiazuma ii</td><td>22</td><td>1997-07-01</td><td>2005-01-01</td><td>\u014dzeki</td></tr><tr><td>kisenosato</td><td>22</td><td>2006-07-01</td><td>2011-09-01</td><td>\u014dzeki</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(DISTINCT highest_rank) = 2 THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-188.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> there were four teams that scored exactly 12 against cambridge university</h3>\n<h3>Input Table: 1978 new zealand rugby union tour of britain and ireland</h3>\n<div class=\"step\">\n<table>\n<tr><td>opposing_team</td><td>against</td><td>date</td><td>venue</td><td>status</td></tr><tr><td>cambridge university</td><td>12</td><td>1978-10-18</td><td>grange road , cambridge</td><td>tour match</td></tr><tr><td>cardiff</td><td>7</td><td>1978-10-21</td><td>cardiff arms park , cardiff</td><td>tour match</td></tr><tr><td>west wales xv</td><td>7</td><td>1978-10-25</td><td>st helen 's , swansea</td><td>tour match</td></tr><tr><td>london counties</td><td>12</td><td>1978-10-28</td><td>twickenham , london</td><td>tour match</td></tr><tr><td>munster</td><td>12</td><td>1978-10-31</td><td>thomond park , limerick</td><td>tour match</td></tr><tr><td>ireland</td><td>6</td><td>1978-11-04</td><td>lansdowne road , dublin</td><td>test match</td></tr><tr><td>ulster</td><td>7</td><td>1978-11-07</td><td>ravenhill , belfast</td><td>tour match</td></tr><tr><td>wales</td><td>12</td><td>1978-11-01</td><td>cardiff arms park , cardiff</td><td>test match</td></tr><tr><td>south and south - west counties</td><td>0</td><td>1978-11-15</td><td>memorial ground , bristol</td><td>tour match</td></tr><tr><td>midland counties</td><td>15</td><td>1978-11-18</td><td>welford road , leicester</td><td>tour match</td></tr><tr><td>combined services</td><td>6</td><td>1978-11-21</td><td>aldershot military stadium , aldershot</td><td>tour match</td></tr><tr><td>england</td><td>6</td><td>1978-11-25</td><td>twickenham , london</td><td>test match</td></tr><tr><td>monmouthshire</td><td>9</td><td>1978-11-29</td><td>rodney parade , newport</td><td>tour match</td></tr><tr><td>north of england</td><td>6</td><td>1978-12-02</td><td>birkenhead park , birkenhead</td><td>tour match</td></tr><tr><td>north and midland of scotland</td><td>3</td><td>1978-12-05</td><td>linksfield stadium , aberdeen</td><td>tour match</td></tr><tr><td>scotland</td><td>9</td><td>1978-12-09</td><td>murrayfield , edinburgh</td><td>test match</td></tr><tr><td>bridgend</td><td>6</td><td>1978-12-13</td><td>brewery field , bridgend</td><td>tour match</td></tr><tr><td>barbarians</td><td>16</td><td>1978-12-16</td><td>cardiff arms park , cardiff</td><td>tour match</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 4 THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql \nWHERE against = 12 \nAND opposing_team = 'cambridge university';</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FN/test-315.html": {
        "method": "Text2SQL",
        "subfolder": "FN",
        "LLM_analysis": "No",
        "Actual_Correctness": "No",
        "Model_Prediction": "False",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> james donaldson had two stints on the jazz 's roster</h3>\n<h3>Input Table: utah jazz all - time roster</h3>\n<div class=\"step\">\n<table>\n<tr><td>player</td><td>nationality</td><td>position</td><td>years_for_jazz</td><td>school_/_club_team</td></tr><tr><td>adrian dantley</td><td>united states</td><td>guard - forward</td><td>1979-01-01</td><td>notre dame</td></tr><tr><td>brad davis</td><td>united states</td><td>guard</td><td>1979-01-01</td><td>maryland</td></tr><tr><td>darryl dawkins</td><td>united states</td><td>center</td><td>1987-01-01</td><td>maynard evans hs</td></tr><tr><td>paul dawkins</td><td>united states</td><td>guard</td><td>1979-01-01</td><td>northern illinois</td></tr><tr><td>greg deane</td><td>united states</td><td>guard</td><td>1979-01-01</td><td>utah</td></tr><tr><td>james donaldson</td><td>united states</td><td>center</td><td>1993-01-01, 1994-01-01, 1995-01-01</td><td>washington state</td></tr><tr><td>john drew</td><td>united states</td><td>guard - forward</td><td>1982-01-01</td><td>gardner - webb</td></tr><tr><td>john duren</td><td>united states</td><td>guard</td><td>1980-01-01</td><td>georgetown</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT COUNT(*) FROM table_sql WHERE player = 'james donaldson' AND years_for_jazz LIKE '%1993%' AND years_for_jazz LIKE '%1994%') = 2 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FN/test-1080.html": {
        "method": "Text2SQL",
        "subfolder": "FN",
        "LLM_analysis": "No",
        "Actual_Correctness": "No",
        "Model_Prediction": "False",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the highest point gap was on january 5 , with a spread of 6 points</h3>\n<h3>Input Table: 2003 - 04 detroit red wings season</h3>\n<div class=\"step\">\n<table>\n<tr><td>date</td><td>visitor</td><td>score</td><td>home</td><td>decision</td><td>attendance</td><td>record</td></tr><tr><td>0002-01-01</td><td>detroit</td><td>4 - 1</td><td>carolina</td><td>joseph</td><td>17053</td><td>24 - 12 - 4 - 1</td></tr><tr><td>0001-01-03</td><td>anaheim</td><td>1 - 3</td><td>detroit</td><td>legace</td><td>20066</td><td>25 - 12 - 4 - 1</td></tr><tr><td>0000-01-05</td><td>nashville</td><td>0 - 6</td><td>detroit</td><td>joseph</td><td>20066</td><td>26 - 12 - 4 - 1</td></tr><tr><td>0001-01-07</td><td>boston</td><td>3 - 0</td><td>detroit</td><td>joseph</td><td>20066</td><td>26 - 13 - 4 - 1</td></tr><tr><td>0000-01-10</td><td>detroit</td><td>1 - 2</td><td>boston</td><td>joseph</td><td>17565</td><td>26 - 13 - 4 - 2</td></tr><tr><td>9999-01-14</td><td>chicago</td><td>2 - 4</td><td>detroit</td><td>legace</td><td>20066</td><td>27 - 13 - 4 - 2</td></tr><tr><td>0000-01-16</td><td>phoenix</td><td>3 - 3</td><td>detroit</td><td>joseph</td><td>20066</td><td>27 - 13 - 5 - 2</td></tr><tr><td>9999-01-19</td><td>detroit</td><td>1 - 2</td><td>san jose</td><td>joseph</td><td>17361</td><td>27 - 14 - 5 - 2</td></tr><tr><td>9999-01-21</td><td>detroit</td><td>2 - 2</td><td>anaheim</td><td>legace</td><td>17174</td><td>27 - 14 - 6 - 2</td></tr><tr><td>9999-01-22</td><td>detroit</td><td>5 - 4</td><td>los angeles</td><td>joseph</td><td>18118</td><td>28 - 14 - 6 - 2</td></tr><tr><td>9999-01-24</td><td>detroit</td><td>2 - 5</td><td>phoenix</td><td>joseph</td><td>19019</td><td>28 - 15 - 6 - 2</td></tr><tr><td>9999-01-26</td><td>detroit</td><td>2 - 2</td><td>dallas</td><td>legace</td><td>18532</td><td>28 - 15 - 7 - 2</td></tr><tr><td>9999-01-29</td><td>new jersey</td><td>2 - 5</td><td>detroit</td><td>joseph</td><td>20066</td><td>29 - 15 - 7 - 2</td></tr><tr><td>9999-01-31</td><td>carolina</td><td>4 - 4</td><td>detroit</td><td>legace</td><td>20066</td><td>30 - 15 - 8 - 2</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT MAX(record) FROM table_sql) = '26 - 12 - 4 - 1' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FP/test-1425.html": {
        "method": "Text2SQL",
        "subfolder": "FP",
        "LLM_analysis": "No",
        "Actual_Correctness": "No",
        "Model_Prediction": "True",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> france 's competitors all finished better than 5th</h3>\n<h3>Input Table: 1976 world junior figure skating championships</h3>\n<div class=\"step\">\n<table>\n<tr><td>rank</td><td>name</td><td>nation</td><td>sp_+_fs</td><td>points</td><td>places</td></tr><tr><td>1</td><td>mark cockerell</td><td>united states</td><td>1</td><td>172.42</td><td>11.0</td></tr><tr><td>2</td><td>takashi mura</td><td>japan</td><td>2</td><td>165.7</td><td>24.0</td></tr><tr><td>3</td><td>brian pockar</td><td>canada</td><td>3</td><td>166.62</td><td>23.0</td></tr><tr><td>4</td><td>norbert schramm</td><td>west germany</td><td>4</td><td>159.8</td><td>40.0</td></tr><tr><td>5</td><td>andrew bestwick</td><td>united kingdom</td><td>5</td><td>158.1</td><td>48.0</td></tr><tr><td>6</td><td>stephan bril</td><td>west germany</td><td>7</td><td>155.72</td><td>57.0</td></tr><tr><td>7</td><td>patrice macrez</td><td>france</td><td>6</td><td>151.76</td><td>71.0</td></tr><tr><td>8</td><td>pierre lamine</td><td>france</td><td>8</td><td>150.5</td><td>79.0</td></tr><tr><td>9</td><td>shinji someya</td><td>japan</td><td>10</td><td>150.34</td><td>74.5</td></tr><tr><td>10</td><td>jozef sabov\u010d\u00edk</td><td>czechoslovakia</td><td>9</td><td>148.88</td><td>87.0</td></tr><tr><td>11</td><td>daniel fuerer</td><td>switzerland</td><td>13</td><td>146.18</td><td>92.5</td></tr><tr><td>12</td><td>gerald schranz</td><td>austria</td><td>11</td><td>143.04</td><td>102.0</td></tr><tr><td>13</td><td>helmut kristofics - binder</td><td>austria</td><td>15</td><td>137.32</td><td>123.0</td></tr><tr><td>14</td><td>michael pasfield</td><td>australia</td><td>12</td><td>136.6</td><td>119.0</td></tr><tr><td>15</td><td>francis demarteau</td><td>belgium</td><td>14</td><td>131.02</td><td>140.0</td></tr><tr><td>16</td><td>adrian vasile</td><td>romania</td><td>16</td><td>127.74</td><td>143.0</td></tr><tr><td>17</td><td>miljan begovic</td><td>yugoslavia</td><td>17</td><td>127.3</td><td>143.0</td></tr><tr><td>18</td><td>jeremy dowson</td><td>south africa</td><td>18</td><td>114.98</td><td>166.0</td></tr><tr><td>19</td><td>marc franquet</td><td>belgium</td><td>19</td><td>114.38</td><td>167.0</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT MIN(rank) FROM table_sql WHERE nation = 'france') < 5 \n        THEN 'FALSE' \n        ELSE 'TRUE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FN/test-174.html": {
        "method": "Text2SQL",
        "subfolder": "FN",
        "LLM_analysis": "No",
        "Actual_Correctness": "No",
        "Model_Prediction": "False",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> there are no games that have rebounds larger than 1048</h3>\n<h3>Input Table: none</h3>\n<div class=\"step\">\n<table>\n<tr><td>rank</td><td>player</td><td>years</td><td>games</td><td>reb_avg</td><td>total_rebounds</td></tr><tr><td>1</td><td>jim nowers</td><td>1972-01-01 - 1976-01-01</td><td>112</td><td>9.4</td><td>1048</td></tr><tr><td>2</td><td>kenny sanders</td><td>1985-01-01 - 1989-01-01</td><td>107</td><td>9.6</td><td>1026</td></tr><tr><td>3</td><td>will thomas</td><td>2004-01-01 - 2008-01-01</td><td>131</td><td>7.6</td><td>993</td></tr><tr><td>4</td><td>george evans</td><td>1997-01-01 - 2001-01-01</td><td>116</td><td>8.2</td><td>953</td></tr><tr><td>5</td><td>robert dykes</td><td>1987-01-01 - 1991-01-01</td><td>122</td><td>7.5</td><td>925</td></tr><tr><td>6</td><td>andre gaddy</td><td>1977-01-01 - 1982-01-01</td><td>98</td><td>9.3</td><td>916</td></tr><tr><td>7</td><td>jai lewis</td><td>2002-01-01 - 2006-01-01</td><td>125</td><td>7.2</td><td>895</td></tr><tr><td>8</td><td>rob rose</td><td>1982-01-01 - 1986-01-01</td><td>113</td><td>7.1</td><td>805</td></tr><tr><td>9</td><td>herb estes</td><td>1973-01-01 - 1976-01-01</td><td>80</td><td>9.2</td><td>734</td></tr><tr><td>10</td><td>jesse young</td><td>1999-01-01 - 2003-01-01</td><td>115</td><td>6.2</td><td>708</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'TRUE' \n        ELSE 'FALSE' \n    END \nFROM table_sql \nWHERE total_rebounds > 1048;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-1097.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "No",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> seasons 2 and 10 both aired in january , almost exactly one year apart</h3>\n<h3>Input Table: list of all that episodes</h3>\n<div class=\"step\">\n<table>\n<tr><td>season</td><td>series</td><td>episode_title</td><td>original_air_date</td><td>nick_prod</td></tr><tr><td>1</td><td>38</td><td>tia & tamera mowry / ll cool j</td><td>1996-11-16</td><td>338</td></tr><tr><td>2</td><td>39</td><td>montell jordan</td><td>1996-11-23</td><td>339</td></tr><tr><td>4</td><td>41</td><td>dru hill</td><td>1996-12-07</td><td>341</td></tr><tr><td>5</td><td>42</td><td>tyra banks / blackstreet</td><td>1996-12-14</td><td>342</td></tr><tr><td>6</td><td>43</td><td>music special</td><td>1996-12-17</td><td>343</td></tr><tr><td>7</td><td>44</td><td>a tribe called quest</td><td>1996-12-21</td><td>344</td></tr><tr><td>8</td><td>45</td><td>702</td><td>1996-12-28</td><td>345</td></tr><tr><td>9</td><td>46</td><td>tony! toni! tone!</td><td>1997-01-04</td><td>346</td></tr><tr><td>10</td><td>47</td><td>chris farley / mint condition</td><td>1997-01-11</td><td>347</td></tr><tr><td>11</td><td>48</td><td>112</td><td>1997-01-18</td><td>348</td></tr><tr><td>12</td><td>49</td><td>sherman hemsley / nas</td><td>1997-01-25</td><td>349</td></tr><tr><td>13</td><td>50</td><td>john leguizamo / mona lisa</td><td>1997-02-01</td><td>350</td></tr><tr><td>14</td><td>51</td><td>ray j</td><td>1997-02-08</td><td>351</td></tr><tr><td>15</td><td>52</td><td>for real</td><td>1997-09-20</td><td>352</td></tr><tr><td>16</td><td>53</td><td>aaliyah</td><td>1997-10-04</td><td>353</td></tr><tr><td>17</td><td>54</td><td>az yet</td><td>1997-09-27</td><td>354</td></tr><tr><td>18</td><td>55</td><td>monica</td><td>1997-10-11</td><td>355</td></tr><tr><td>19</td><td>56</td><td>mc lyte</td><td>1997-10-18</td><td>356</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT COUNT(*) FROM table_sql WHERE season = 2 AND strftime('%m', original_air_date) = '01') > 0 \n             AND (SELECT COUNT(*) FROM table_sql WHERE season = 10 AND strftime('%m', original_air_date) = '01') > 0 \n             AND (SELECT strftime('%Y', original_air_date) FROM table_sql WHERE season = 2) = \n                 (SELECT strftime('%Y', original_air_date, '-1 year') FROM table_sql WHERE season = 10) \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-1372.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> iran , who ranks 1st in gdp in the middle east , ranks sixth in all of asia</h3>\n<h3>Input Table: list of asian and pacific countries by gdp (ppp)</h3>\n<div class=\"step\">\n<table>\n<tr><td>rank_mideast</td><td>rank_asia</td><td>rank_world</td><td>country</td><td>2011_gdp_(ppp)_billions_of_usd</td></tr><tr><td>1</td><td>6</td><td>17</td><td>iran</td><td>930.236</td></tr><tr><td>2</td><td>9</td><td>23</td><td>saudi arabia</td><td>677.663</td></tr><tr><td>3</td><td>18</td><td>48</td><td>united arab emirates</td><td>261.189</td></tr><tr><td>4</td><td>19</td><td>50</td><td>israel</td><td>235.446</td></tr><tr><td>5</td><td>21</td><td>55</td><td>qatar</td><td>181.912</td></tr><tr><td>6</td><td>22</td><td>58</td><td>kuwait</td><td>150.002</td></tr><tr><td>7</td><td>23</td><td>60</td><td>iraq</td><td>127.348</td></tr><tr><td>8</td><td>26</td><td>66</td><td>syria</td><td>107.803</td></tr><tr><td>9</td><td>29</td><td>76</td><td>oman</td><td>81.005</td></tr><tr><td>10</td><td>30</td><td>83</td><td>yemen</td><td>63.344</td></tr><tr><td>11</td><td>31</td><td>84</td><td>lebanon</td><td>61.738</td></tr><tr><td>12</td><td>35</td><td>97</td><td>jordan</td><td>36.897</td></tr><tr><td>13</td><td>37</td><td>104</td><td>bahrain</td><td>30.889</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT rank_asia FROM table_sql WHERE country = 'iran') = 6 \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-700.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> pan wei - lun lost against chinatrust whales</h3>\n<h3>Input Table: 2007 uni - president lions season</h3>\n<div class=\"step\">\n<table>\n<tr><td>date</td><td>opponent</td><td>score</td><td>loss</td><td>save</td></tr><tr><td>9999-03-17</td><td>la new bears</td><td>4 - 5</td><td>pan wei - lun</td><td>huang chun - chung</td></tr><tr><td>9999-03-18</td><td>la new bears</td><td>4 - 1</td><td>horacio estrada</td><td>tseng yi - cheng</td></tr><tr><td>9999-03-22</td><td>chinatrust whales</td><td>7 - 9</td><td>kao lung - wei</td><td>ni fu - deh</td></tr><tr><td>9999-03-23</td><td>chinatrust whales</td><td>4 - 5</td><td>pan wei - lun</td><td>miguel saladin</td></tr><tr><td>9999-03-24</td><td>la new bears</td><td>1 - 5</td><td>jeriome robertson</td><td>||3008</td></tr><tr><td>9999-03-25</td><td>la new bears</td><td>1 - 6</td><td>rob cordemans</td><td>huang chun - chung</td></tr><tr><td>9999-03-27</td><td>brother elephants</td><td>postponed rescheduled for june 19</td><td>postponed rescheduled for june 19</td><td>postponed rescheduled for june 19</td></tr><tr><td>9999-03-28</td><td>brother elephants</td><td>0 - 4</td><td>tsao chun - yang</td><td>chuang wei - chuan</td></tr><tr><td>9999-03-31</td><td>macoto cobras</td><td>11 - 5</td><td>diegomar markwell</td><td>||2275</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE opponent = 'chinatrust whales' \nAND loss = 'pan wei - lun';</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-1129.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the two players with the highest league apps are malcolm brown and peter hart</h3>\n<h3>Input Table: 1979 - 80 huddersfield town f.c. season</h3>\n<div class=\"step\">\n<table>\n<tr><td>name</td><td>position</td><td>league_apps</td><td>league_goals</td><td>fa_cup_apps</td><td>fa_cup_goals</td><td>league_cup_apps</td><td>league_cup_goals</td><td>total_apps</td><td>total_goals</td></tr><tr><td>jim branagan</td><td>df</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0 (1)</td><td>0</td><td>0 (1)</td><td>0</td></tr><tr><td>malcolm brown</td><td>df</td><td>46</td><td>2</td><td>2</td><td>0</td><td>4</td><td>1</td><td>52</td><td>3</td></tr><tr><td>david cowling</td><td>mf</td><td>39 (1)</td><td>10</td><td>1</td><td>0</td><td>4</td><td>0</td><td>44 (1)</td><td>10</td></tr><tr><td>peter fletcher</td><td>fw</td><td>30 (8)</td><td>17</td><td>2</td><td>0</td><td>3</td><td>1</td><td>35 (8)</td><td>18</td></tr><tr><td>keith hanvey</td><td>df</td><td>33</td><td>2</td><td>0</td><td>0</td><td>4</td><td>0</td><td>39</td><td>2</td></tr><tr><td>peter hart</td><td>mf</td><td>46</td><td>4</td><td>1</td><td>1</td><td>4</td><td>0</td><td>51</td><td>5</td></tr><tr><td>ian holmes</td><td>mf</td><td>6 (4)</td><td>3</td><td>0</td><td>0</td><td>4</td><td>1</td><td>10 (4)</td><td>4</td></tr><tr><td>steve kindon</td><td>fw</td><td>22 (1)</td><td>14</td><td>0</td><td>0</td><td>0</td><td>0</td><td>22 (1)</td><td>14</td></tr><tr><td>mick laverick</td><td>mf</td><td>45</td><td>4</td><td>2</td><td>0</td><td>4</td><td>0</td><td>51</td><td>4</td></tr><tr><td>bernard purdie</td><td>df</td><td>18 (4)</td><td>0</td><td>2</td><td>0</td><td>0</td><td>0</td><td>20 (4)</td><td>0</td></tr><tr><td>andy rankin</td><td>gk</td><td>24</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>24</td><td>0</td></tr><tr><td>ian robins</td><td>fw</td><td>45</td><td>25</td><td>2</td><td>0</td><td>4</td><td>2</td><td>51</td><td>27</td></tr><tr><td>fred robinson</td><td>df</td><td>30</td><td>1</td><td>2</td><td>0</td><td>4</td><td>0</td><td>36</td><td>1</td></tr><tr><td>tommy smith</td><td>fw</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td></tr><tr><td>brian stanton</td><td>mf</td><td>41</td><td>9</td><td>2</td><td>0</td><td>0</td><td>0</td><td>43</td><td>9</td></tr><tr><td>alan starling</td><td>gk</td><td>22</td><td>0</td><td>2</td><td>0</td><td>4</td><td>0</td><td>28</td><td>0</td></tr><tr><td>dave sutton</td><td>df</td><td>46</td><td>6</td><td>2</td><td>0</td><td>4</td><td>1</td><td>52</td><td>7</td></tr><tr><td>chris topping</td><td>df</td><td>13</td><td>0</td><td>2</td><td>0</td><td>0</td><td>0</td><td>15</td><td>0</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT MAX(league_apps) FROM table_sql) = (SELECT league_apps FROM table_sql WHERE name = 'malcolm brown') \n             OR (SELECT MAX(league_apps) FROM table_sql) = (SELECT league_apps FROM table_sql WHERE name = 'peter hart') \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TN/test-1533.html": {
        "method": "Text2SQL",
        "subfolder": "TN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "False",
        "Actual_Answer": "False",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the suite life on deck won the teen pick show : comedy category of the hollywood teen tv awards</h3>\n<h3>Input Table: the suite life on deck</h3>\n<div class=\"step\">\n<table>\n<tr><td>year</td><td>award</td><td>category</td><td>recipient</td><td>result</td></tr><tr><td>2010</td><td>green globe film awards</td><td>outstanding actors asians in hollywood</td><td>brenda song</td><td>nominated</td></tr><tr><td>2010</td><td>2010 kids' choice awards</td><td>favorite tv show</td><td>the suite life on deck</td><td>nominated</td></tr><tr><td>2010</td><td>2010 kids' choice awards</td><td>favorite tv actor</td><td>cole sprouse</td><td>nominated</td></tr><tr><td>2010</td><td>2010 kids' choice awards</td><td>favorite tv actor</td><td>dylan sprouse</td><td>won</td></tr><tr><td>2010</td><td>hollywood teen tv awards</td><td>teen pick show : comedy</td><td>the suite life on deck</td><td>nominated</td></tr><tr><td>2010</td><td>hollywood teen tv awards</td><td>teen pick actress : comedy</td><td>debby ryan</td><td>nominated</td></tr><tr><td>2010</td><td>hollywood teen tv awards</td><td>teen pick actor : comedy</td><td>dylan sprouse</td><td>nominated</td></tr><tr><td>2011</td><td>2011 kids' choice awards</td><td>favorite tv show</td><td>the suite life on deck</td><td>nominated</td></tr><tr><td>2011</td><td>2011 kids' choice awards</td><td>favorite tv actor</td><td>cole sprouse</td><td>nominated</td></tr><tr><td>2011</td><td>2011 kids' choice awards</td><td>favorite tv actor</td><td>dylan sprouse</td><td>won</td></tr><tr><td>2011</td><td>2011 kids' choice awards</td><td>favorite tv sidekick</td><td>brenda song</td><td>nominated</td></tr><tr><td>2011</td><td>casting society of america</td><td>best casting children 's series</td><td>dana gergely brandi brice</td><td>won</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN COUNT(*) = 0 THEN 'FALSE' \n        ELSE 'TRUE' \n    END \nFROM table_sql \nWHERE year = 2010 \nAND award = 'hollywood teen tv awards' \nAND category = 'teen pick show : comedy' \nAND recipient = 'the suite life on deck' \nAND result = 'won';</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "TP/test-445.html": {
        "method": "Text2SQL",
        "subfolder": "TP",
        "LLM_analysis": "No",
        "Actual_Correctness": "Yes",
        "Model_Prediction": "True",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> the highest scoring team for the games that happened on the 18th of june was carlton</h3>\n<h3>Input Table: 1938 vfl season</h3>\n<div class=\"step\">\n<table>\n<tr><td>home_team</td><td>home_team_score</td><td>away_team</td><td>away_team_score</td><td>venue</td><td>crowd</td><td>date</td></tr><tr><td>geelong</td><td>11.23 (89)</td><td>hawthorn</td><td>6.13 (49)</td><td>corio oval</td><td>7000</td><td>1938-06-18</td></tr><tr><td>fitzroy</td><td>16.12 (108)</td><td>south melbourne</td><td>8.8 (56)</td><td>brunswick street oval</td><td>12000</td><td>1938-06-18</td></tr><tr><td>st kilda</td><td>14.12 (96)</td><td>melbourne</td><td>16.16 (112)</td><td>junction oval</td><td>14000</td><td>1938-06-18</td></tr><tr><td>richmond</td><td>15.14 (104)</td><td>essendon</td><td>15.9 (99)</td><td>punt road oval</td><td>20000</td><td>1938-06-18</td></tr><tr><td>footscray</td><td>13.9 (87)</td><td>collingwood</td><td>10.5 (65)</td><td>western oval</td><td>18000</td><td>1938-06-18</td></tr><tr><td>north melbourne</td><td>11.5 (71)</td><td>carlton</td><td>16.25 (121)</td><td>arden street oval</td><td>13000</td><td>1938-06-18</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT MAX(home_team_score) FROM table_sql WHERE date = '1938-06-18') = \n             (SELECT MAX(away_team_score) FROM table_sql WHERE date = '1938-06-18') \n        THEN 'FALSE' \n        ELSE 'TRUE' \n    END;</div>\n<h3>Prediction: True</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    },
    "FN/test-286.html": {
        "method": "Text2SQL",
        "subfolder": "FN",
        "LLM_analysis": "Yes",
        "Actual_Correctness": "No",
        "Model_Prediction": "False",
        "Actual_Answer": "True",
        "prompt_to_LLM": "\n    The Table Fact Verification (TabFact) model is working on verifying if a given Statement is TRUE or FALSE based on a given input Table.\n    \n    You are given an HTML file containing a Statement, Input Table, Prediction, and an Explanation clarifying the Prediction.\n    \n    Your task is to carefully analyze all the information and determine whether the Prediction is correct or not.\n    \n    Explanation Method: Text2SQL\n    \n        Text-to-SQL is a method that translates the statement into a single SQL query. The SQL query itself serves as the explanation for how the system arrives at its prediction.\n        The explanation contains:\n        The generated SQL command that will be directly applied to the table to generate the final prediction.\n        \n    \n    HTML content:\n    \n<html><head>\n<style>\nbody { font-family: Arial, sans-serif; margin: 20px; }\nh1 { text-align: center; }\n.cot-title { color: blue; }\n.pos-title { color: green; }\nh2 { color: black; text-align: left; }\nh3 { color: black; text-align: left; }\nh4 { color: darkslategray; }\ntable { width: 100%; border-collapse: collapse; margin: 20px 0; }\ntable, th, td { border: 1px solid #ddd; padding: 8px; }\nth { background-color: #f2f2f2; }\ntr:nth-child(even) { background-color: #f9f9f9; }\n.highlight { background-color: #ffffcc; }\n.true { color: green; }\n.false { color: red; }\n.highlighted-cell { background-color: yellow; cursor: pointer; }\n.step-title { background-color: #f1f1f1; color: #444; padding: 10px; margin: 10px 0; font-size: 18px; border-left: 4px solid #888; }\n.step { display: block; }\n.sql-command { background-color: #f0f0f0; padding: 10px; border-left: 4px solid #4CAF50; font-family: monospace; white-space: pre-wrap; }\n</style>\n</head><body>\n<hr>\n<h3><span>Statement:</span> jos\u00e9 couceiro was the head coach in set\u00fabal , and it was manuel machado in guimar\u00e3es</h3>\n<h3>Input Table: 2004 - 05 primeira liga</h3>\n<div class=\"step\">\n<table>\n<tr><td>club</td><td>head_coach</td><td>city</td><td>stadium</td><td>2003_-_2004_season</td></tr><tr><td>acad\u00e9mica de coimbra</td><td>jo\u00e3o carlos pereira</td><td>coimbra</td><td>est\u00e1dio cidade de coimbra</td><td>13th in the liga</td></tr><tr><td>belenenses</td><td>carlos carvalhal</td><td>lisbon</td><td>est\u00e1dio do restelo</td><td>15th in the liga</td></tr><tr><td>benfica</td><td>giovanni trapattoni</td><td>lisbon</td><td>est\u00e1dio da luz</td><td>2nd in the liga</td></tr><tr><td>boavista</td><td>jaime pacheco</td><td>porto</td><td>est\u00e1dio do bessa - s\u00e9culo xxi</td><td>8th in the liga</td></tr><tr><td>braga</td><td>jesualdo ferreira</td><td>braga</td><td>est\u00e1dio municipal de braga - axa</td><td>5th in the liga</td></tr><tr><td>estoril - praia</td><td>litos</td><td>estoril</td><td>est\u00e1dio ant\u00f3nio coimbra da mota</td><td>1st in the liga de honra</td></tr><tr><td>gil vicente</td><td>lu\u00eds campos</td><td>barcelos</td><td>est\u00e1dio cidade de barcelos</td><td>12th in the liga</td></tr><tr><td>uni\u00e3o de leiria</td><td>v\u00edtor pontes</td><td>leiria</td><td>est\u00e1dio dr magalh\u00e3es pessoa</td><td>10th in the liga</td></tr><tr><td>penafiel</td><td>manuel fernandes</td><td>penafiel</td><td>est\u00e1dio municipal 25 de abril</td><td>3rd in the liga de honra</td></tr><tr><td>mar\u00edtimo</td><td>manuel cajuda</td><td>funchal</td><td>est\u00e1dio dos barreiros</td><td>6th in the liga</td></tr><tr><td>nacional</td><td>casemiro mior</td><td>funchal</td><td>est\u00e1dio da madeira</td><td>4th in the liga</td></tr><tr><td>beira - mar</td><td>mick wadsworth</td><td>aveiro</td><td>est\u00e1dio municipal de aveiro</td><td>11th in the liga</td></tr><tr><td>moreirense</td><td>v\u00edtor oliveira</td><td>guimar\u00e3es</td><td>est\u00e1dio do moreirense</td><td>9th in the liga</td></tr><tr><td>porto</td><td>luigi delneri</td><td>porto</td><td>est\u00e1dio do drag\u00e3o</td><td>1st in the liga</td></tr><tr><td>sporting cp</td><td>jos\u00e9 peseiro</td><td>lisbon</td><td>est\u00e1dio jos\u00e9 alvalade - s\u00e9culo xxi</td><td>3rd in the liga</td></tr><tr><td>rio ave</td><td>carlos brito</td><td>vila do conde</td><td>est\u00e1dio dos arcos</td><td>7th in the liga</td></tr><tr><td>vit\u00f3ria de guimar\u00e3es</td><td>manuel machado</td><td>guimar\u00e3es</td><td>est\u00e1dio d afonso henriques</td><td>14th in the liga</td></tr><tr><td>vit\u00f3ria de set\u00fabal</td><td>jos\u00e9 couceiro</td><td>set\u00fabal</td><td>est\u00e1dio do bonfim</td><td>2nd in the liga de honra</td></tr>\n</table>\n</div>\n<h3>SQL Command:</h3>\n<div class=\"sql-command\">SELECT \n    CASE \n        WHEN (SELECT head_coach FROM table_sql WHERE city = 'set\u00fabal') = 'jos\u00e9 couceiro' \n             AND (SELECT head_coach FROM table_sql WHERE city = 'guimar\u00e3es') = 'manuel machado' \n        THEN 'TRUE' \n        ELSE 'FALSE' \n    END;</div>\n<h3>Prediction: False</h3>\n</body></html>\n\n    \n    Answer with 'No' or 'Yes' only.\n    \n    You MUST ignore the order of the options and answer based on the correctness of the Prediction!\n    "
    }
}